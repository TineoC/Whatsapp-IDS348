{"version":3,"file":"emoji-picker-react.cjs.production.min.js","sources":["../src/DomUtils/classNames.ts","../src/components/context/ElementRefContext.tsx","../src/types/exposedTypes.ts","../src/config/categoryConfig.ts","../src/config/config.ts","../src/components/context/PickerConfigContext.tsx","../src/config/useConfig.ts","../src/dataUtils/emojiSelectors.ts","../src/data/skinToneVariations.ts","../src/config/cdnUrls.ts","../src/dataUtils/alphaNumericEmojiIndex.ts","../src/hooks/useDebouncedState.ts","../src/components/context/PickerContext.tsx","../src/hooks/useInitialLoad.ts","../src/hooks/useDisallowedEmojis.ts","../src/hooks/useDisallowMouseMove.ts","../src/DomUtils/elementPositionInRow.ts","../src/components/body/EmojiVariationPicker.tsx","../src/components/Layout/Flex.tsx","../src/DomUtils/selectors.ts","../src/dataUtils/parseNativeEmoji.ts","../src/dataUtils/suggested.ts","../src/hooks/useCloseAllOpenToggles.ts","../src/DomUtils/focusElement.ts","../src/DomUtils/scrollTo.ts","../src/DomUtils/keyboardNavigation.ts","../src/hooks/useSetVariationPicker.ts","../src/hooks/useMouseDownHandlers.ts","../src/hooks/useFocus.ts","../src/hooks/useFilter.ts","../src/components/atoms/Button.tsx","../node_modules/style-inject/dist/style-inject.es.js","../src/components/emoji/Emoji.tsx","../src/components/body/EmojiCategory.tsx","../src/components/body/Suggested.tsx","../src/components/body/EmojiList.tsx","../src/hooks/useIsEmojiHidden.ts","../src/components/body/Body.tsx","../src/hooks/useOnScroll.ts","../src/components/footer/Preview.tsx","../src/hooks/useEmojiPreviewEvents.ts","../src/components/Layout/Relative.tsx","../src/hooks/useIsSearchMode.ts","../src/components/navigation/CategoryNavigation.tsx","../src/hooks/useScrollCategoryIntoView.ts","../src/hooks/useActiveCategoryScrollDetection.ts","../src/DomUtils/categoryNameFromDom.ts","../src/components/header/Search.tsx","../src/hooks/useKeyboardNavigation.ts","../src/components/header/SkinTonePicker.tsx","../src/components/header/Header.tsx","../src/DomUtils/getActiveElement.ts","../src/hooks/preloadEmoji.ts","../src/components/main/PickerMain.tsx","../src/hooks/useOnFocus.ts","../src/DomUtils/isDarkTheme.ts","../src/EmojiPickerReact.tsx","../src/components/ErrorBoundary.tsx","../src/components/emoji/ExportedEmoji.tsx","../src/index.tsx"],"sourcesContent":["export enum ClassNames {\n  hiddenOnSearch = 'epr-hidden-on-search',\n  searchActive = 'epr-search-active',\n  hidden = 'epr-hidden',\n  visible = 'epr-visible',\n  active = 'epr-active',\n  emoji = 'epr-emoji',\n  category = 'epr-emoji-category',\n  label = 'epr-emoji-category-label',\n  categoryContent = 'epr-emoji-category-content',\n  emojiHasVariatios = 'epr-emoji-has-variations',\n  scrollBody = 'epr-body',\n  emojiList = 'epr-emoji-list',\n  external = '__EmojiPicker__',\n  emojiPicker = 'EmojiPickerReact',\n}\n\nexport function asSelectors(...classNames: ClassNames[]): string {\n  return classNames.map((c) => `.${c}`).join('');\n}\n","import * as React from 'react';\n\nimport { NullableElement } from '../../DomUtils/selectors';\n\nexport function ElementRefContextProvider({\n  children\n}: {\n  children: React.ReactNode;\n}) {\n  const PickerMainRef = React.useRef<HTMLElement>(null);\n  const AnchoredEmojiRef = React.useRef<HTMLElement>(null);\n  const BodyRef = React.useRef<HTMLDivElement>(null);\n  const SearchInputRef = React.useRef<HTMLInputElement>(null);\n  const SkinTonePickerRef = React.useRef<HTMLDivElement>(null);\n  const CategoryNavigationRef = React.useRef<HTMLDivElement>(null);\n  const VariationPickerRef = React.useRef<HTMLDivElement>(null);\n\n  return (\n    <ElementRefContext.Provider\n      value={{\n        AnchoredEmojiRef,\n        BodyRef,\n        CategoryNavigationRef,\n        PickerMainRef,\n        SearchInputRef,\n        SkinTonePickerRef,\n        VariationPickerRef\n      }}\n    >\n      {children}\n    </ElementRefContext.Provider>\n  );\n}\n\nexport type ElementRef<\n  E extends HTMLElement = HTMLElement\n> = React.MutableRefObject<E | null>;\n\ntype ElementRefs = {\n  PickerMainRef: ElementRef;\n  AnchoredEmojiRef: ElementRef;\n  SkinTonePickerRef: ElementRef<HTMLDivElement>;\n  SearchInputRef: ElementRef<HTMLInputElement>;\n  BodyRef: ElementRef<HTMLDivElement>;\n  CategoryNavigationRef: ElementRef<HTMLDivElement>;\n  VariationPickerRef: ElementRef<HTMLDivElement>;\n};\n\nconst ElementRefContext = React.createContext<ElementRefs>({\n  AnchoredEmojiRef: React.createRef(),\n  BodyRef: React.createRef(),\n  CategoryNavigationRef: React.createRef(),\n  PickerMainRef: React.createRef(),\n  SearchInputRef: React.createRef(),\n  SkinTonePickerRef: React.createRef(),\n  VariationPickerRef: React.createRef()\n});\n\nfunction useElementRef() {\n  return React.useContext(ElementRefContext);\n}\n\nexport function usePickerMainRef() {\n  return useElementRef()['PickerMainRef'];\n}\n\nexport function useAnchoredEmojiRef() {\n  return useElementRef()['AnchoredEmojiRef'];\n}\n\nexport function useSetAnchoredEmojiRef(): (target: NullableElement) => void {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  return (target: NullableElement) => {\n    AnchoredEmojiRef.current = target;\n  };\n}\n\nexport function useBodyRef() {\n  return useElementRef()['BodyRef'];\n}\n\nexport function useSearchInputRef() {\n  return useElementRef()['SearchInputRef'];\n}\n\nexport function useSkinTonePickerRef() {\n  return useElementRef()['SkinTonePickerRef'];\n}\n\nexport function useCategoryNavigationRef() {\n  return useElementRef()['CategoryNavigationRef'];\n}\n\nexport function useVariationPickerRef() {\n  return useElementRef()['VariationPickerRef'];\n}\n","export type EmojiClickData = {\n  activeSkinTone: SkinTones;\n  unified: string;\n  unifiedWithoutSkinTone: string;\n  emoji: string;\n  names: string[];\n  getImageUrl: (emojiStyle: EmojiStyle) => string;\n};\n\nexport enum SuggestionMode {\n  RECENT = 'recent',\n  FREQUENT = 'frequent',\n}\n\nexport enum EmojiStyle {\n  NATIVE = 'native',\n  APPLE = 'apple',\n  TWITTER = 'twitter',\n  GOOGLE = 'google',\n  FACEBOOK = 'facebook',\n}\n\nexport enum Theme {\n  DARK = 'dark',\n  LIGHT = 'light',\n  AUTO = 'auto',\n}\n\nexport enum SkinTones {\n  NEUTRAL = 'neutral',\n  LIGHT = '1f3fb',\n  MEDIUM_LIGHT = '1f3fc',\n  MEDIUM = '1f3fd',\n  MEDIUM_DARK = '1f3fe',\n  DARK = '1f3ff',\n}\n\nexport enum Categories {\n  SUGGESTED = 'suggested',\n  SMILEYS_PEOPLE = 'smileys_people',\n  ANIMALS_NATURE = 'animals_nature',\n  FOOD_DRINK = 'food_drink',\n  TRAVEL_PLACES = 'travel_places',\n  ACTIVITIES = 'activities',\n  OBJECTS = 'objects',\n  SYMBOLS = 'symbols',\n  FLAGS = 'flags',\n}\n","import { Categories, SuggestionMode } from '../types/exposedTypes';\n\nexport { Categories };\n\nconst categoriesOrdered: Categories[] = [\n  Categories.SUGGESTED,\n  Categories.SMILEYS_PEOPLE,\n  Categories.ANIMALS_NATURE,\n  Categories.FOOD_DRINK,\n  Categories.TRAVEL_PLACES,\n  Categories.ACTIVITIES,\n  Categories.OBJECTS,\n  Categories.SYMBOLS,\n  Categories.FLAGS\n];\n\nexport const SuggestedRecent: CategoryConfig = {\n  name: 'Recently Used',\n  category: Categories.SUGGESTED\n};\n\nconst configByCategory: Record<Categories, CategoryConfig> = {\n  [Categories.SUGGESTED]: {\n    category: Categories.SUGGESTED,\n    name: 'Frequently Used'\n  },\n  [Categories.SMILEYS_PEOPLE]: {\n    category: Categories.SMILEYS_PEOPLE,\n    name: 'Smileys & People'\n  },\n  [Categories.ANIMALS_NATURE]: {\n    category: Categories.ANIMALS_NATURE,\n    name: 'Animals & Nature'\n  },\n  [Categories.FOOD_DRINK]: {\n    category: Categories.FOOD_DRINK,\n    name: 'Food & Drink'\n  },\n  [Categories.TRAVEL_PLACES]: {\n    category: Categories.TRAVEL_PLACES,\n    name: 'Travel & Places'\n  },\n  [Categories.ACTIVITIES]: {\n    category: Categories.ACTIVITIES,\n    name: 'Activities'\n  },\n  [Categories.OBJECTS]: {\n    category: Categories.OBJECTS,\n    name: 'Objects'\n  },\n  [Categories.SYMBOLS]: {\n    category: Categories.SYMBOLS,\n    name: 'Symbols'\n  },\n  [Categories.FLAGS]: {\n    category: Categories.FLAGS,\n    name: 'Flags'\n  }\n};\n\nexport function baseCategoriesConfig(\n  modifiers?: Record<Categories, CategoryConfig>\n): CategoriesConfig {\n  return categoriesOrdered.map(category => {\n    return {\n      ...configByCategory[category],\n      ...(modifiers && modifiers[category] && modifiers[category])\n    };\n  });\n}\n\nexport function categoryFromCategoryConfig(category: CategoryConfig) {\n  return category.category;\n}\n\nexport function categoryNameFromCategoryConfig(category: CategoryConfig) {\n  return category.name;\n}\n\nexport type CategoriesConfig = CategoryConfig[];\n\nexport type CategoryConfig = {\n  category: Categories;\n  name: string;\n};\n\nexport type UserCategoryConfig = Array<Categories | CategoryConfig>;\n\nexport function mergeCategoriesConfig(\n  userCategoriesConfig: UserCategoryConfig = [],\n  modifiers: CategoryConfigModifiers = {}\n): CategoriesConfig {\n  const extra = {} as Record<Categories, CategoryConfig>;\n\n  if (modifiers.suggestionMode === SuggestionMode.RECENT) {\n    extra[Categories.SUGGESTED] = SuggestedRecent;\n  }\n\n  const base = baseCategoriesConfig(extra);\n  if (!userCategoriesConfig?.length) {\n    return base;\n  }\n\n  return userCategoriesConfig.map(category => {\n    if (typeof category === 'string') {\n      return getBaseConfigByCategory(category, extra[category]);\n    }\n\n    return {\n      ...getBaseConfigByCategory(category.category, extra[category.category]),\n      ...category\n    };\n  });\n}\n\nfunction getBaseConfigByCategory(\n  category: Categories,\n  modifier: CategoryConfig = {} as CategoryConfig\n) {\n  return Object.assign(configByCategory[category], modifier);\n}\n\ntype CategoryConfigModifiers = {\n  suggestionMode?: SuggestionMode;\n};\n","import {\n  EmojiClickData,\n  EmojiStyle,\n  SkinTones,\n  SuggestionMode,\n  Theme,\n} from '../types/exposedTypes';\n\nimport {\n  CategoriesConfig,\n  baseCategoriesConfig,\n  mergeCategoriesConfig,\n} from './categoryConfig';\n\nexport function mergeConfig(\n  userConfig: PickerConfig = {}\n): PickerConfigInternal {\n  const base = basePickerConfig();\n\n  const previewConfig = Object.assign(\n    base.previewConfig,\n    userConfig.previewConfig ?? {}\n  );\n  const config = Object.assign(base, userConfig);\n\n  const categories = mergeCategoriesConfig(userConfig.categories, {\n    suggestionMode: config.suggestedEmojisMode,\n  });\n\n  return {\n    ...config,\n    categories,\n    previewConfig,\n  };\n}\n\nexport function basePickerConfig(): PickerConfigInternal {\n  return {\n    autoFocusSearch: true,\n    categories: baseCategoriesConfig(),\n    defaultSkinTone: SkinTones.NEUTRAL,\n    emojiStyle: EmojiStyle.APPLE,\n    emojiVersion: null,\n    height: 450,\n    lazyLoadEmojis: false,\n    onEmojiClick: function defaultOnClickHandler(\n      // @ts-ignore\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      emoji: EmojiClickData,\n      // @ts-ignore\n      // eslint-disable-next-line @typescript-eslint/no-unused-vars\n      event: MouseEvent\n    ) {},\n    previewConfig: {\n      ...basePreviewConfig,\n    },\n    searchPlaceHolder: 'Search',\n    skinTonesDisabled: false,\n    suggestedEmojisMode: SuggestionMode.FREQUENT,\n    theme: Theme.LIGHT,\n    width: 350,\n  };\n}\n\nexport type PickerConfigInternal = {\n  emojiVersion: string | null;\n  searchPlaceHolder: string;\n  defaultSkinTone: SkinTones;\n  skinTonesDisabled: boolean;\n  autoFocusSearch: boolean;\n  emojiStyle: EmojiStyle;\n  categories: CategoriesConfig;\n  onEmojiClick: (emoji: EmojiClickData, event: MouseEvent) => void;\n  theme: Theme;\n  suggestedEmojisMode: SuggestionMode;\n  lazyLoadEmojis: boolean;\n  previewConfig: PreviewConfig;\n  height: number;\n  width: number;\n};\n\nexport type PreviewConfig = {\n  defaultEmoji: string;\n  defaultCaption: string;\n  showPreview: boolean;\n};\n\nconst basePreviewConfig: PreviewConfig = {\n  defaultEmoji: '1f60a',\n  defaultCaption: \"What's your mood?\",\n  showPreview: true,\n};\n\ntype ConfigExternal = {\n  previewConfig: Partial<PreviewConfig>;\n} & Omit<PickerConfigInternal, 'previewConfig'>;\n\nexport type PickerConfig = Partial<ConfigExternal>;\n","import * as React from 'react';\n\nimport {\n  basePickerConfig,\n  mergeConfig,\n  PickerConfig,\n  PickerConfigInternal\n} from '../../config/config';\n\ntype Props = PickerConfig &\n  Readonly<{\n    children: React.ReactNode;\n  }>;\n\nconst ConfigContext = React.createContext<PickerConfigInternal>(\n  basePickerConfig()\n);\n\nexport function PickerConfigProvider({ children, ...config }: Props) {\n  return (\n    <ConfigContext.Provider value={mergeConfig(config)}>\n      {children}\n    </ConfigContext.Provider>\n  );\n}\n\nexport function usePickerConfig() {\n  return React.useContext(ConfigContext);\n}\n","import { isSystemDarkTheme } from '../DomUtils/isDarkTheme';\nimport { usePickerConfig } from '../components/context/PickerConfigContext';\nimport {\n  EmojiClickData,\n  EmojiStyle,\n  SkinTones,\n  SuggestionMode,\n  Theme,\n} from '../types/exposedTypes';\n\nimport { CategoriesConfig } from './categoryConfig';\nimport { PreviewConfig } from './config';\n\nexport function useSearchPlaceHolderConfig(): string {\n  const { searchPlaceHolder } = usePickerConfig();\n  return searchPlaceHolder;\n}\n\nexport function useDefaultSkinToneConfig(): SkinTones {\n  const { defaultSkinTone } = usePickerConfig();\n  return defaultSkinTone;\n}\n\nexport function useSkinTonesDisabledConfig(): boolean {\n  const { skinTonesDisabled } = usePickerConfig();\n  return skinTonesDisabled;\n}\n\nexport function useEmojiStyleConfig(): EmojiStyle {\n  const { emojiStyle } = usePickerConfig();\n  return emojiStyle;\n}\n\nexport function useAutoFocusSearchConfig(): boolean {\n  const { autoFocusSearch } = usePickerConfig();\n  return autoFocusSearch;\n}\n\nexport function useCategoriesConfig(): CategoriesConfig {\n  const { categories } = usePickerConfig();\n  return categories;\n}\n\nexport function useOnEmojiClickConfig(): (\n  emoji: EmojiClickData,\n  event: MouseEvent\n) => void {\n  const { onEmojiClick } = usePickerConfig();\n  return onEmojiClick;\n}\n\nexport function usePreviewConfig(): PreviewConfig {\n  const { previewConfig } = usePickerConfig();\n  return previewConfig;\n}\n\nexport function useThemeConfig(): Theme {\n  const { theme } = usePickerConfig();\n\n  if (theme === Theme.AUTO) {\n    return isSystemDarkTheme() ? Theme.DARK : Theme.LIGHT;\n  }\n\n  return theme;\n}\n\nexport function useSuggestedEmojisModeConfig(): SuggestionMode {\n  const { suggestedEmojisMode } = usePickerConfig();\n  return suggestedEmojisMode;\n}\n\nexport function useLazyLoadEmojisConfig(): boolean {\n  const { lazyLoadEmojis } = usePickerConfig();\n  return lazyLoadEmojis;\n}\n\nexport function usePickerSizeConfig(): { height: number; width: number } {\n  const { height, width } = usePickerConfig();\n  return { height, width };\n}\n\nexport function useEmojiVersionConfig(): string | null {\n  const { emojiVersion } = usePickerConfig();\n  return emojiVersion;\n}\n","import { Categories } from '../config/categoryConfig';\nimport { cdnUrl } from '../config/cdnUrls';\nimport emojis from '../data/emojis';\nimport skinToneVariations, {\n  skinTonesMapped,\n} from '../data/skinToneVariations';\nimport { EmojiStyle, SkinTones } from '../types/exposedTypes';\n\nimport { DataEmoji, DataEmojis } from './DataTypes';\n\nenum EmojiProperties {\n  name = 'n',\n  unified = 'u',\n  variations = 'v',\n  added_in = 'a',\n}\n\nexport function emojiNames(emoji: DataEmoji): string[] {\n  return emoji[EmojiProperties.name] ?? [];\n}\n\nexport function addedIn(emoji: DataEmoji): number {\n  return parseFloat(emoji[EmojiProperties.added_in]);\n}\n\nexport function emojiName(emoji: DataEmoji): string {\n  return emojiNames(emoji)[0];\n}\n\nexport function unifiedWithoutSkinTone(unified: string): string {\n  const splat = unified.split('-');\n  const [skinTone] = splat.splice(1, 1);\n\n  if (skinTonesMapped[skinTone]) {\n    return splat.join('-');\n  }\n\n  return unified;\n}\n\nexport function emojiUrl(\n  emojiStyle: EmojiStyle,\n  emoji: DataEmoji,\n  skinTone?: string\n): string {\n  return emojiUrlByUnified(emojiStyle, emojiUnified(emoji, skinTone));\n}\n\nexport function emojiUnified(emoji: DataEmoji, skinTone?: string): string {\n  const unified = emoji[EmojiProperties.unified];\n\n  if (!skinTone || !emojiHasVariations(emoji)) {\n    return unified;\n  }\n\n  return emojiVariationUnified(emoji, skinTone) ?? unified;\n}\n\nexport function emojisByCategory(category: Categories): DataEmojis {\n  // @ts-ignore\n  return emojis?.[category] ?? [];\n}\n\nexport function emojiUrlByUnified(\n  emojiStyle: EmojiStyle,\n  unified: string\n): string {\n  return `${cdnUrl(emojiStyle)}${unified}.png`;\n}\n\nexport function emojiVariations(emoji: DataEmoji): string[] {\n  return emoji[EmojiProperties.variations] ?? [];\n}\n\nexport function emojiHasVariations(emoji: DataEmoji): boolean {\n  return emojiVariations(emoji).length > 0;\n}\n\nexport function emojiVariationUnified(\n  emoji: DataEmoji,\n  skinTone?: string\n): string | undefined {\n  return skinTone\n    ? emojiVariations(emoji).find((variation) => variation.includes(skinTone))\n    : emojiUnified(emoji);\n}\n\nexport function emojiByUnified(unified?: string): DataEmoji | undefined {\n  if (!unified) {\n    return;\n  }\n\n  if (allEmojisByUnified[unified]) {\n    return allEmojisByUnified[unified];\n  }\n\n  const withoutSkinTone = unifiedWithoutSkinTone(unified);\n  return allEmojisByUnified[withoutSkinTone];\n}\n\nexport const allEmojis: DataEmojis = Object.values(emojis).flat();\n\nconst allEmojisByUnified: {\n  [unified: string]: DataEmoji;\n} = {};\n\nsetTimeout(() => {\n  allEmojis.reduce((allEmojis, Emoji) => {\n    allEmojis[emojiUnified(Emoji)] = Emoji;\n    return allEmojis;\n  }, allEmojisByUnified);\n});\n\nexport function activeVariationFromUnified(unified: string): SkinTones | null {\n  const [, suspectedSkinTone] = unified.split('-') as [string, SkinTones];\n  return skinToneVariations.includes(suspectedSkinTone)\n    ? suspectedSkinTone\n    : null;\n}\n","import { SkinTones } from '../types/exposedTypes';\n\nconst skinToneVariations = [\n  SkinTones.NEUTRAL,\n  SkinTones.LIGHT,\n  SkinTones.MEDIUM_LIGHT,\n  SkinTones.MEDIUM,\n  SkinTones.MEDIUM_DARK,\n  SkinTones.DARK\n];\n\nexport const skinTonesNamed = Object.entries(SkinTones).reduce(\n  (acc, [key, value]) => {\n    acc[value] = key;\n    return acc;\n  },\n  {} as Record<string, string>\n);\n\nexport const skinTonesMapped: Record<\n  string,\n  string\n> = skinToneVariations.reduce(\n  (mapped, skinTone) =>\n    Object.assign(mapped, {\n      [skinTone]: skinTone\n    }),\n  {}\n);\n\nexport default skinToneVariations;\n","import { EmojiStyle } from \"../types/exposedTypes\";\n\nconst CDN_URL_APPLE =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-apple/img/apple/64/';\nconst CDN_URL_FACEBOOK =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-facebook/img/facebook/64/';\nconst CDN_URL_TWITTER =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-twitter/img/twitter/64/';\nconst CDN_URL_GOOGLE =\n  'https://cdn.jsdelivr.net/npm/emoji-datasource-google/img/google/64/';\n\nexport function cdnUrl(emojiStyle: EmojiStyle): string {\n  switch (emojiStyle) {\n    case EmojiStyle.TWITTER:\n      return CDN_URL_TWITTER;\n    case EmojiStyle.GOOGLE:\n      return CDN_URL_GOOGLE;\n    case EmojiStyle.FACEBOOK:\n      return CDN_URL_FACEBOOK;\n    case EmojiStyle.APPLE:\n    default:\n      return CDN_URL_APPLE;\n  }\n}\n","import { DataEmoji } from './DataTypes';\nimport { allEmojis, emojiNames, emojiUnified } from './emojiSelectors';\n\nexport const alphaNumericEmojiIndex: BaseIndex = {};\n\nsetTimeout(() => {\n  allEmojis.reduce((searchIndex, emoji) => {\n    const joinedNameString = emojiNames(emoji)\n      .flat()\n      .join('')\n      .replace(/[^a-zA-Z\\d]/g, '')\n      .split('');\n\n    joinedNameString.forEach(char => {\n      searchIndex[char] = searchIndex[char] ?? {};\n\n      searchIndex[char][emojiUnified(emoji)] = emoji;\n    });\n    return searchIndex;\n  }, alphaNumericEmojiIndex as BaseIndex);\n});\n\ntype BaseIndex = Record<string, Record<string, DataEmoji>>;\n","import { useRef, useState } from 'react';\n\nexport function useDebouncedState<T>(\n  initialValue: T,\n  delay: number = 0\n): [T, (value: T) => Promise<T>] {\n  const [state, setState] = useState<T>(initialValue);\n  const timer = useRef<number | null>(null);\n\n  function debouncedSetState(value: T) {\n    return new Promise<T>(resolve => {\n      if (timer.current) {\n        clearTimeout(timer.current);\n      }\n\n      timer.current = window?.setTimeout(() => {\n        setState(value);\n        resolve(value);\n      }, delay);\n    });\n  }\n\n  return [state, debouncedSetState];\n}\n","import * as React from 'react';\nimport { useState } from 'react';\n\nimport { useDefaultSkinToneConfig } from '../../config/useConfig';\nimport { DataEmoji } from '../../dataUtils/DataTypes';\nimport { alphaNumericEmojiIndex } from '../../dataUtils/alphaNumericEmojiIndex';\nimport { useDebouncedState } from '../../hooks/useDebouncedState';\nimport { useDisallowedEmojis } from '../../hooks/useDisallowedEmojis';\nimport { FilterDict } from '../../hooks/useFilter';\nimport { useMarkInitialLoad } from '../../hooks/useInitialLoad';\nimport { SkinTones } from '../../types/exposedTypes';\n\nexport function PickerContextProvider({ children }: Props) {\n  const disallowedEmojis = useDisallowedEmojis();\n  const defaultSkinTone = useDefaultSkinToneConfig();\n\n  // Initialize the filter with the inititial dictionary\n  const filterRef = React.useRef<FilterState>(alphaNumericEmojiIndex);\n  const disallowClickRef = React.useRef<boolean>(false);\n  const disallowMouseRef = React.useRef<boolean>(false);\n  const disallowedEmojisRef = React.useRef<Record<string, boolean>>(\n    disallowedEmojis\n  );\n\n  const suggestedUpdateState = useDebouncedState(Date.now(), 200);\n  const searchTerm = useDebouncedState('', 100);\n  const skinToneFanOpenState = useState<boolean>(false);\n  const activeSkinTone = useState<SkinTones>(defaultSkinTone);\n  const activeCategoryState = useState<ActiveCategoryState>(null);\n  const emojisThatFailedToLoadState = useState<Set<string>>(new Set());\n  const emojiVariationPickerState = useState<DataEmoji | null>(null);\n  const [isPastInitialLoad, setIsPastInitialLoad] = useState(false);\n\n  useMarkInitialLoad(setIsPastInitialLoad);\n\n  return (\n    <PickerContext.Provider\n      value={{\n        activeCategoryState,\n        activeSkinTone,\n        disallowClickRef,\n        disallowMouseRef,\n        emojiVariationPickerState,\n        emojisThatFailedToLoadState,\n        filterRef,\n        isPastInitialLoad,\n        searchTerm,\n        skinToneFanOpenState,\n        suggestedUpdateState,\n        disallowedEmojisRef,\n      }}\n    >\n      {children}\n    </PickerContext.Provider>\n  );\n}\n\ntype ReactState<T> = [T, React.Dispatch<React.SetStateAction<T>>];\n\nconst PickerContext = React.createContext<{\n  searchTerm: [string, (term: string) => Promise<string>];\n  suggestedUpdateState: [number, (term: number) => void];\n  activeCategoryState: ReactState<ActiveCategoryState>;\n  activeSkinTone: ReactState<SkinTones>;\n  emojisThatFailedToLoadState: ReactState<Set<string>>;\n  isPastInitialLoad: boolean;\n  emojiVariationPickerState: ReactState<DataEmoji | null>;\n  skinToneFanOpenState: ReactState<boolean>;\n  filterRef: React.MutableRefObject<FilterState>;\n  disallowClickRef: React.MutableRefObject<boolean>;\n  disallowMouseRef: React.MutableRefObject<boolean>;\n  disallowedEmojisRef: React.MutableRefObject<Record<string, boolean>>;\n}>({\n  activeCategoryState: [null, () => {}],\n  activeSkinTone: [SkinTones.NEUTRAL, () => {}],\n  disallowClickRef: { current: false },\n  disallowMouseRef: { current: false },\n  disallowedEmojisRef: { current: {} },\n  emojiVariationPickerState: [null, () => {}],\n  emojisThatFailedToLoadState: [new Set(), () => {}],\n  filterRef: { current: {} },\n  isPastInitialLoad: true,\n  searchTerm: ['', () => new Promise<string>(() => undefined)],\n  skinToneFanOpenState: [false, () => {}],\n  suggestedUpdateState: [Date.now(), () => {}],\n});\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n}>;\n\nexport function useFilterRef() {\n  const { filterRef } = React.useContext(PickerContext);\n  return filterRef;\n}\n\nexport function useDisallowClickRef() {\n  const { disallowClickRef } = React.useContext(PickerContext);\n  return disallowClickRef;\n}\n\nexport function useDisallowMouseRef() {\n  const { disallowMouseRef } = React.useContext(PickerContext);\n  return disallowMouseRef;\n}\n\nexport function useSearchTermState() {\n  const { searchTerm } = React.useContext(PickerContext);\n  return searchTerm;\n}\n\nexport function useActiveSkinToneState(): [\n  SkinTones,\n  (skinTone: SkinTones) => void\n] {\n  const { activeSkinTone } = React.useContext(PickerContext);\n  return activeSkinTone;\n}\n\nexport function useEmojisThatFailedToLoadState() {\n  const { emojisThatFailedToLoadState } = React.useContext(PickerContext);\n  return emojisThatFailedToLoadState;\n}\n\nexport function useIsPastInitialLoad(): boolean {\n  const { isPastInitialLoad } = React.useContext(PickerContext);\n  return isPastInitialLoad;\n}\n\nexport function useEmojiVariationPickerState() {\n  const { emojiVariationPickerState } = React.useContext(PickerContext);\n  return emojiVariationPickerState;\n}\n\nexport function useSkinToneFanOpenState() {\n  const { skinToneFanOpenState } = React.useContext(PickerContext);\n  return skinToneFanOpenState;\n}\n\nexport function useDisallowedEmojisRef() {\n  const { disallowedEmojisRef } = React.useContext(PickerContext);\n  return disallowedEmojisRef;\n}\n\nexport function useUpdateSuggested(): [number, () => void] {\n  const { suggestedUpdateState } = React.useContext(PickerContext);\n\n  const [suggestedUpdated, setsuggestedUpdate] = suggestedUpdateState;\n  return [\n    suggestedUpdated,\n    function updateSuggested() {\n      setsuggestedUpdate(Date.now());\n    },\n  ];\n}\n\nexport type FilterState = Record<string, FilterDict>;\n\ntype ActiveCategoryState = null | string;\n","import { useEffect } from 'react';\nimport * as React from 'react';\n\nexport function useMarkInitialLoad(\n  dispatch: React.Dispatch<React.SetStateAction<boolean>>\n) {\n  useEffect(() => {\n    dispatch(true);\n  }, [dispatch]);\n}\n","import { useRef, useMemo } from 'react';\n\nimport { useEmojiVersionConfig } from '../config/useConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { addedIn, allEmojis, emojiUnified } from '../dataUtils/emojiSelectors';\n\nexport function useDisallowedEmojis() {\n  const DisallowedEmojisRef = useRef<Record<string, boolean>>({});\n  const emojiVersionConfig = useEmojiVersionConfig();\n\n  return useMemo(() => {\n    const emojiVersion = parseFloat(`${emojiVersionConfig}`);\n\n    if (!emojiVersionConfig || Number.isNaN(emojiVersion)) {\n      return DisallowedEmojisRef.current;\n    }\n\n    return allEmojis.reduce((disallowedEmojis, emoji) => {\n      if (addedInNewerVersion(emoji, emojiVersion)) {\n        disallowedEmojis[emojiUnified(emoji)] = true;\n      }\n\n      return disallowedEmojis;\n    }, DisallowedEmojisRef.current);\n  }, [emojiVersionConfig]);\n}\n\nfunction addedInNewerVersion(\n  emoji: DataEmoji,\n  supportedLevel: number\n): boolean {\n  return addedIn(emoji) > supportedLevel;\n}\n","import { useEffect } from 'react';\n\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { useDisallowMouseRef } from '../components/context/PickerContext';\n\nexport function useDisallowMouseMove() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function disallowMouseMove() {\n    DisallowMouseRef.current = true;\n  };\n}\n\nexport function useAllowMouseMove() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function allowMouseMove() {\n    DisallowMouseRef.current = false;\n  };\n}\n\nexport function useIsMouseDisallowed() {\n  const DisallowMouseRef = useDisallowMouseRef();\n  return function isMouseDisallowed() {\n    return DisallowMouseRef.current;\n  };\n}\n\nexport function useOnMouseMove() {\n  const BodyRef = useBodyRef();\n  const allowMouseMove = useAllowMouseMove();\n  const isMouseDisallowed = useIsMouseDisallowed();\n\n  useEffect(() => {\n    const bodyRef = BodyRef.current;\n    bodyRef?.addEventListener('mousemove', onMouseMove, {\n      passive: true\n    });\n\n    function onMouseMove() {\n      if (isMouseDisallowed()) {\n        allowMouseMove();\n      }\n    }\n    return () => {\n      bodyRef?.removeEventListener('mousemove', onMouseMove);\n    };\n  }, [BodyRef, allowMouseMove, isMouseDisallowed]);\n}\n","import { NullableElement } from './selectors';\n\nexport function elementCountInRow(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const parentWidth = parent.getBoundingClientRect().width;\n  const elementWidth = element.getBoundingClientRect().width;\n  return Math.floor(parentWidth / elementWidth);\n}\n\nexport function elementIndexInRow(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const elementWidth = element.getBoundingClientRect().width;\n  const elementLeft = element.getBoundingClientRect().left;\n  const parentLeft = parent.getBoundingClientRect().left;\n\n  return Math.floor((elementLeft - parentLeft) / elementWidth);\n}\n\nexport function rowNumber(\n  parent: NullableElement,\n  element: NullableElement\n): number {\n  if (!parent || !element) {\n    return 0;\n  }\n\n  const elementHeight = element.getBoundingClientRect().height;\n  const elementTop = element.getBoundingClientRect().top;\n  const parentTop = parent.getBoundingClientRect().top;\n  return Math.round((elementTop - parentTop) / elementHeight);\n}\n\nexport function hasNextRow(\n  parent: NullableElement,\n  element: NullableElement\n): boolean {\n  if (!parent || !element) {\n    return false;\n  }\n\n  const elementHeight = element.getBoundingClientRect().height;\n  const elementTop = element.getBoundingClientRect().top;\n  const parentTop = parent.getBoundingClientRect().top;\n  const parentHeight = parent.getBoundingClientRect().height;\n\n  return Math.round(elementTop - parentTop + elementHeight) < parentHeight;\n}\n\nfunction getRowElements(\n  elements: HTMLElement[],\n  row: number,\n  elementsInRow: number\n): HTMLElement[] {\n  if (row === -1) {\n    const lastRow = Math.floor((elements.length - 1) / elementsInRow);\n    const firstElementIndex = lastRow * elementsInRow;\n    const lastElementIndex = elements.length - 1;\n    return elements.slice(firstElementIndex, lastElementIndex + 1);\n  }\n\n  return elements.slice(row * elementsInRow, (row + 1) * elementsInRow);\n}\n\nfunction getNextRowElements(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number\n): HTMLElement[] {\n  const nextRow = currentRow + 1;\n\n  if (nextRow * elementsInRow > allElements.length) {\n    return [];\n  }\n\n  return getRowElements(allElements, nextRow, elementsInRow);\n}\n\nexport function getElementInRow(\n  elements: HTMLElement[],\n  row: number,\n  elementsInRow: number,\n  indexInRow: number\n): NullableElement {\n  const rowElements = getRowElements(elements, row, elementsInRow);\n  // get element, default to last\n  return rowElements[indexInRow] || rowElements[rowElements.length - 1] || null;\n}\n\nexport function getElementInNextRow(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number,\n  index: number\n): NullableElement {\n  const nextRowElements = getNextRowElements(\n    allElements,\n    currentRow,\n    elementsInRow\n  );\n\n  // return item in index, or last item in row\n  return (\n    nextRowElements[index] ||\n    nextRowElements[nextRowElements.length - 1] ||\n    null\n  );\n}\n\nexport function getElementInPrevRow(\n  allElements: HTMLElement[],\n  currentRow: number,\n  elementsInRow: number,\n  index: number\n): NullableElement {\n  const prevRowElements = getRowElements(\n    allElements,\n    currentRow - 1,\n    elementsInRow\n  );\n\n  // default to last\n  return (\n    prevRowElements[index] ||\n    prevRowElements[prevRowElements.length - 1] ||\n    null\n  );\n}\n\nexport function firstVisibleElementInContainer(\n  parent: NullableElement,\n  elements: HTMLElement[]\n): NullableElement {\n  if (!parent || !elements.length) {\n    return null;\n  }\n\n  const parentTop = parent.getBoundingClientRect().top;\n  const parentBottom = parent.getBoundingClientRect().bottom;\n\n  const visibleElements = elements.find(element => {\n    const elementTop = element.getBoundingClientRect().top;\n    const elementBottom = element.getBoundingClientRect().bottom;\n\n    return (\n      (elementTop >= parentTop && elementTop <= parentBottom) ||\n      (elementBottom >= parentTop && elementBottom <= parentBottom)\n    );\n  });\n\n  return visibleElements || null;\n}\n\nexport function hasNextElementSibling(element: HTMLElement) {\n  return !!element.nextElementSibling;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { focusElement } from '../../DomUtils/focusElement';\nimport {\n  buttonFromTarget,\n  elementHeight,\n  emojiTrueOffsetTop,\n  emojiTruOffsetLeft\n} from '../../DomUtils/selectors';\nimport { useEmojiStyleConfig } from '../../config/useConfig';\nimport { asEmoji } from '../../dataUtils/asEmoji';\nimport {\n  emojiHasVariations,\n  emojiUnified,\n  emojiVariations\n} from '../../dataUtils/emojiSelectors';\nimport {\n  useAnchoredEmojiRef,\n  useBodyRef,\n  useSetAnchoredEmojiRef,\n  useVariationPickerRef\n} from '../context/ElementRefContext';\nimport { useEmojiVariationPickerState } from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\nimport './EmojiVariationPicker.css';\n\nenum Direction {\n  Up,\n  Down\n}\n\nexport function EmojiVariationPicker() {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  const VariationPickerRef = useVariationPickerRef();\n  const [emoji] = useEmojiVariationPickerState();\n  const emojiStyle = useEmojiStyleConfig();\n  const { getTop, getMenuDirection } = useVariationPickerTop(\n    VariationPickerRef\n  );\n  const setAnchoredEmojiRef = useSetAnchoredEmojiRef();\n  const getPointerStyle = usePointerStyle(VariationPickerRef);\n\n  const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n  const visible =\n    emoji &&\n    button &&\n    emojiHasVariations(emoji) &&\n    button.classList.contains(ClassNames.emojiHasVariatios);\n\n  let top, pointerStyle;\n\n  if (!visible && AnchoredEmojiRef.current) {\n    focusElement(AnchoredEmojiRef.current);\n    setAnchoredEmojiRef(null);\n  } else {\n    top = getTop();\n    pointerStyle = getPointerStyle();\n  }\n\n  const safeEmoji = asEmoji(emoji);\n\n  return (\n    <div\n      ref={VariationPickerRef}\n      className={clsx('epr-emoji-variation-picker', {\n        visible,\n        'pointing-up': getMenuDirection() === Direction.Down\n      })}\n      style={{ top }}\n    >\n      {visible\n        ? [emojiUnified(safeEmoji)]\n            .concat(emojiVariations(safeEmoji))\n            .slice(0, 6)\n            .map(unified => (\n              <ClickableEmoji\n                key={unified}\n                emoji={safeEmoji}\n                unified={unified}\n                emojiStyle={emojiStyle}\n                showVariations={false}\n              />\n            ))\n        : null}\n      <div className=\"epr-emoji-pointer\" style={pointerStyle} />\n    </div>\n  );\n}\n\nfunction usePointerStyle(VariationPickerRef: React.RefObject<HTMLElement>) {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  return function getPointerStyle() {\n    const style: React.CSSProperties = {};\n    if (!VariationPickerRef.current) {\n      return style;\n    }\n\n    if (AnchoredEmojiRef.current) {\n      const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n      const offsetLeft = emojiTruOffsetLeft(button);\n\n      if (!button) {\n        return style;\n      }\n\n      // half of the button\n      style.left = offsetLeft + button?.clientWidth / 2;\n    }\n\n    return style;\n  };\n}\n\nfunction useVariationPickerTop(\n  VariationPickerRef: React.RefObject<HTMLElement>\n) {\n  const AnchoredEmojiRef = useAnchoredEmojiRef();\n  const BodyRef = useBodyRef();\n  let direction = Direction.Up;\n\n  return {\n    getMenuDirection,\n    getTop\n  };\n\n  function getMenuDirection() {\n    return direction;\n  }\n\n  function getTop() {\n    direction = Direction.Up;\n    let emojiOffsetTop = 0;\n\n    if (!VariationPickerRef.current) {\n      return 0;\n    }\n\n    const height = elementHeight(VariationPickerRef.current);\n\n    if (AnchoredEmojiRef.current) {\n      const bodyRef = BodyRef.current;\n      const button = buttonFromTarget(AnchoredEmojiRef.current);\n\n      const buttonHeight = elementHeight(button);\n\n      emojiOffsetTop = emojiTrueOffsetTop(button);\n\n      const scrollTop = bodyRef?.scrollTop ?? 0;\n\n      if (scrollTop > emojiOffsetTop - height) {\n        direction = Direction.Down;\n        emojiOffsetTop += buttonHeight + height;\n      }\n    }\n\n    return emojiOffsetTop - height;\n  }\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\nimport './Flex.css';\n\nexport enum FlexDirection {\n  ROW = 'FlexRow',\n  COLUMN = 'FlexColumn'\n}\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n  style?: React.CSSProperties;\n  direction?: FlexDirection;\n}>;\n\nexport default function Flex({\n  children,\n  className,\n  style = {},\n  direction = FlexDirection.ROW\n}: Props) {\n  return (\n    <div style={{ ...style }} className={clsx('Flex', className, direction)}>\n      {children}\n    </div>\n  );\n}\n","import { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  emojiByUnified,\n  unifiedWithoutSkinTone,\n} from '../dataUtils/emojiSelectors';\n\nimport { asSelectors, ClassNames } from './classNames';\nimport { firstVisibleElementInContainer } from './elementPositionInRow';\n\nexport type NullableElement = HTMLElement | null;\n\nexport const EmojiButtonSelector = `button${asSelectors(ClassNames.emoji)}`;\nexport const VisibleEmojiSelector = [\n  EmojiButtonSelector,\n  asSelectors(ClassNames.visible),\n  `:not(${asSelectors(ClassNames.hidden)})`,\n].join('');\n\nexport function buttonFromTarget(\n  emojiElement: NullableElement\n): HTMLButtonElement | null {\n  return emojiElement?.closest(EmojiButtonSelector) ?? null;\n}\n\nexport function isEmojiButton(element: NullableElement): boolean {\n  if (!element) {\n    return false;\n  }\n\n  return element.matches(EmojiButtonSelector);\n}\n\nexport function emojiFromElement(\n  element: NullableElement\n): [DataEmoji, string] | [] {\n  const originalUnified = originalUnifiedFromEmojiElement(element);\n  const unified = unifiedFromEmojiElement(element);\n\n  if (!originalUnified) {\n    return [];\n  }\n\n  const emoji = emojiByUnified(originalUnified);\n\n  if (!emoji) {\n    return [];\n  }\n\n  return [emoji, unified as string];\n}\n\nexport function isEmojiElement(element: NullableElement): boolean {\n  return Boolean(\n    element?.matches(EmojiButtonSelector) ||\n      element?.parentElement?.matches(EmojiButtonSelector)\n  );\n}\n\nexport function categoryLabelFromCategory(\n  category: NullableElement\n): NullableElement {\n  return category?.querySelector(asSelectors(ClassNames.label)) ?? null;\n}\n\nexport function closestCategoryLabel(\n  element: NullableElement\n): NullableElement {\n  const category = closestCategory(element);\n  return categoryLabelFromCategory(category);\n}\n\nexport function elementHeight(element: NullableElement): number {\n  return element?.clientHeight ?? 0;\n}\n\nexport function emojiTrueOffsetTop(element: NullableElement): number {\n  if (!element) {\n    return 0;\n  }\n\n  const button = buttonFromTarget(element);\n  const category = closestCategory(button);\n\n  // compensate for the label height\n  const labelHeight = categoryLabelHeight(category);\n\n  return elementOffsetTop(button) + elementOffsetTop(category) + labelHeight;\n}\n\nexport function categoryLabelHeight(category: NullableElement): number {\n  if (!category) {\n    return 0;\n  }\n\n  const categoryWithoutLabel = category.querySelector(\n    asSelectors(ClassNames.categoryContent)\n  );\n\n  return (\n    (category?.clientHeight ?? 0) - (categoryWithoutLabel?.clientHeight ?? 0)\n  );\n}\n\nexport function isEmojiBehindLabel(emoji: NullableElement): boolean {\n  if (!emoji) {\n    return false;\n  }\n\n  return (\n    emojiDistanceFromScrollTop(emoji) <\n    categoryLabelHeight(closestCategory(emoji))\n  );\n}\n\nexport function queryScrollBody(root: NullableElement): NullableElement {\n  return root\n    ? root.matches(asSelectors(ClassNames.scrollBody))\n      ? root\n      : root.querySelector(asSelectors(ClassNames.scrollBody))\n    : null;\n}\n\nexport function emojiDistanceFromScrollTop(emoji: NullableElement): number {\n  if (!emoji) {\n    return 0;\n  }\n\n  return emojiTrueOffsetTop(emoji) - (closestScrollBody(emoji)?.scrollTop ?? 0);\n}\n\nexport function closestScrollBody(element: NullableElement): NullableElement {\n  if (!element) {\n    return null;\n  }\n\n  return element.closest(asSelectors(ClassNames.scrollBody)) ?? null;\n}\n\nexport function emojiTruOffsetLeft(element: NullableElement): number {\n  const button = buttonFromTarget(element);\n  const category = closestCategory(button);\n\n  return elementOffsetLeft(button) + elementOffsetLeft(category);\n}\n\nfunction elementOffsetTop(element: NullableElement): number {\n  return element?.offsetTop ?? 0;\n}\n\nfunction elementOffsetLeft(element: NullableElement): number {\n  return element?.offsetLeft ?? 0;\n}\n\nexport function unifiedFromEmojiElement(emoji: NullableElement): string | null {\n  return elementDataSetKey(buttonFromTarget(emoji), 'unified') ?? null;\n}\n\nexport function originalUnifiedFromEmojiElement(\n  emoji: NullableElement\n): string | null {\n  const unified = unifiedFromEmojiElement(emoji);\n\n  if (unified) {\n    return unifiedWithoutSkinTone(unified);\n  }\n  return null;\n}\n\nfunction elementDataSetKey(\n  element: NullableElement,\n  key: string\n): string | null {\n  return elementDataSet(element)[key] ?? null;\n}\n\nfunction elementDataSet(element: NullableElement): DOMStringMap {\n  return element?.dataset ?? {};\n}\n\nexport function isVisibleEmoji(element: HTMLElement) {\n  return element.classList.contains(ClassNames.visible);\n}\n\nexport function isHidden(element: NullableElement) {\n  if (!element) return true;\n\n  return element.classList.contains(ClassNames.hidden);\n}\n\nexport function allVisibleEmojis(parent: NullableElement) {\n  if (!parent) {\n    return [];\n  }\n\n  return Array.from(\n    parent.querySelectorAll(VisibleEmojiSelector)\n  ) as HTMLElement[];\n}\n\nexport function lastVisibleEmoji(element: NullableElement): NullableElement {\n  if (!element) return null;\n\n  const allEmojis = allVisibleEmojis(element);\n  const [last] = allEmojis.slice(-1);\n  if (!last) {\n    return null;\n  }\n\n  if (!isVisibleEmoji(last)) {\n    return prevVisibleEmoji(last);\n  }\n\n  return last;\n}\n\nexport function nextVisibleEmoji(element: HTMLElement): NullableElement {\n  const next = element.nextElementSibling as HTMLElement;\n\n  if (!next) {\n    return firstVisibleEmoji(nextCategory(element));\n  }\n\n  if (!isVisibleEmoji(next)) {\n    return nextVisibleEmoji(next);\n  }\n\n  return next;\n}\n\nexport function prevVisibleEmoji(element: HTMLElement): NullableElement {\n  const prev = element.previousElementSibling as HTMLElement;\n\n  if (!prev) {\n    return lastVisibleEmoji(prevCategory(element));\n  }\n\n  if (!isVisibleEmoji(prev)) {\n    return prevVisibleEmoji(prev);\n  }\n\n  return prev;\n}\n\nexport function firstVisibleEmoji(parent: NullableElement) {\n  if (!parent) {\n    return null;\n  }\n\n  const allEmojis = allVisibleEmojis(parent);\n\n  return firstVisibleElementInContainer(parent, allEmojis);\n}\n\nexport function prevCategory(element: NullableElement): NullableElement {\n  const category = closestCategory(element);\n\n  if (!category) {\n    return null;\n  }\n\n  const prev = category.previousElementSibling as HTMLElement;\n\n  if (!prev) {\n    return null;\n  }\n\n  if (isHidden(prev)) {\n    return prevCategory(prev);\n  }\n\n  return prev;\n}\n\nexport function nextCategory(element: NullableElement): NullableElement {\n  const category = closestCategory(element);\n\n  if (!category) {\n    return null;\n  }\n\n  const next = category.nextElementSibling as HTMLElement;\n\n  if (!next) {\n    return null;\n  }\n\n  if (isHidden(next)) {\n    return nextCategory(next);\n  }\n\n  return next;\n}\n\nexport function closestCategory(element: NullableElement) {\n  if (!element) {\n    return null;\n  }\n  return element.closest(asSelectors(ClassNames.category)) as HTMLElement;\n}\n\nexport function closestCategoryContent(element: NullableElement) {\n  if (!element) {\n    return null;\n  }\n  return element.closest(\n    asSelectors(ClassNames.categoryContent)\n  ) as HTMLElement;\n}\n","export function parseNativeEmoji(unified: string): string {\n  return unified\n    .split('-')\n    .map(hex => String.fromCodePoint(parseInt(hex, 16)))\n    .join('');\n}\n","import { SkinTones, SuggestionMode } from '../types/exposedTypes';\n\nimport { DataEmoji } from './DataTypes';\nimport { emojiUnified } from './emojiSelectors';\n\nconst SUGGESTED_LS_KEY = 'epr_suggested';\n\ntype SuggestedItem = {\n  unified: string;\n  original: string;\n  count: number;\n};\n\ntype Suggested = SuggestedItem[];\n\nexport function getsuggested(mode?: SuggestionMode): Suggested {\n  try {\n    if (!window?.localStorage) {\n      return [];\n    }\n    const recent = JSON.parse(\n      window?.localStorage.getItem(SUGGESTED_LS_KEY) ?? '[]'\n    ) as Suggested;\n\n    if (mode === SuggestionMode.FREQUENT) {\n      return recent.sort((a, b) => b.count - a.count);\n    }\n\n    return recent;\n  } catch {\n    return [];\n  }\n}\n\nexport function setsuggested(emoji: DataEmoji, skinTone: SkinTones) {\n  const recent = getsuggested();\n\n  const unified = emojiUnified(emoji, skinTone);\n  const originalUnified = emojiUnified(emoji);\n\n  let existing = recent.find(({ unified: u }) => u === unified);\n\n  let nextList: SuggestedItem[];\n\n  if (existing) {\n    nextList = [existing].concat(recent.filter(i => i !== existing));\n  } else {\n    existing = {\n      unified,\n      original: originalUnified,\n      count: 0\n    };\n    nextList = [existing, ...recent];\n  }\n\n  existing.count++;\n\n  nextList.length = Math.min(nextList.length, 14);\n\n  try {\n    window?.localStorage.setItem(SUGGESTED_LS_KEY, JSON.stringify(nextList));\n    // Prevents the change from being seen immediately.\n  } catch {\n    // ignore\n  }\n}\n","import { useCallback } from 'react';\n\nimport {\n  useEmojiVariationPickerState,\n  useSkinToneFanOpenState\n} from '../components/context/PickerContext';\n\nexport function useCloseAllOpenToggles() {\n  const [variationPicker, setVariationPicker] = useEmojiVariationPickerState();\n  const [skinToneFanOpen, setSkinToneFanOpen] = useSkinToneFanOpenState();\n\n  const closeAllOpenToggles = useCallback(() => {\n    if (variationPicker) {\n      setVariationPicker(null);\n    }\n\n    if (skinToneFanOpen) {\n      setSkinToneFanOpen(false);\n    }\n  }, [\n    variationPicker,\n    skinToneFanOpen,\n    setVariationPicker,\n    setSkinToneFanOpen\n  ]);\n\n  return closeAllOpenToggles;\n}\n\nexport function useHasOpenToggles() {\n  const [variationPicker] = useEmojiVariationPickerState();\n  const [skinToneFanOpen] = useSkinToneFanOpenState();\n\n  return function hasOpenToggles() {\n    return !!variationPicker || skinToneFanOpen;\n  };\n}\n","import { NullableElement } from './selectors';\n\nexport function focusElement(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    element.focus();\n  });\n}\n\nexport function focusPrevElementSibling(element: NullableElement) {\n  if (!element) return;\n\n  const prev = element.previousElementSibling as HTMLElement;\n\n  focusElement(prev);\n}\n\nexport function focusNextElementSibling(element: NullableElement) {\n  if (!element) return;\n\n  const next = element.nextElementSibling as HTMLElement;\n\n  focusElement(next);\n}\n\nexport function focusFirstElementChild(element: NullableElement) {\n  if (!element) return;\n\n  const first = element.firstElementChild as HTMLElement;\n\n  focusElement(first);\n}\n","import { useCallback } from 'react';\n\nimport { useBodyRef } from '../components/context/ElementRefContext';\n\nimport {\n  categoryLabelHeight,\n  closestCategory,\n  closestScrollBody,\n  emojiDistanceFromScrollTop,\n  isEmojiBehindLabel,\n  NullableElement,\n  queryScrollBody\n} from './selectors';\n\nexport function scrollTo(root: NullableElement, top: number = 0) {\n  const $eprBody = queryScrollBody(root);\n\n  if (!$eprBody) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    $eprBody.scrollTop = top + 1;\n  });\n}\n\nexport function scrollBy(root: NullableElement, by: number): void {\n  const $eprBody = queryScrollBody(root);\n\n  if (!$eprBody) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    $eprBody.scrollTop = $eprBody.scrollTop + by;\n  });\n}\n\nexport function useScrollTo() {\n  const BodyRef = useBodyRef();\n\n  return useCallback(\n    (top: number) => {\n      requestAnimationFrame(() => {\n        if (BodyRef.current) {\n          BodyRef.current.scrollTop = top;\n        }\n      });\n    },\n    [BodyRef]\n  );\n}\n\nexport function scrollEmojiAboveLabel(emoji: NullableElement) {\n  if (!isEmojiBehindLabel(emoji)) {\n    return;\n  }\n\n  const scrollBody = closestScrollBody(emoji);\n  const by = emojiDistanceFromScrollTop(emoji);\n  scrollBy(scrollBody, -(categoryLabelHeight(closestCategory(emoji)) - by));\n}\n","import {\n  elementCountInRow,\n  elementIndexInRow,\n  getElementInNextRow,\n  getElementInPrevRow,\n  getElementInRow,\n  hasNextRow,\n  rowNumber\n} from './elementPositionInRow';\nimport { focusElement } from './focusElement';\nimport { scrollEmojiAboveLabel } from './scrollTo';\nimport {\n  allVisibleEmojis,\n  closestCategory,\n  firstVisibleEmoji,\n  lastVisibleEmoji,\n  nextCategory,\n  nextVisibleEmoji,\n  NullableElement,\n  prevCategory,\n  prevVisibleEmoji,\n  closestCategoryContent\n} from './selectors';\n\nexport function focusFirstVisibleEmoji(parent: NullableElement) {\n  const emoji = firstVisibleEmoji(parent);\n  focusElement(emoji);\n  scrollEmojiAboveLabel(emoji);\n}\n\nexport function focusAndClickFirstVisibleEmoji(parent: NullableElement) {\n  const firstEmoji = firstVisibleEmoji(parent);\n\n  focusElement(firstEmoji);\n  firstEmoji?.click();\n}\n\nexport function focusLastVisibleEmoji(parent: NullableElement) {\n  focusElement(lastVisibleEmoji(parent));\n}\n\nexport function focusNextVisibleEmoji(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const next = nextVisibleEmoji(element);\n\n  if (!next) {\n    return focusFirstVisibleEmoji(nextCategory(element));\n  }\n\n  focusElement(next);\n  scrollEmojiAboveLabel(next);\n}\n\nexport function focusPrevVisibleEmoji(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const prev = prevVisibleEmoji(element);\n\n  if (!prev) {\n    return focusLastVisibleEmoji(prevCategory(element));\n  }\n\n  focusElement(prev);\n  scrollEmojiAboveLabel(prev);\n}\n\nexport function focusVisibleEmojiOneRowUp(\n  element: NullableElement,\n  exitUp: () => void\n) {\n  if (!element) {\n    return;\n  }\n\n  const prev = visibleEmojiOneRowUp(element);\n\n  if (!prev) {\n    return exitUp();\n  }\n\n  focusElement(prev);\n  scrollEmojiAboveLabel(prev);\n}\n\nexport function focusVisibleEmojiOneRowDown(element: NullableElement) {\n  if (!element) {\n    return;\n  }\n\n  const next = visibleEmojiOneRowDown(element);\n\n  return focusElement(next);\n}\n\nfunction visibleEmojiOneRowUp(element: HTMLElement) {\n  if (!element) {\n    return null;\n  }\n\n  const categoryContent = closestCategoryContent(element);\n  const category = closestCategory(categoryContent);\n  const indexInRow = elementIndexInRow(categoryContent, element);\n  const row = rowNumber(categoryContent, element);\n  const countInRow = elementCountInRow(categoryContent, element);\n\n  if (row === 0) {\n    const prevVisibleCategory = prevCategory(category);\n\n    if (!prevVisibleCategory) {\n      return null;\n    }\n\n    return getElementInRow(\n      allVisibleEmojis(prevVisibleCategory),\n      -1, // last row\n      countInRow,\n      indexInRow\n    );\n  }\n\n  return getElementInPrevRow(\n    allVisibleEmojis(categoryContent),\n    row,\n    countInRow,\n    indexInRow\n  );\n}\n\nfunction visibleEmojiOneRowDown(element: HTMLElement) {\n  if (!element) {\n    return null;\n  }\n\n  const categoryContent = closestCategoryContent(element);\n  const category = closestCategory(categoryContent);\n  const indexInRow = elementIndexInRow(categoryContent, element);\n  const row = rowNumber(categoryContent, element);\n  const countInRow = elementCountInRow(categoryContent, element);\n  if (!hasNextRow(categoryContent, element)) {\n    const nextVisibleCategory = nextCategory(category);\n\n    if (!nextVisibleCategory) {\n      return null;\n    }\n\n    return getElementInRow(\n      allVisibleEmojis(nextVisibleCategory),\n      0,\n      countInRow,\n      indexInRow\n    );\n  }\n\n  const itemInNextRow = getElementInNextRow(\n    allVisibleEmojis(categoryContent),\n    row,\n    countInRow,\n    indexInRow\n  );\n\n  return itemInNextRow;\n}\n","import { focusFirstVisibleEmoji } from '../DomUtils/keyboardNavigation';\nimport { emojiFromElement, NullableElement } from '../DomUtils/selectors';\nimport {\n  useSetAnchoredEmojiRef,\n  useVariationPickerRef\n} from '../components/context/ElementRefContext';\nimport { useEmojiVariationPickerState } from '../components/context/PickerContext';\n\nexport default function useSetVariationPicker() {\n  const setAnchoredEmojiRef = useSetAnchoredEmojiRef();\n  const [, setEmojiVariationPicker] = useEmojiVariationPickerState();\n  const VariationPickerRef = useVariationPickerRef();\n\n  return function setVariationPicker(element: NullableElement) {\n    const [emoji] = emojiFromElement(element);\n\n    if (!emoji) {\n      return;\n    }\n\n    setAnchoredEmojiRef(element);\n    setEmojiVariationPicker(emoji);\n\n    requestAnimationFrame(() => {\n      focusFirstVisibleEmoji(VariationPickerRef.current);\n    });\n  };\n}\n","import * as React from 'react';\nimport { useEffect, useRef } from 'react';\n\nimport {\n  emojiFromElement,\n  isEmojiElement,\n  NullableElement\n} from '../DomUtils/selectors';\nimport {\n  useActiveSkinToneState,\n  useDisallowClickRef,\n  useEmojiVariationPickerState,\n  useUpdateSuggested\n} from '../components/context/PickerContext';\nimport { useOnEmojiClickConfig } from '../config/useConfig';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  activeVariationFromUnified,\n  emojiHasVariations,\n  emojiNames,\n  emojiUnified,\n  emojiUrlByUnified\n} from '../dataUtils/emojiSelectors';\nimport { parseNativeEmoji } from '../dataUtils/parseNativeEmoji';\nimport { setsuggested } from '../dataUtils/suggested';\nimport { EmojiClickData, EmojiStyle, SkinTones } from '../types/exposedTypes';\n\nimport { useCloseAllOpenToggles } from './useCloseAllOpenToggles';\nimport useSetVariationPicker from './useSetVariationPicker';\n\nexport function useMouseDownHandlers(\n  BodyRef: React.MutableRefObject<NullableElement>\n) {\n  const mouseDownTimerRef = useRef<undefined | number>();\n  const setVariationPicker = useSetVariationPicker();\n  const disallowClickRef = useDisallowClickRef();\n  const [, setEmojiVariationPicker] = useEmojiVariationPickerState();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const [activeSkinTone] = useActiveSkinToneState();\n  const onEmojiClick = useOnEmojiClickConfig();\n  const [, updateSuggested] = useUpdateSuggested();\n\n  const onClick = React.useCallback(\n    function onClick(event: MouseEvent) {\n      if (disallowClickRef.current) {\n        return;\n      }\n\n      closeAllOpenToggles();\n\n      const [emoji, unified] = emojiFromEvent(event);\n\n      if (!emoji || !unified) {\n        return;\n      }\n\n      const skinToneToUse =\n        activeVariationFromUnified(unified) || activeSkinTone;\n\n      updateSuggested();\n      setsuggested(emoji, skinToneToUse);\n      onEmojiClick(emojiClickOutput(emoji, skinToneToUse), event);\n    },\n    [\n      activeSkinTone,\n      closeAllOpenToggles,\n      disallowClickRef,\n      onEmojiClick,\n      updateSuggested\n    ]\n  );\n\n  const onMouseDown = React.useCallback(\n    function onMouseDown(event: MouseEvent) {\n      if (mouseDownTimerRef.current) {\n        clearTimeout(mouseDownTimerRef.current);\n      }\n\n      const [emoji] = emojiFromEvent(event);\n\n      if (!emoji || !emojiHasVariations(emoji)) {\n        return;\n      }\n\n      mouseDownTimerRef.current = window?.setTimeout(() => {\n        disallowClickRef.current = true;\n        mouseDownTimerRef.current = undefined;\n        closeAllOpenToggles();\n        setVariationPicker(event.target as HTMLElement);\n        setEmojiVariationPicker(emoji);\n      }, 500);\n    },\n    [\n      disallowClickRef,\n      closeAllOpenToggles,\n      setVariationPicker,\n      setEmojiVariationPicker\n    ]\n  );\n  const onMouseUp = React.useCallback(\n    function onMouseUp() {\n      if (mouseDownTimerRef.current) {\n        clearTimeout(mouseDownTimerRef.current);\n        mouseDownTimerRef.current = undefined;\n      } else if (disallowClickRef.current) {\n        // The problem we're trying to overcome here\n        // is that the emoji has both mouseup and click events\n        // and when releasing a mouseup event\n        // the click gets triggered too\n        // So we're disallowing the click event for a short time\n\n        requestAnimationFrame(() => {\n          disallowClickRef.current = false;\n        });\n      }\n    },\n    [disallowClickRef]\n  );\n\n  useEffect(() => {\n    if (!BodyRef.current) {\n      return;\n    }\n    const bodyRef = BodyRef.current;\n    bodyRef.addEventListener('click', onClick, {\n      passive: true\n    });\n\n    bodyRef.addEventListener('mousedown', onMouseDown, {\n      passive: true\n    });\n    bodyRef.addEventListener('mouseup', onMouseUp, {\n      passive: true\n    });\n\n    return () => {\n      bodyRef?.removeEventListener('click', onClick);\n      bodyRef?.removeEventListener('mousedown', onMouseDown);\n      bodyRef?.removeEventListener('mouseup', onMouseUp);\n    };\n  }, [BodyRef, onClick, onMouseDown, onMouseUp]);\n}\n\nfunction emojiFromEvent(event: MouseEvent): [DataEmoji, string] | [] {\n  const target = event?.target as HTMLElement;\n  if (!isEmojiElement(target)) {\n    return [];\n  }\n\n  return emojiFromElement(target);\n}\n\nfunction emojiClickOutput(\n  emoji: DataEmoji,\n  activeSkinTone: SkinTones\n): EmojiClickData {\n  const unified = emojiUnified(emoji, activeSkinTone);\n  return {\n    activeSkinTone,\n    emoji: parseNativeEmoji(unified),\n    getImageUrl(emojiStyle: EmojiStyle) {\n      return emojiUrlByUnified(emojiStyle, unified);\n    },\n    names: emojiNames(emoji),\n    unified,\n    unifiedWithoutSkinTone: emojiUnified(emoji)\n  };\n}\n","import { useCallback } from 'react';\n\nimport { focusElement, focusFirstElementChild } from '../DomUtils/focusElement';\nimport {\n  useCategoryNavigationRef,\n  useSearchInputRef,\n  useSkinTonePickerRef\n} from '../components/context/ElementRefContext';\n\nexport function useFocusSearchInput() {\n  const SearchInputRef = useSearchInputRef();\n\n  return useCallback(() => {\n    focusElement(SearchInputRef.current);\n  }, [SearchInputRef]);\n}\n\nexport function useFocusSkinTonePicker() {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n\n  return useCallback(() => {\n    if (!SkinTonePickerRef.current) {\n      return;\n    }\n\n    focusFirstElementChild(SkinTonePickerRef.current);\n  }, [SkinTonePickerRef]);\n}\n\nexport function useFocusCategoryNavigation() {\n  const CategoryNavigationRef = useCategoryNavigationRef();\n\n  return useCallback(() => {\n    if (!CategoryNavigationRef.current) {\n      return;\n    }\n\n    focusFirstElementChild(CategoryNavigationRef.current);\n  }, [CategoryNavigationRef]);\n}\n","import { scrollTo } from '../DomUtils/scrollTo';\nimport {\n  usePickerMainRef,\n  useSearchInputRef,\n} from '../components/context/ElementRefContext';\nimport {\n  FilterState,\n  useFilterRef,\n  useSearchTermState,\n} from '../components/context/PickerContext';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiNames } from '../dataUtils/emojiSelectors';\n\nimport { useFocusSearchInput } from './useFocus';\n\nfunction useSetFilterRef() {\n  const filterRef = useFilterRef();\n\n  return function setFilter(\n    setter: FilterState | ((current: FilterState) => FilterState)\n  ): void {\n    if (typeof setter === 'function') {\n      return setFilter(setter(filterRef.current));\n    }\n\n    filterRef.current = setter;\n  };\n}\n\nexport function useClearSearch() {\n  const applySearch = useApplySearch();\n  const SearchInputRef = useSearchInputRef();\n  const focusSearchInput = useFocusSearchInput();\n\n  return function clearSearch() {\n    if (SearchInputRef.current) {\n      SearchInputRef.current.value = '';\n    }\n\n    applySearch('');\n    focusSearchInput();\n  };\n}\n\nexport function useAppendSearch() {\n  const SearchInputRef = useSearchInputRef();\n  const applySearch = useApplySearch();\n\n  return function appendSearch(str: string) {\n    if (SearchInputRef.current) {\n      SearchInputRef.current.value = `${SearchInputRef.current.value}${str}`;\n      applySearch(getNormalizedSearchTerm(SearchInputRef.current.value));\n    } else {\n      applySearch(getNormalizedSearchTerm(str));\n    }\n  };\n}\n\nexport function useFilter() {\n  const SearchInputRef = useSearchInputRef();\n  const filterRef = useFilterRef();\n  const setFilterRef = useSetFilterRef();\n  const applySearch = useApplySearch();\n\n  const [searchTerm] = useSearchTermState();\n\n  return {\n    onChange,\n    searchTerm,\n    SearchInputRef,\n  };\n\n  function onChange(inputValue: string) {\n    const filter = filterRef.current;\n\n    const nextValue = inputValue.toLowerCase();\n\n    if (filter?.[nextValue] || nextValue.length <= 1) {\n      return applySearch(nextValue);\n    }\n\n    const longestMatch = findLongestMatch(nextValue, filter);\n\n    if (!longestMatch) {\n      // Can we even get here?\n      // If so, we need to search among all emojis\n      return applySearch(nextValue);\n    }\n\n    setFilterRef((current) =>\n      Object.assign(current, {\n        [nextValue]: filterEmojiObjectByKeyword(longestMatch, nextValue),\n      })\n    );\n    applySearch(nextValue);\n  }\n}\n\nfunction useApplySearch() {\n  const [, setSearchTerm] = useSearchTermState();\n  const PickerMainRef = usePickerMainRef();\n\n  return function applySearch(searchTerm: string) {\n    requestAnimationFrame(() => {\n      setSearchTerm(searchTerm ? searchTerm?.toLowerCase() : searchTerm).then(\n        () => {\n          scrollTo(PickerMainRef.current, 0);\n        }\n      );\n    });\n  };\n}\n\nfunction filterEmojiObjectByKeyword(\n  emojis: FilterDict,\n  keyword: string\n): FilterDict {\n  const filtered: FilterDict = {};\n\n  for (const unified in emojis) {\n    const emoji = emojis[unified];\n\n    if (hasMatch(emoji, keyword)) {\n      filtered[unified] = emoji;\n    }\n  }\n\n  return filtered;\n}\n\nfunction hasMatch(emoji: DataEmoji, keyword: string): boolean {\n  return emojiNames(emoji).some((name) => name.includes(keyword));\n}\n\nexport function useIsEmojiFiltered(): (unified: string) => boolean {\n  const { current: filter } = useFilterRef();\n  const [searchTerm] = useSearchTermState();\n\n  return (unified) => isEmojiFilteredBySearchTerm(unified, filter, searchTerm);\n}\n\nfunction isEmojiFilteredBySearchTerm(\n  unified: string,\n  filter: FilterState,\n  searchTerm: string\n): boolean {\n  if (!filter || !searchTerm) {\n    return false;\n  }\n\n  return !filter[searchTerm]?.[unified];\n}\n\nexport type FilterDict = Record<string, DataEmoji>;\n\nfunction findLongestMatch(\n  keyword: string,\n  dict: Record<string, FilterDict> | null\n): FilterDict | null {\n  if (!dict) {\n    return null;\n  }\n\n  if (dict[keyword]) {\n    return dict[keyword];\n  }\n\n  const longestMatchingKey = Object.keys(dict)\n    .sort((a, b) => b.length - a.length)\n    .find((key) => keyword.includes(key));\n\n  if (longestMatchingKey) {\n    return dict[longestMatchingKey];\n  }\n\n  return null;\n}\n\nexport function getNormalizedSearchTerm(str: string): string {\n  if (!str || typeof str !== 'string') {\n    return '';\n  }\n\n  return str.trim().toLowerCase();\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\n\ninterface Props\n  extends React.DetailedHTMLProps<\n    React.ButtonHTMLAttributes<HTMLButtonElement>,\n    HTMLButtonElement\n  > {\n  className?: string;\n}\n\nexport function Button(props: Props) {\n  return (\n    <button\n      type=\"button\"\n      {...props}\n      className={clsx('epr-btn', props.className)}\n    >\n      {props.children}\n    </button>\n  );\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { DataEmoji } from '../../dataUtils/DataTypes';\nimport { asEmoji } from '../../dataUtils/asEmoji';\nimport {\n  emojiByUnified,\n  emojiHasVariations,\n  emojiName,\n  emojiNames,\n  emojiUrlByUnified\n} from '../../dataUtils/emojiSelectors';\nimport { parseNativeEmoji } from '../../dataUtils/parseNativeEmoji';\nimport { EmojiStyle } from '../../types/exposedTypes';\nimport { Button } from '../atoms/Button';\nimport { useEmojisThatFailedToLoadState } from '../context/PickerContext';\nimport './Emoji.css';\n\ntype ClickableEmojiProps = Readonly<\n  BaseProps & {\n    hidden?: boolean;\n    showVariations?: boolean;\n    hiddenOnSearch?: boolean;\n    emoji: DataEmoji;\n  }\n>;\n\ntype BaseProps = {\n  emoji?: DataEmoji;\n  emojiStyle: EmojiStyle;\n  unified: string;\n  size?: number;\n  lazyLoad?: boolean;\n};\n\nexport function ClickableEmoji({\n  emoji,\n  unified,\n  hidden,\n  hiddenOnSearch,\n  emojiStyle,\n  showVariations = true,\n  size,\n  lazyLoad\n}: ClickableEmojiProps) {\n  const hasVariations = emojiHasVariations(emoji);\n\n  return (\n    <Button\n      className={clsx(ClassNames.emoji, {\n        [ClassNames.hidden]: hidden,\n        [ClassNames.hiddenOnSearch]: hiddenOnSearch,\n        [ClassNames.visible]: !hidden && !hiddenOnSearch,\n        [ClassNames.emojiHasVariatios]: hasVariations && showVariations\n      })}\n      data-unified={unified}\n      // @ts-ignore - let's ignore the fact this is not a real react ref, ok?\n      aria-label={emojiName(emoji)}\n      data-full-name={emojiNames(emoji)}\n    >\n      <ViewOnlyEmoji\n        unified={unified}\n        emoji={emoji}\n        size={size}\n        emojiStyle={emojiStyle}\n        lazyLoad={lazyLoad}\n      />\n    </Button>\n  );\n}\n\nexport function ViewOnlyEmoji({\n  emoji,\n  unified,\n  emojiStyle,\n  size,\n  lazyLoad\n}: BaseProps) {\n  const style = {} as React.CSSProperties;\n  if (size) {\n    style.width = style.height = style.fontSize = `${size}px`;\n  }\n\n  const emojiToRender = emoji ? emoji : emojiByUnified(unified);\n\n  return (\n    <>\n      {emojiStyle === EmojiStyle.NATIVE ? (\n        <NativeEmoji unified={unified} style={style} />\n      ) : (\n        <EmojiImg\n          unified={unified}\n          style={style}\n          emoji={asEmoji(emojiToRender)}\n          emojiStyle={emojiStyle}\n          lazyLoad={lazyLoad}\n        />\n      )}\n    </>\n  );\n}\n\nfunction NativeEmoji({\n  unified,\n  style\n}: {\n  unified: string;\n  style: React.CSSProperties;\n}) {\n  return (\n    <span\n      className={clsx(ClassNames.external, 'epr-emoji-native')}\n      data-unified={unified}\n      style={style}\n    >\n      {parseNativeEmoji(unified)}\n    </span>\n  );\n}\n\nfunction EmojiImg({\n  emoji,\n  unified,\n  emojiStyle,\n  style,\n  lazyLoad = false\n}: {\n  emoji: DataEmoji;\n  unified: string;\n  emojiStyle: EmojiStyle;\n  style: React.CSSProperties;\n  lazyLoad?: boolean;\n}) {\n  const [, setEmojisThatFailedToLoad] = useEmojisThatFailedToLoadState();\n\n  return (\n    <img\n      src={emojiUrlByUnified(emojiStyle, unified)}\n      alt={emojiName(emoji)}\n      className={clsx(ClassNames.external, 'epr-emoji-img')}\n      loading={lazyLoad ? 'lazy' : 'eager'}\n      onError={onError}\n      style={style}\n    />\n  );\n\n  function onError() {\n    setEmojisThatFailedToLoad(prev => new Set(prev).add(unified));\n  }\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  CategoryConfig,\n  categoryFromCategoryConfig,\n  categoryNameFromCategoryConfig\n} from '../../config/categoryConfig';\nimport './EmojiCategory.css';\n\ntype Props = Readonly<{\n  categoryConfig: CategoryConfig;\n  children?: React.ReactNode;\n  hidden?: boolean;\n  hiddenOnSearch?: boolean;\n}>;\n\nexport function EmojiCategory({\n  categoryConfig,\n  children,\n  hidden,\n  hiddenOnSearch\n}: Props) {\n  const category = categoryFromCategoryConfig(categoryConfig);\n  const categoryName = categoryNameFromCategoryConfig(categoryConfig);\n\n  return (\n    <li\n      className={clsx(ClassNames.category, {\n        [ClassNames.hidden]: hidden,\n        [ClassNames.hiddenOnSearch]: hiddenOnSearch\n      })}\n      data-name={category}\n      aria-label={categoryName}\n    >\n      <div className={ClassNames.label}>{categoryName}</div>\n      <div className={ClassNames.categoryContent}>{children}</div>\n    </li>\n  );\n}\n","import * as React from 'react';\n\nimport { CategoryConfig } from '../../config/categoryConfig';\nimport {\n  useEmojiStyleConfig,\n  useSuggestedEmojisModeConfig\n} from '../../config/useConfig';\nimport { emojiByUnified } from '../../dataUtils/emojiSelectors';\nimport { getsuggested } from '../../dataUtils/suggested';\nimport { useUpdateSuggested } from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\n\nimport { EmojiCategory } from './EmojiCategory';\n\ntype Props = Readonly<{\n  categoryConfig: CategoryConfig;\n}>;\n\nexport function Suggested({ categoryConfig }: Props) {\n  const [suggestedUpdated] = useUpdateSuggested();\n  const suggestedEmojisModeConfig = useSuggestedEmojisModeConfig();\n  const suggested = React.useMemo(\n    () => getsuggested(suggestedEmojisModeConfig) ?? [],\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [suggestedUpdated, suggestedEmojisModeConfig]\n  );\n  const emojiStyle = useEmojiStyleConfig();\n\n  return (\n    <EmojiCategory\n      categoryConfig={categoryConfig}\n      hiddenOnSearch\n      hidden={suggested.length === 0}\n    >\n      {suggested.map(suggestedItem => {\n        const emoji = emojiByUnified(suggestedItem.original);\n\n        if (!emoji) {\n          return null;\n        }\n\n        return (\n          <ClickableEmoji\n            showVariations={false}\n            unified={suggestedItem.unified}\n            emojiStyle={emojiStyle}\n            emoji={emoji}\n            key={suggestedItem.unified}\n          />\n        );\n      })}\n    </EmojiCategory>\n  );\n}\n","import * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  Categories,\n  CategoryConfig,\n  categoryFromCategoryConfig,\n} from '../../config/categoryConfig';\nimport {\n  useCategoriesConfig,\n  useEmojiStyleConfig,\n  useLazyLoadEmojisConfig,\n} from '../../config/useConfig';\nimport { emojisByCategory, emojiUnified } from '../../dataUtils/emojiSelectors';\nimport { useIsEmojiHidden } from '../../hooks/useIsEmojiHidden';\nimport {\n  useActiveSkinToneState,\n  useDisallowedEmojisRef,\n  useIsPastInitialLoad,\n} from '../context/PickerContext';\nimport { ClickableEmoji } from '../emoji/Emoji';\n\nimport { EmojiCategory } from './EmojiCategory';\nimport { Suggested } from './Suggested';\n\nimport './EmojiList.css';\n\nexport function EmojiList() {\n  const categories = useCategoriesConfig();\n\n  return (\n    <ul className={ClassNames.emojiList}>\n      {categories.map((categoryConfig, index) => {\n        const category = categoryFromCategoryConfig(categoryConfig);\n\n        if (category === Categories.SUGGESTED) {\n          return <Suggested key={category} categoryConfig={categoryConfig} />;\n        }\n\n        return (\n          <RenderCategory\n            key={category}\n            index={index}\n            category={category}\n            categoryConfig={categoryConfig}\n          />\n        );\n      })}\n    </ul>\n  );\n}\n\nfunction RenderCategory({\n  index,\n  category,\n  categoryConfig,\n}: {\n  index: number;\n  category: Categories;\n  categoryConfig: CategoryConfig;\n}) {\n  const isEmojiHidden = useIsEmojiHidden();\n  const lazyLoadEmojis = useLazyLoadEmojisConfig();\n  const emojiStyle = useEmojiStyleConfig();\n  const isPastInitialLoad = useIsPastInitialLoad();\n  const [activeSkinTone] = useActiveSkinToneState();\n  const disallowedEmojisRef = useDisallowedEmojisRef();\n\n  // Small trick to defer the rendering of all emoji categories until the first category is visible\n  // This way the user gets to actually see something and not wait for the whole picker to render.\n  const emojisToPush =\n    !isPastInitialLoad && index > 1 ? [] : emojisByCategory(category);\n\n  let hiddenCounter = 0;\n\n  const emojis = emojisToPush.map((emoji) => {\n    const unified = emojiUnified(emoji, activeSkinTone);\n    const { failedToLoad, filteredOut, hidden } = isEmojiHidden(emoji);\n\n    const isDisallowed = !!disallowedEmojisRef.current[unified];\n\n    if (hidden || isDisallowed) {\n      hiddenCounter++;\n    }\n\n    if (isDisallowed) {\n      return null;\n    }\n\n    return (\n      <ClickableEmoji\n        key={unified}\n        emoji={emoji}\n        unified={unified}\n        hidden={failedToLoad}\n        hiddenOnSearch={filteredOut}\n        emojiStyle={emojiStyle}\n        lazyLoad={lazyLoadEmojis}\n      />\n    );\n  });\n\n  return (\n    <EmojiCategory\n      categoryConfig={categoryConfig}\n      // Indicates that there are no visible emojis\n      // Hence, the category should be hidden\n      hidden={hiddenCounter === emojis.length}\n    >\n      {emojis}\n    </EmojiCategory>\n  );\n}\n","import { useEmojisThatFailedToLoadState } from '../components/context/PickerContext';\nimport { DataEmoji } from '../dataUtils/DataTypes';\nimport { emojiUnified } from '../dataUtils/emojiSelectors';\n\nimport { useIsEmojiFiltered } from './useFilter';\n\nexport function useIsEmojiHidden(): (emoji: DataEmoji) => IsHiddenReturn {\n  const [emojisThatFailedToLoad] = useEmojisThatFailedToLoadState();\n  const isEmojiFiltered = useIsEmojiFiltered();\n\n  return (emoji: DataEmoji): IsHiddenReturn => {\n    const unified = emojiUnified(emoji);\n\n    const failedToLoad = emojisThatFailedToLoad.has(unified);\n    const filteredOut = isEmojiFiltered(unified);\n\n    return {\n      failedToLoad,\n      filteredOut,\n      hidden: failedToLoad || filteredOut\n    };\n  };\n}\n\ntype IsHiddenReturn = {\n  failedToLoad: boolean;\n  filteredOut: boolean;\n  hidden: boolean;\n};\n","import * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { useOnMouseMove } from '../../hooks/useDisallowMouseMove';\nimport { useMouseDownHandlers } from '../../hooks/useMouseDownHandlers';\nimport { useOnScroll } from '../../hooks/useOnScroll';\nimport { useBodyRef } from '../context/ElementRefContext';\n\nimport { EmojiList } from './EmojiList';\nimport { EmojiVariationPicker } from './EmojiVariationPicker';\n\nimport './Body.css';\n\nexport function Body() {\n  const BodyRef = useBodyRef();\n  useOnScroll(BodyRef);\n  useMouseDownHandlers(BodyRef);\n  useOnMouseMove();\n\n  return (\n    <div className={ClassNames.scrollBody} ref={BodyRef}>\n      <EmojiVariationPicker />\n      <EmojiList />\n    </div>\n  );\n}\n","import { useEffect } from 'react';\n\nimport { ElementRef } from '../components/context/ElementRefContext';\n\nimport { useCloseAllOpenToggles } from './useCloseAllOpenToggles';\n\nexport function useOnScroll(BodyRef: ElementRef) {\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  useEffect(() => {\n    const bodyRef = BodyRef.current;\n    if (!bodyRef) {\n      return;\n    }\n\n    bodyRef.addEventListener('scroll', onScroll, {\n      passive: true\n    });\n\n    function onScroll() {\n      closeAllOpenToggles();\n    }\n\n    return () => {\n      bodyRef?.removeEventListener('scroll', onScroll);\n    };\n  }, [BodyRef, closeAllOpenToggles]);\n}\n","import * as React from 'react';\nimport { useState } from 'react';\n\nimport { useEmojiStyleConfig, usePreviewConfig } from '../../config/useConfig';\nimport { asEmoji } from '../../dataUtils/asEmoji';\nimport {\n  emojiByUnified,\n  emojiName,\n  emojiUnified\n} from '../../dataUtils/emojiSelectors';\nimport { useEmojiPreviewEvents } from '../../hooks/useEmojiPreviewEvents';\nimport Flex from '../Layout/Flex';\nimport { useEmojiVariationPickerState } from '../context/PickerContext';\nimport { ViewOnlyEmoji } from '../emoji/Emoji';\nimport './Preview.css';\n\nexport function Preview() {\n  const previewConfig = usePreviewConfig();\n  const [previewEmoji, setPreviewEmoji] = useState<PreviewEmoji>(null);\n  const emojiStyle = useEmojiStyleConfig();\n  const [variationPickerEmoji] = useEmojiVariationPickerState();\n\n  useEmojiPreviewEvents(previewConfig.showPreview, setPreviewEmoji);\n\n  if (!previewConfig.showPreview) {\n    return null;\n  }\n\n  const emoji = emojiByUnified(previewEmoji?.originalUnified);\n\n  const show = emoji != null && previewEmoji != null;\n\n  return (\n    <Flex className=\"epr-preview\">\n      <PreviewContent />\n    </Flex>\n  );\n\n  function PreviewContent() {\n    const defaultEmoji = asEmoji(\n      variationPickerEmoji ?? emojiByUnified(previewConfig.defaultEmoji)\n    );\n    const defaultText = variationPickerEmoji\n      ? emojiName(variationPickerEmoji)\n      : previewConfig.defaultCaption;\n\n    return (\n      <>\n        <div>\n          {show ? (\n            <ViewOnlyEmoji\n              unified={previewEmoji?.unified as string}\n              emoji={asEmoji(emoji)}\n              emojiStyle={emojiStyle}\n              size={45}\n            />\n          ) : defaultEmoji ? (\n            <ViewOnlyEmoji\n              unified={emojiUnified(defaultEmoji)}\n              emoji={defaultEmoji}\n              emojiStyle={emojiStyle}\n              size={45}\n            />\n          ) : null}\n        </div>\n        {show ? (\n          <div className=\"epr-preview-emoji-label\">\n            {emojiName(asEmoji(emoji))}\n          </div>\n        ) : (\n          <div className=\"epr-preview-emoji-label\">{defaultText}</div>\n        )}\n      </>\n    );\n  }\n}\n\nexport type PreviewEmoji = null | {\n  unified: string;\n  originalUnified: string;\n};\n","import * as React from 'react';\nimport { useEffect } from 'react';\n\nimport { focusElement } from '../DomUtils/focusElement';\nimport {\n  buttonFromTarget,\n  originalUnifiedFromEmojiElement,\n  unifiedFromEmojiElement\n} from '../DomUtils/selectors';\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { PreviewEmoji } from '../components/footer/Preview';\n\nimport {\n  useAllowMouseMove,\n  useIsMouseDisallowed\n} from './useDisallowMouseMove';\n\nexport function useEmojiPreviewEvents(\n  allow: boolean,\n  setPreviewEmoji: React.Dispatch<React.SetStateAction<PreviewEmoji>>\n) {\n  const BodyRef = useBodyRef();\n  const isMouseDisallowed = useIsMouseDisallowed();\n  const allowMouseMove = useAllowMouseMove();\n\n  useEffect(() => {\n    if (!allow) {\n      return;\n    }\n    const bodyRef = BodyRef.current;\n\n    bodyRef?.addEventListener('keydown', onEscape, {\n      passive: true\n    });\n\n    bodyRef?.addEventListener('mouseover', onMouseOver, true);\n\n    bodyRef?.addEventListener('focus', onEnter, true);\n\n    bodyRef?.addEventListener('mouseout', onLeave, {\n      passive: true\n    });\n    bodyRef?.addEventListener('blur', onLeave, true);\n\n\n    function onEnter(e: FocusEvent) {\n      const button = buttonFromTarget(e.target as HTMLElement);\n\n      if (!button) {\n        return onLeave();\n      }\n\n      const unified = unifiedFromEmojiElement(button);\n      const originalUnified = originalUnifiedFromEmojiElement(button);\n\n      if (!unified || !originalUnified) {\n        return onLeave();\n      }\n\n      setPreviewEmoji({\n        unified,\n        originalUnified\n      });\n    }\n    function onLeave(e?: FocusEvent | MouseEvent) {\n      if (e) {\n        const relatedTarget = e.relatedTarget as HTMLElement;\n\n        if (!buttonFromTarget(relatedTarget)) {\n          return setPreviewEmoji(null);\n        }\n      }\n\n      setPreviewEmoji(null);\n    }\n    function onEscape(e: KeyboardEvent) {\n      if (e.key === 'Escape') {\n        setPreviewEmoji(null);\n      }\n    }\n\n    function onMouseOver(e: MouseEvent) {\n      if (isMouseDisallowed()) {\n        return;\n      }\n\n      const button = buttonFromTarget(e.target as HTMLElement);\n\n      if (button) {\n        focusElement(button);\n      }\n    }\n\n\n    return () => {\n      bodyRef?.removeEventListener('mouseover', onMouseOver);\n      bodyRef?.removeEventListener('mouseout', onLeave);\n      bodyRef?.removeEventListener('focus', onEnter, true);\n      bodyRef?.removeEventListener('blur', onLeave, true);\n      bodyRef?.removeEventListener('keydown', onEscape);\n    };\n  }, [BodyRef, allow, setPreviewEmoji, isMouseDisallowed, allowMouseMove]);\n}\n","import * as React from 'react';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n  className?: string;\n}>;\n\nexport default function Relative({ children, className }: Props) {\n  return (\n    <div style={{ position: 'relative' }} className={className}>\n      {children}\n    </div>\n  );\n}\n","import { useSearchTermState } from '../components/context/PickerContext';\n\nexport default function useIsSearchMode(): boolean {\n  const [searchTerm] = useSearchTermState();\n\n  return !!searchTerm;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\nimport { useState } from 'react';\nimport './CategoryNavigation.css';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport {\n  categoryFromCategoryConfig,\n  categoryNameFromCategoryConfig\n} from '../../config/categoryConfig';\nimport { useCategoriesConfig } from '../../config/useConfig';\nimport { useActiveCategoryScrollDetection } from '../../hooks/useActiveCategoryScrollDetection';\nimport useIsSearchMode from '../../hooks/useIsSearchMode';\nimport { useScrollCategoryIntoView } from '../../hooks/useScrollCategoryIntoView';\nimport { Button } from '../atoms/Button';\nimport { useCategoryNavigationRef } from '../context/ElementRefContext';\n\nexport function CategoryNavigation() {\n  const [activeCategory, setActiveCategory] = useState<string | null>(null);\n  const scrollCategoryIntoView = useScrollCategoryIntoView();\n  useActiveCategoryScrollDetection(setActiveCategory);\n  const isSearchMode = useIsSearchMode();\n\n  const categoriesConfig = useCategoriesConfig();\n  const CategoryNavigationRef = useCategoryNavigationRef();\n\n  return (\n    <div className=\"epr-category-nav\" ref={CategoryNavigationRef}>\n      {categoriesConfig.map(categoryConfig => {\n        const category = categoryFromCategoryConfig(categoryConfig);\n        return (\n          <Button\n            tabIndex={isSearchMode ? -1 : 0}\n            className={clsx('epr-cat-btn', `epr-icn-${category}`, {\n              [ClassNames.active]: category === activeCategory\n            })}\n            key={category}\n            onClick={() => {\n              setActiveCategory(category);\n              scrollCategoryIntoView(category);\n            }}\n            aria-label={categoryNameFromCategoryConfig(categoryConfig)}\n          />\n        );\n      })}\n    </div>\n  );\n}\n","import { scrollTo } from '../DomUtils/scrollTo';\nimport { NullableElement } from '../DomUtils/selectors';\nimport {\n  useBodyRef,\n  usePickerMainRef\n} from '../components/context/ElementRefContext';\n\nexport function useScrollCategoryIntoView() {\n  const BodyRef = useBodyRef();\n  const PickerMainRef = usePickerMainRef();\n\n  return function scrollCategoryIntoView(category: string): void {\n    if (!BodyRef.current) {\n      return;\n    }\n    const $category = BodyRef.current?.querySelector(\n      `[data-name=\"${category}\"]`\n    ) as NullableElement;\n\n    if (!$category) {\n      return;\n    }\n\n    const offsetTop = $category.offsetTop || 0;\n\n    scrollTo(PickerMainRef.current, offsetTop);\n  };\n}\n","import { useEffect } from 'react';\n\nimport { categoryNameFromDom } from '../DomUtils/categoryNameFromDom';\nimport { asSelectors, ClassNames } from '../DomUtils/classNames';\nimport { useBodyRef } from '../components/context/ElementRefContext';\n\nexport function useActiveCategoryScrollDetection(\n  setActiveCategory: (category: string) => void\n) {\n  const BodyRef = useBodyRef();\n\n  useEffect(() => {\n    const visibleCategories = new Map();\n    const bodyRef = BodyRef.current;\n    const observer = new IntersectionObserver(\n      entries => {\n        if (!bodyRef) {\n          return;\n        }\n\n        for (const entry of entries) {\n          const id = categoryNameFromDom(entry.target);\n          visibleCategories.set(id, entry.intersectionRatio);\n        }\n\n        const ratios = Array.from(visibleCategories);\n        const lastCategory = ratios[ratios.length - 1];\n\n        if (lastCategory[1] == 1) {\n          return setActiveCategory(lastCategory[0]);\n        }\n\n        for (const [id, ratio] of ratios) {\n          if (ratio) {\n            setActiveCategory(id);\n            break;\n          }\n        }\n      },\n      {\n        threshold: [0, 1]\n      }\n    );\n    bodyRef?.querySelectorAll(asSelectors(ClassNames.category)).forEach(el => {\n      observer.observe(el);\n    });\n  }, [BodyRef, setActiveCategory]);\n}\n","export function categoryNameFromDom($category: Element | null): string | null {\n  return $category?.getAttribute('data-name') ?? null;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\nimport { useState } from 'react';\n\nimport { asSelectors, ClassNames } from '../../DomUtils/classNames';\nimport {\n  useAutoFocusSearchConfig,\n  useSearchPlaceHolderConfig,\n} from '../../config/useConfig';\nimport { useCloseAllOpenToggles } from '../../hooks/useCloseAllOpenToggles';\nimport {\n  getNormalizedSearchTerm,\n  useClearSearch,\n  useFilter,\n} from '../../hooks/useFilter';\nimport Relative from '../Layout/Relative';\nimport { Button } from '../atoms/Button';\nimport { useSearchInputRef } from '../context/ElementRefContext';\n\nimport './Search.css';\n\nexport function Search() {\n  const [inc, setInc] = useState(0);\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const SearchInputRef = useSearchInputRef();\n  const clearSearch = useClearSearch();\n  const placeholder = useSearchPlaceHolderConfig();\n  const autoFocus = useAutoFocusSearchConfig();\n  const { onChange } = useFilter();\n\n  const input = SearchInputRef?.current;\n  const value = input?.value;\n\n  return (\n    <Relative className=\"epr-search-container\">\n      <CssSearch value={value} />\n      <input\n        // eslint-disable-next-line jsx-a11y/no-autofocus\n        autoFocus={autoFocus}\n        aria-label={'Type to search for an emoji'}\n        onFocus={closeAllOpenToggles}\n        className=\"epr-search\"\n        type=\"text\"\n        placeholder={placeholder}\n        onChange={(event) => {\n          setInc(inc + 1);\n          setTimeout(() => {\n            onChange(event?.target?.value ?? value);\n          });\n        }}\n        ref={SearchInputRef}\n      />\n      <div className=\"epr-icn-search\" />\n      <Button\n        className={clsx('epr-btn-clear-search', 'epr-visible-on-search-only')}\n        onClick={clearSearch}\n      >\n        <div className=\"epr-icn-clear-search\" />\n      </Button>\n    </Relative>\n  );\n}\n\nconst CSS_SEARCH_SELECTOR = `${asSelectors(\n  ClassNames.emojiPicker\n)} ${asSelectors(ClassNames.emojiList)}`;\n\nfunction CssSearch({ value }: { value: undefined | string }) {\n  if (!value) {\n    return null;\n  }\n\n  const searchQuery = `button[data-full-name*=\"${getNormalizedSearchTerm(\n    value\n  )}\"]`;\n\n  return (\n    <style>{`\n        ${CSS_SEARCH_SELECTOR} ${asSelectors(\n      ClassNames.category\n    )}:not(:has(${searchQuery})) {\n        display: none;\n      }\n\n        ${CSS_SEARCH_SELECTOR} button${asSelectors(\n      ClassNames.emoji\n    )}:not(${searchQuery}) {\n        display: none;\n      }\n  `}</style>\n  );\n}\n","import { useCallback, useEffect, useMemo } from 'react';\n\nimport { hasNextElementSibling } from '../DomUtils/elementPositionInRow';\nimport {\n  focusNextElementSibling,\n  focusPrevElementSibling\n} from '../DomUtils/focusElement';\nimport { getActiveElement } from '../DomUtils/getActiveElement';\nimport {\n  focusAndClickFirstVisibleEmoji,\n  focusFirstVisibleEmoji,\n  focusNextVisibleEmoji,\n  focusPrevVisibleEmoji,\n  focusVisibleEmojiOneRowDown,\n  focusVisibleEmojiOneRowUp\n} from '../DomUtils/keyboardNavigation';\nimport { useScrollTo } from '../DomUtils/scrollTo';\nimport { buttonFromTarget } from '../DomUtils/selectors';\nimport {\n  useBodyRef,\n  useCategoryNavigationRef,\n  usePickerMainRef,\n  useSearchInputRef,\n  useSkinTonePickerRef\n} from '../components/context/ElementRefContext';\nimport { useSkinToneFanOpenState } from '../components/context/PickerContext';\n\nimport {\n  useCloseAllOpenToggles,\n  useHasOpenToggles\n} from './useCloseAllOpenToggles';\nimport { useDisallowMouseMove } from './useDisallowMouseMove';\nimport { useAppendSearch, useClearSearch } from './useFilter';\nimport {\n  useFocusCategoryNavigation,\n  useFocusSearchInput,\n  useFocusSkinTonePicker\n} from './useFocus';\nimport useIsSearchMode from './useIsSearchMode';\nimport useSetVariationPicker from './useSetVariationPicker';\n\nenum KeyboardEvents {\n  ArrowDown = 'ArrowDown',\n  ArrowUp = 'ArrowUp',\n  ArrowLeft = 'ArrowLeft',\n  ArrowRight = 'ArrowRight',\n  Escape = 'Escape',\n  Enter = 'Enter',\n  Space = ' '\n}\n\nexport function useKeyboardNavigation() {\n  usePickerMainKeyboardEvents();\n  useSearchInputKeyboardEvents();\n  useSkinTonePickerKeyboardEvents();\n  useCategoryNavigationKeyboardEvents();\n  useBodyKeyboardEvents();\n}\n\nfunction usePickerMainKeyboardEvents() {\n  const PickerMainRef = usePickerMainRef();\n  const clearSearch = useClearSearch();\n  const scrollTo = useScrollTo();\n  const SearchInputRef = useSearchInputRef();\n  const focusSearchInput = useFocusSearchInput();\n  const hasOpenToggles = useHasOpenToggles();\n  const disallowMouseMove = useDisallowMouseMove();\n\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        disallowMouseMove();\n        switch (key) {\n          // eslint-disable-next-line no-fallthrough\n          case KeyboardEvents.Escape:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              return;\n            }\n            clearSearch();\n            scrollTo(0);\n            focusSearchInput();\n            break;\n        }\n      },\n    [\n      scrollTo,\n      clearSearch,\n      closeAllOpenToggles,\n      focusSearchInput,\n      hasOpenToggles,\n      disallowMouseMove\n    ]\n  );\n\n  useEffect(() => {\n    const current = PickerMainRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [PickerMainRef, SearchInputRef, scrollTo, onKeyDown]);\n}\n\nfunction useSearchInputKeyboardEvents() {\n  const focusSkinTonePicker = useFocusSkinTonePicker();\n  const PickerMainRef = usePickerMainRef();\n  const BodyRef = useBodyRef();\n  const SearchInputRef = useSearchInputRef();\n  const [, setSkinToneFanOpenState] = useSkinToneFanOpenState();\n  const goDownFromSearchInput = useGoDownFromSearchInput();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        switch (key) {\n          case KeyboardEvents.ArrowRight:\n            event.preventDefault();\n            setSkinToneFanOpenState(true);\n            focusSkinTonePicker();\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            goDownFromSearchInput();\n            break;\n          case KeyboardEvents.Enter:\n            event.preventDefault();\n            focusAndClickFirstVisibleEmoji(BodyRef.current);\n            break;\n        }\n      },\n    [\n      focusSkinTonePicker,\n      goDownFromSearchInput,\n      setSkinToneFanOpenState,\n      BodyRef\n    ]\n  );\n\n  useEffect(() => {\n    const current = SearchInputRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [PickerMainRef, SearchInputRef, onKeyDown]);\n}\n\nfunction useSkinTonePickerKeyboardEvents() {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n  const focusSearchInput = useFocusSearchInput();\n  const SearchInputRef = useSearchInputRef();\n  const goDownFromSearchInput = useGoDownFromSearchInput();\n  const [isOpen, setIsOpen] = useSkinToneFanOpenState();\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        switch (key) {\n          case KeyboardEvents.ArrowLeft:\n            event.preventDefault();\n            if (!isOpen) {\n              return focusSearchInput();\n            }\n            focusNextSkinTone(focusSearchInput);\n            break;\n          case KeyboardEvents.ArrowRight:\n            event.preventDefault();\n            if (!isOpen) {\n              return focusSearchInput();\n            }\n            focusPrevSkinTone();\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            if (isOpen) {\n              setIsOpen(false);\n            }\n            goDownFromSearchInput();\n            break;\n          default:\n            onType(event);\n            break;\n        }\n      },\n    [isOpen, focusSearchInput, setIsOpen, goDownFromSearchInput, onType]\n  );\n\n  useEffect(() => {\n    const current = SkinTonePickerRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [SkinTonePickerRef, SearchInputRef, isOpen, onKeyDown]);\n}\n\nfunction useCategoryNavigationKeyboardEvents() {\n  const focusSearchInput = useFocusSearchInput();\n  const CategoryNavigationRef = useCategoryNavigationRef();\n  const BodyRef = useBodyRef();\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        switch (key) {\n          case KeyboardEvents.ArrowUp:\n            event.preventDefault();\n            focusSearchInput();\n            break;\n          case KeyboardEvents.ArrowRight:\n            event.preventDefault();\n            focusNextElementSibling(getActiveElement());\n            break;\n          case KeyboardEvents.ArrowLeft:\n            event.preventDefault();\n            focusPrevElementSibling(getActiveElement());\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            focusFirstVisibleEmoji(BodyRef.current);\n            break;\n          default:\n            onType(event);\n            break;\n        }\n      },\n    [BodyRef, focusSearchInput, onType]\n  );\n\n  useEffect(() => {\n    const current = CategoryNavigationRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [CategoryNavigationRef, BodyRef, onKeyDown]);\n}\n\nfunction useBodyKeyboardEvents() {\n  const BodyRef = useBodyRef();\n  const goUpFromBody = useGoUpFromBody();\n  const setVariationPicker = useSetVariationPicker();\n  const hasOpenToggles = useHasOpenToggles();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  const onType = useOnType();\n\n  const onKeyDown = useMemo(\n    () =>\n      // eslint-disable-next-line complexity\n      function onKeyDown(event: KeyboardEvent) {\n        const { key } = event;\n\n        const activeElement = buttonFromTarget(getActiveElement());\n\n        switch (key) {\n          case KeyboardEvents.ArrowRight:\n            event.preventDefault();\n            focusNextVisibleEmoji(activeElement);\n            break;\n          case KeyboardEvents.ArrowLeft:\n            event.preventDefault();\n            focusPrevVisibleEmoji(activeElement);\n            break;\n          case KeyboardEvents.ArrowDown:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              break;\n            }\n            focusVisibleEmojiOneRowDown(activeElement);\n            break;\n          case KeyboardEvents.ArrowUp:\n            event.preventDefault();\n            if (hasOpenToggles()) {\n              closeAllOpenToggles();\n              break;\n            }\n            focusVisibleEmojiOneRowUp(activeElement, goUpFromBody);\n            break;\n          case KeyboardEvents.Space:\n            event.preventDefault();\n            setVariationPicker(event.target as HTMLElement);\n            break;\n          default:\n            onType(event);\n            break;\n        }\n      },\n    [\n      goUpFromBody,\n      onType,\n      setVariationPicker,\n      hasOpenToggles,\n      closeAllOpenToggles\n    ]\n  );\n\n  useEffect(() => {\n    const current = BodyRef.current;\n\n    if (!current) {\n      return;\n    }\n\n    current.addEventListener('keydown', onKeyDown);\n\n    return () => {\n      current.removeEventListener('keydown', onKeyDown);\n    };\n  }, [BodyRef, onKeyDown]);\n}\n\nfunction useGoDownFromSearchInput() {\n  const focusCategoryNavigation = useFocusCategoryNavigation();\n  const isSearchMode = useIsSearchMode();\n  const BodyRef = useBodyRef();\n\n  return useCallback(\n    function goDownFromSearchInput() {\n      if (isSearchMode) {\n        return focusFirstVisibleEmoji(BodyRef.current);\n      }\n      return focusCategoryNavigation();\n    },\n    [BodyRef, focusCategoryNavigation, isSearchMode]\n  );\n}\n\nfunction useGoUpFromBody() {\n  const focusSearchInput = useFocusSearchInput();\n  const focusCategoryNavigation = useFocusCategoryNavigation();\n  const isSearchMode = useIsSearchMode();\n\n  return useCallback(\n    function goUpFromEmoji() {\n      if (isSearchMode) {\n        return focusSearchInput();\n      }\n      return focusCategoryNavigation();\n    },\n    [focusSearchInput, isSearchMode, focusCategoryNavigation]\n  );\n}\n\nfunction focusNextSkinTone(exitLeft: () => void) {\n  const currentSkinTone = getActiveElement();\n\n  if (!currentSkinTone) {\n    return;\n  }\n\n  if (!hasNextElementSibling(currentSkinTone)) {\n    exitLeft();\n  }\n\n  focusNextElementSibling(currentSkinTone);\n}\n\nfunction focusPrevSkinTone() {\n  const currentSkinTone = getActiveElement();\n\n  if (!currentSkinTone) {\n    return;\n  }\n\n  focusPrevElementSibling(currentSkinTone);\n}\n\nfunction useOnType() {\n  const appendSearch = useAppendSearch();\n  const focusSearchInput = useFocusSearchInput();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n\n  return function onType(event: KeyboardEvent) {\n    const { key } = event;\n\n    if (hasModifier(event)) {\n      return;\n    }\n\n    if (key.match(/(^[a-zA-Z0-9]$){1}/)) {\n      event.preventDefault();\n      closeAllOpenToggles();\n      focusSearchInput();\n      appendSearch(key);\n    }\n  };\n}\n\nfunction hasModifier(event: KeyboardEvent): boolean {\n  const { metaKey, ctrlKey, altKey } = event;\n\n  return metaKey || ctrlKey || altKey;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { useSkinTonesDisabledConfig } from '../../config/useConfig';\nimport skinToneVariations, {\n  skinTonesNamed\n} from '../../data/skinToneVariations';\nimport { useCloseAllOpenToggles } from '../../hooks/useCloseAllOpenToggles';\nimport { useFocusSearchInput } from '../../hooks/useFocus';\nimport { SkinTones } from '../../types/exposedTypes';\nimport Relative from '../Layout/Relative';\nimport { Button } from '../atoms/Button';\nimport { useSkinTonePickerRef } from '../context/ElementRefContext';\nimport {\n  useActiveSkinToneState,\n  useSkinToneFanOpenState\n} from '../context/PickerContext';\nimport './SkinTonePicker.css';\n\nexport function SkinTonePicker() {\n  const SkinTonePickerRef = useSkinTonePickerRef();\n  const isDisabled = useSkinTonesDisabledConfig();\n  const [isOpen, setIsOpen] = useSkinToneFanOpenState();\n  const [activeSkinTone, setActiveSkinTone] = useActiveSkinToneState();\n  const closeAllOpenToggles = useCloseAllOpenToggles();\n  const focusSearchInput = useFocusSearchInput();\n\n  if (isDisabled) {\n    return null;\n  }\n\n  return (\n    <Relative\n      className={clsx('epr-skin-tones', {\n        open: isOpen\n      })}\n    >\n      <div className=\"epr-skin-tone-select\" ref={SkinTonePickerRef}>\n        {skinToneVariations.map((skinToneVariation, i) => {\n          const active = skinToneVariation === activeSkinTone;\n          return (\n            <Button\n              style={{\n                transform: clsx(\n                  `translateX(-${i * (isOpen ? 28 : 0)}px)`,\n                  isOpen && active && 'scale(1.3)'\n                )\n              }}\n              onClick={() => {\n                if (isOpen) {\n                  setActiveSkinTone(skinToneVariation);\n                  focusSearchInput();\n                } else {\n                  setIsOpen(true);\n                }\n                closeAllOpenToggles();\n              }}\n              key={skinToneVariation}\n              className={clsx(`epr-tone-${skinToneVariation}`, 'epr-tone', {\n                [ClassNames.active]: active\n              })}\n              tabIndex={isOpen ? 0 : -1}\n              aria-pressed={active}\n              aria-label={`Skin tone ${\n                skinTonesNamed[skinToneVariation as SkinTones]\n              }`}\n            ></Button>\n          );\n        })}\n      </div>\n    </Relative>\n  );\n}\n","import * as React from 'react';\n\nimport Flex from '../Layout/Flex';\nimport Relative from '../Layout/Relative';\nimport { CategoryNavigation } from '../navigation/CategoryNavigation';\n\nimport { Search } from './Search';\nimport { SkinTonePicker } from './SkinTonePicker';\nimport './Header.css';\n\nexport function Header() {\n  return (\n    <Relative className=\"epr-header\">\n      <Flex className=\"epr-header-overlay\">\n        <Search />\n        <SkinTonePicker />\n      </Flex>\n      <CategoryNavigation />\n    </Relative>\n  );\n}\n","import { NullableElement } from './selectors';\n\nexport function getActiveElement() {\n  return document.activeElement as NullableElement;\n}\n","import { DataEmoji } from '../dataUtils/DataTypes';\nimport {\n  emojiUnified,\n  emojiUrlByUnified,\n  emojiVariations\n} from '../dataUtils/emojiSelectors';\nimport { EmojiStyle } from '../types/exposedTypes';\n\nexport function preloadEmoji(\n  emoji: undefined | DataEmoji,\n  emojiStyle: EmojiStyle\n): void {\n  if (!emoji) {\n    return;\n  }\n\n  if (emojiStyle === EmojiStyle.NATIVE) {\n    return;\n  }\n\n  const unified = emojiUnified(emoji);\n\n  if (preloadedEmojs.has(unified)) {\n    return;\n  }\n\n  emojiVariations(emoji).forEach(variation => {\n    const emojiUrl = emojiUrlByUnified(emojiStyle, variation);\n    preloadImage(emojiUrl);\n  });\n\n  preloadedEmojs.add(unified);\n}\n\nexport const preloadedEmojs: Set<string> = new Set();\n\nfunction preloadImage(url: string): void {\n  const image = new Image();\n  image.src = url;\n}\n","import clsx from 'clsx';\nimport * as React from 'react';\n\nimport { ClassNames } from '../../DomUtils/classNames';\nimport { usePickerSizeConfig, useThemeConfig } from '../../config/useConfig';\nimport useIsSearchMode from '../../hooks/useIsSearchMode';\nimport { useKeyboardNavigation } from '../../hooks/useKeyboardNavigation';\nimport { useOnFocus } from '../../hooks/useOnFocus';\nimport { Theme } from '../../types/exposedTypes';\nimport { usePickerMainRef } from '../context/ElementRefContext';\nimport { PickerContextProvider } from '../context/PickerContext';\nimport './PickerMain.css';\n\ntype Props = Readonly<{\n  children: React.ReactNode;\n}>;\n\nexport default function PickerMain({ children }: Props) {\n  return (\n    <PickerContextProvider>\n      <PickerRootElement>{children}</PickerRootElement>\n    </PickerContextProvider>\n  );\n}\n\ntype RootProps = Readonly<{\n  children: React.ReactNode;\n}>;\n\nfunction PickerRootElement({ children }: RootProps) {\n  const theme = useThemeConfig();\n  const searchModeActive = useIsSearchMode();\n  const PickerMainRef = usePickerMainRef();\n  const { height, width } = usePickerSizeConfig();\n\n  useKeyboardNavigation();\n  useOnFocus();\n\n  const style = {\n    height: `${height}px`,\n    width: `${width}px`,\n  };\n\n  return (\n    <aside\n      className={clsx(ClassNames.emojiPicker, 'epr-main', {\n        [ClassNames.searchActive]: searchModeActive,\n        'epr-dark-theme': theme === Theme.DARK,\n      })}\n      ref={PickerMainRef}\n      style={style}\n    >\n      {children}\n    </aside>\n  );\n}\n","import { useEffect } from 'react';\n\nimport { buttonFromTarget, emojiFromElement } from '../DomUtils/selectors';\nimport { useBodyRef } from '../components/context/ElementRefContext';\nimport { useEmojiStyleConfig } from '../config/useConfig';\nimport { emojiHasVariations } from '../dataUtils/emojiSelectors';\nimport { EmojiStyle } from '../types/exposedTypes';\n\nimport { preloadEmoji } from './preloadEmoji';\n\nexport function useOnFocus() {\n  const BodyRef = useBodyRef();\n  const emojiStyle = useEmojiStyleConfig();\n\n  useEffect(() => {\n    if (emojiStyle === EmojiStyle.NATIVE) {\n      return;\n    }\n\n    const bodyRef = BodyRef.current;\n\n    bodyRef?.addEventListener('focusin', onFocus);\n\n    return () => {\n      bodyRef?.removeEventListener('focusin', onFocus);\n    };\n\n    function onFocus(event: FocusEvent) {\n      const button = buttonFromTarget(event.target as HTMLElement);\n\n      if (!button) {\n        return;\n      }\n\n      const [emoji] = emojiFromElement(button);\n\n      if (!emoji) {\n        return;\n      }\n\n      if (emojiHasVariations(emoji)) {\n        preloadEmoji(emoji, emojiStyle);\n      }\n    }\n  }, [BodyRef, emojiStyle]);\n}\n","export function isSystemDarkTheme(): boolean {\n  if (typeof window === 'undefined') {\n    return false;\n  }\n\n  return !!window.matchMedia('(prefers-color-scheme: dark)').matches;\n}\n","import * as React from 'react';\n\nimport { Body } from './components/body/Body';\nimport { ElementRefContextProvider } from './components/context/ElementRefContext';\nimport { PickerConfigProvider } from './components/context/PickerConfigContext';\nimport { Preview } from './components/footer/Preview';\nimport { Header } from './components/header/Header';\nimport PickerMain from './components/main/PickerMain';\nimport { PickerConfig } from './config/config';\nimport './EmojiPickerReact.css';\n\nexport interface Props extends PickerConfig {}\n\nexport default function EmojiPicker(props: Props) {\n  return (\n    <ElementRefContextProvider>\n      <PickerConfigProvider {...props}>\n        <PickerMain>\n          <Header />\n          <Body />\n          <Preview />\n        </PickerMain>\n      </PickerConfigProvider>\n    </ElementRefContextProvider>\n  );\n}\n","import * as React from 'react';\n\nexport default class ErrorBoundary extends React.Component<\n  { children: React.ReactNode },\n  { hasError: boolean }\n> {\n  constructor(props: { children: React.ReactNode }) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  static getDerivedStateFromError() {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error: Error, errorInfo: any) {\n    // eslint-disable-next-line no-console\n    console.error('Emoji Picker React failed to render:', error, errorInfo);\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return null;\n    }\n\n    return this.props.children;\n  }\n}\n","import * as React from 'react';\n\nimport { EmojiStyle } from '../../types/exposedTypes';\n\nimport { ViewOnlyEmoji } from './Emoji';\n\nexport function ExportedEmoji({\n  unified,\n  size = 32,\n  emojiStyle = EmojiStyle.APPLE,\n  lazyLoad = false\n}: {\n  unified: string;\n  emojiStyle?: EmojiStyle;\n  size?: number;\n  lazyLoad?: boolean;\n}) {\n  if (!unified) {\n    return null;\n  }\n\n  return (\n    <ViewOnlyEmoji\n      unified={unified}\n      size={size}\n      emojiStyle={emojiStyle}\n      lazyLoad={lazyLoad}\n    />\n  );\n}\n","import * as React from 'react';\n\nimport EmojiPickerReact from './EmojiPickerReact';\nimport ErrorBoundary from './components/ErrorBoundary';\nimport { PickerConfig } from './config/config';\n\nexport { ExportedEmoji as Emoji } from './components/emoji/ExportedEmoji';\n\nexport {\n  EmojiStyle,\n  SkinTones,\n  Theme,\n  Categories,\n  EmojiClickData,\n  SuggestionMode\n} from './types/exposedTypes';\n\nexport interface Props extends PickerConfig {}\n\nexport default function EmojiPicker(props: Props) {\n  return (\n    <ErrorBoundary>\n      <EmojiPickerReact {...props} />\n    </ErrorBoundary>\n  );\n}\n"],"names":["ClassNames","asSelectors","classNames","map","c","join","ElementRefContextProvider","children","PickerMainRef","React","AnchoredEmojiRef","BodyRef","SearchInputRef","SkinTonePickerRef","CategoryNavigationRef","VariationPickerRef","ElementRefContext","Provider","value","SuggestionMode","EmojiStyle","Theme","SkinTones","Categories","useElementRef","usePickerMainRef","useAnchoredEmojiRef","useSetAnchoredEmojiRef","target","current","useBodyRef","useSearchInputRef","useSkinTonePickerRef","useCategoryNavigationRef","useVariationPickerRef","categoriesOrdered","SUGGESTED","SMILEYS_PEOPLE","ANIMALS_NATURE","FOOD_DRINK","TRAVEL_PLACES","ACTIVITIES","OBJECTS","SYMBOLS","FLAGS","SuggestedRecent","name","category","configByCategory","baseCategoriesConfig","modifiers","categoryFromCategoryConfig","categoryNameFromCategoryConfig","getBaseConfigByCategory","modifier","Object","assign","mergeConfig","userConfig","base","basePickerConfig","previewConfig","config","categories","userCategoriesConfig","extra","suggestionMode","RECENT","_userCategoriesConfig","length","mergeCategoriesConfig","suggestedEmojisMode","autoFocusSearch","defaultSkinTone","NEUTRAL","emojiStyle","APPLE","emojiVersion","height","lazyLoadEmojis","onEmojiClick","emoji","event","basePreviewConfig","searchPlaceHolder","skinTonesDisabled","FREQUENT","theme","LIGHT","width","defaultEmoji","defaultCaption","showPreview","ConfigContext","PickerConfigProvider","usePickerConfig","useEmojiStyleConfig","useCategoriesConfig","EmojiProperties","skinToneVariations","MEDIUM_LIGHT","MEDIUM","MEDIUM_DARK","DARK","skinTonesNamed","entries","reduce","acc","skinTonesMapped","mapped","skinTone","emojiNames","emojiName","unifiedWithoutSkinTone","unified","splat","split","splice","emojiUnified","emojiHasVariations","emojiVariations","find","variation","includes","emojiVariationUnified","emojisByCategory","emojis","emojiUrlByUnified","TWITTER","GOOGLE","FACEBOOK","cdnUrl","variations","emojiByUnified","allEmojisByUnified","withoutSkinTone","allEmojis","values","flat","setTimeout","Emoji","alphaNumericEmojiIndex","useDebouncedState","initialValue","delay","useState","state","setState","timer","useRef","Promise","resolve","clearTimeout","window","_window","PickerContextProvider","dispatch","DisallowedEmojisRef","emojiVersionConfig","disallowedEmojis","useMemo","parseFloat","Number","isNaN","supportedLevel","added_in","addedIn","addedInNewerVersion","filterRef","disallowClickRef","disallowMouseRef","disallowedEmojisRef","suggestedUpdateState","Date","now","searchTerm","skinToneFanOpenState","activeSkinTone","activeCategoryState","emojisThatFailedToLoadState","Set","emojiVariationPickerState","isPastInitialLoad","useEffect","PickerContext","searchIndex","replace","forEach","char","useFilterRef","useDisallowMouseRef","useSearchTermState","useActiveSkinToneState","useEmojisThatFailedToLoadState","useEmojiVariationPickerState","useSkinToneFanOpenState","useUpdateSuggested","setsuggestedUpdate","useAllowMouseMove","DisallowMouseRef","useIsMouseDisallowed","elementCountInRow","parent","element","parentWidth","getBoundingClientRect","elementWidth","Math","floor","elementIndexInRow","elementLeft","left","parentLeft","rowNumber","elementHeight","elementTop","top","parentTop","round","getRowElements","elements","row","elementsInRow","lastRow","slice","getElementInRow","indexInRow","rowElements","Direction","FlexDirection","EmojiButtonSelector","VisibleEmojiSelector","visible","hidden","buttonFromTarget","emojiElement","closest","emojiFromElement","originalUnified","originalUnifiedFromEmojiElement","unifiedFromEmojiElement","clientHeight","emojiTrueOffsetTop","button","closestCategory","labelHeight","categoryLabelHeight","elementOffsetTop","categoryWithoutLabel","querySelector","categoryContent","queryScrollBody","root","matches","scrollBody","emojiDistanceFromScrollTop","closestScrollBody","_closestScrollBody","scrollTop","offsetTop","elementOffsetLeft","offsetLeft","dataset","elementDataSet","isVisibleEmoji","classList","contains","isHidden","allVisibleEmojis","Array","from","querySelectorAll","lastVisibleEmoji","last","prevVisibleEmoji","prev","previousElementSibling","prevCategory","firstVisibleEmoji","parentBottom","bottom","elementBottom","firstVisibleElementInContainer","nextCategory","next","nextElementSibling","closestCategoryContent","parseNativeEmoji","hex","String","fromCodePoint","parseInt","getsuggested","mode","localStorage","recent","JSON","parse","_window2","getItem","sort","a","b","count","useCloseAllOpenToggles","variationPicker","setVariationPicker","skinToneFanOpen","setSkinToneFanOpen","useCallback","useHasOpenToggles","focusElement","requestAnimationFrame","focus","focusPrevElementSibling","focusNextElementSibling","focusFirstElementChild","firstElementChild","scrollTo","$eprBody","scrollEmojiAboveLabel","isEmojiBehindLabel","by","scrollBy","focusFirstVisibleEmoji","useSetVariationPicker","setAnchoredEmojiRef","setEmojiVariationPicker","emojiFromEvent","Boolean","parentElement","_element$parentElemen","useFocusSearchInput","useFocusCategoryNavigation","useClearSearch","applySearch","useApplySearch","focusSearchInput","setSearchTerm","toLowerCase","then","hasMatch","keyword","some","getNormalizedSearchTerm","str","trim","Button","props","type","className","clsx","styleInject","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","ClickableEmoji","hiddenOnSearch","showVariations","size","lazyLoad","hasVariations","emojiHasVariatios","ViewOnlyEmoji","fontSize","emojiToRender","NATIVE","NativeEmoji","EmojiImg","external","setEmojisThatFailedToLoad","src","alt","loading","onError","add","EmojiCategory","categoryConfig","categoryName","label","Suggested","suggestedUpdated","suggestedEmojisModeConfig","suggested","suggestedItem","original","key","EmojiList","emojiList","index","RenderCategory","filter","emojisThatFailedToLoad","isEmojiFiltered","isEmojiHidden","_filter$searchTerm","isEmojiFilteredBySearchTerm","failedToLoad","has","filteredOut","emojisToPush","hiddenCounter","isDisallowed","EmojiVariationPicker","pointerStyle","direction","Up","getMenuDirection","getTop","emojiOffsetTop","bodyRef","buttonHeight","Down","useVariationPickerTop","getPointerStyle","emojiTruOffsetLeft","clientWidth","usePointerStyle","safeEmoji","pointing-up","concat","Body","closeAllOpenToggles","addEventListener","onScroll","passive","removeEventListener","useOnScroll","mouseDownTimerRef","updateSuggested","onClick","skinToneToUse","suspectedSkinTone","activeVariationFromUnified","nextList","existing","i","min","setItem","stringify","setsuggested","getImageUrl","names","emojiClickOutput","onMouseDown","undefined","onMouseUp","useMouseDownHandlers","allowMouseMove","isMouseDisallowed","onMouseMove","useOnMouseMove","Flex","ROW","Preview","previewEmoji","setPreviewEmoji","variationPickerEmoji","allow","onEscape","onMouseOver","onEnter","onLeave","e","relatedTarget","useEmojiPreviewEvents","show","defaultText","Relative","position","useIsSearchMode","CategoryNavigation","activeCategory","setActiveCategory","scrollCategoryIntoView","$category","_BodyRef$current","visibleCategories","Map","observer","IntersectionObserver","entry","id","getAttribute","set","intersectionRatio","ratios","lastCategory","threshold","el","observe","useActiveCategoryScrollDetection","isSearchMode","categoriesConfig","tabIndex","active","Search","inc","setInc","clearSearch","placeholder","autoFocus","onChange","setFilterRef","setFilter","setter","useSetFilterRef","inputValue","nextValue","longestMatch","dict","longestMatchingKey","keys","findLongestMatch","filtered","filterEmojiObjectByKeyword","useFilter","input","CssSearch","onFocus","_event$target","KeyboardEvents","CSS_SEARCH_SELECTOR","emojiPicker","searchQuery","SkinTonePicker","isDisabled","isOpen","setIsOpen","setActiveSkinTone","open","skinToneVariation","transform","Header","getActiveElement","activeElement","useGoDownFromSearchInput","focusCategoryNavigation","useOnType","appendSearch","metaKey","ctrlKey","altKey","hasModifier","match","preventDefault","preloadedEmojs","PickerMain","PickerRootElement","AUTO","matchMedia","useThemeConfig","searchModeActive","focusSkinTonePicker","setSkinToneFanOpenState","goDownFromSearchInput","onKeyDown","hasOpenToggles","disallowMouseMove","Escape","usePickerMainKeyboardEvents","firstEmoji","ArrowRight","ArrowDown","Enter","click","onType","ArrowLeft","exitLeft","currentSkinTone","focusPrevSkinTone","useSkinTonePickerKeyboardEvents","ArrowUp","useCategoryNavigationKeyboardEvents","goUpFromBody","nextVisibleEmoji","focusNextVisibleEmoji","focusPrevVisibleEmoji","nextRowElements","allElements","currentRow","nextRow","countInRow","parentHeight","hasNextRow","nextVisibleCategory","visibleEmojiOneRowDown","exitUp","prevRowElements","prevVisibleCategory","visibleEmojiOneRowUp","focusVisibleEmojiOneRowUp","Space","useBodyKeyboardEvents","useKeyboardNavigation","url","Image","preloadEmoji","searchActive","EmojiPicker","ErrorBoundary","_this","hasError","getDerivedStateFromError","componentDidCatch","error","errorInfo","console","render","this","EmojiPickerReact"],"mappings":"0EAAYA,mGAiBIC,+BAAeC,2BAAAA,kBAC7B,OAAOA,EAAWC,KAAI,SAACC,GAAD,UAAWA,KAAKC,KAAK,aCd7BC,SACdC,IAAAA,SAIMC,EAAgBC,SAA0B,MAC1CC,EAAmBD,SAA0B,MAC7CE,EAAUF,SAA6B,MACvCG,EAAiBH,SAA+B,MAChDI,EAAoBJ,SAA6B,MACjDK,EAAwBL,SAA6B,MACrDM,EAAqBN,SAA6B,MAExD,OACEA,gBAACO,EAAkBC,UACjBC,MAAO,CACLR,iBAAAA,EACAC,QAAAA,EACAG,sBAAAA,EACAN,cAAAA,EACAI,eAAAA,EACAC,kBAAAA,EACAE,mBAAAA,IAGDR,ID7BP,SAAYP,GACVA,wCACAA,mCACAA,sBACAA,wBACAA,sBACAA,oBACAA,gCACAA,mCACAA,+CACAA,+CACAA,wBACAA,6BACAA,6BACAA,iCAdF,CAAYA,IAAAA,OCgDZ,ICvCYmB,EAKAC,EAQAC,EAMAC,EASAC,IDWNP,EAAoBP,gBAAiC,CACzDC,iBAAkBD,cAClBE,QAASF,cACTK,sBAAuBL,cACvBD,cAAeC,cACfG,eAAgBH,cAChBI,kBAAmBJ,cACnBM,mBAAoBN,gBAGtB,SAASe,IACP,OAAOf,aAAiBO,GAG1B,SAAgBS,IACd,OAAOD,IAAa,cAGtB,SAAgBE,IACd,OAAOF,IAAa,iBAGtB,SAAgBG,IACd,IAAMjB,EAAmBgB,IACzB,OAAO,SAACE,GACNlB,EAAiBmB,QAAUD,GAI/B,SAAgBE,IACd,OAAON,IAAa,QAGtB,SAAgBO,IACd,OAAOP,IAAa,eAGtB,SAAgBQ,IACd,OAAOR,IAAa,kBAGtB,SAAgBS,IACd,OAAOT,IAAa,sBAGtB,SAAgBU,IACd,OAAOV,IAAa,ydCrFVL,EAAAA,yBAAAA,4CAEVA,uBAGUC,EAAAA,qBAAAA,wCAEVA,gBACAA,oBACAA,kBACAA,uBAGUC,EAAAA,gBAAAA,+BAEVA,gBACAA,eAGUC,EAAAA,oBAAAA,yCAEVA,gBACAA,uBACAA,iBACAA,sBACAA,gBAGUC,EAAAA,qBAAAA,8CAEVA,kCACAA,kCACAA,0BACAA,gCACAA,0BACAA,oBACAA,oBACAA,gBC1CF,IAAMY,EAAkC,CACtCZ,mBAAWa,UACXb,mBAAWc,eACXd,mBAAWe,eACXf,mBAAWgB,WACXhB,mBAAWiB,cACXjB,mBAAWkB,WACXlB,mBAAWmB,QACXnB,mBAAWoB,QACXpB,mBAAWqB,OAGAC,EAAkC,CAC7CC,KAAM,gBACNC,SAAUxB,mBAAWa,WAGjBY,UACHzB,mBAAWa,WAAY,CACtBW,SAAUxB,mBAAWa,UACrBU,KAAM,qBAEPvB,mBAAWc,gBAAiB,CAC3BU,SAAUxB,mBAAWc,eACrBS,KAAM,sBAEPvB,mBAAWe,gBAAiB,CAC3BS,SAAUxB,mBAAWe,eACrBQ,KAAM,sBAEPvB,mBAAWgB,YAAa,CACvBQ,SAAUxB,mBAAWgB,WACrBO,KAAM,kBAEPvB,mBAAWiB,eAAgB,CAC1BO,SAAUxB,mBAAWiB,cACrBM,KAAM,qBAEPvB,mBAAWkB,YAAa,CACvBM,SAAUxB,mBAAWkB,WACrBK,KAAM,gBAEPvB,mBAAWmB,SAAU,CACpBK,SAAUxB,mBAAWmB,QACrBI,KAAM,aAEPvB,mBAAWoB,SAAU,CACpBI,SAAUxB,mBAAWoB,QACrBG,KAAM,aAEPvB,mBAAWqB,OAAQ,CAClBG,SAAUxB,mBAAWqB,MACrBE,KAAM,qBAIMG,EACdC,GAEA,OAAOf,EAAkBhC,KAAI,SAAA4C,GAC3B,YACKC,EAAiBD,GAChBG,GAAaA,EAAUH,IAAaG,EAAUH,gBAKxCI,EAA2BJ,GACzC,OAAOA,EAASA,kBAGFK,EAA+BL,GAC7C,OAAOA,EAASD,KAuClB,SAASO,EACPN,EACAO,GAEA,gBAFAA,IAAAA,EAA2B,IAEpBC,OAAOC,OAAOR,EAAiBD,GAAWO,YCzGnCG,EACdC,kBAAAA,IAAAA,EAA2B,IAE3B,IAAMC,EAAOC,IAEPC,EAAgBN,OAAOC,OAC3BG,EAAKE,uBACLH,EAAWG,iBAAiB,IAExBC,EAASP,OAAOC,OAAOG,EAAMD,GAE7BK,WDgENC,EACAd,kBADAc,IAAAA,EAA2C,aAC3Cd,IAAAA,EAAqC,IAErC,IAAMe,EAAQ,GAEVf,EAAUgB,iBAAmB/C,uBAAegD,SAC9CF,EAAM1C,mBAAWa,WAAaS,GAGhC,IAAMc,EAAOV,EAAqBgB,GAClC,gBAAKD,IAAAI,EAAsBC,OAIpBL,EAAqB7D,KAAI,SAAA4C,GAC9B,MAAwB,iBAAbA,EACFM,EAAwBN,EAAUkB,EAAMlB,SAI5CM,EAAwBN,EAASA,SAAUkB,EAAMlB,EAASA,WAC1DA,MAVEY,EC3EUW,CAAsBZ,EAAWK,WAAY,CAC9DG,eAAgBJ,EAAOS,sBAGzB,YACKT,GACHC,WAAAA,EACAF,cAAAA,IAIJ,SAAgBD,IACd,MAAO,CACLY,iBAAiB,EACjBT,WAAYd,IACZwB,gBAAiBnD,kBAAUoD,QAC3BC,WAAYvD,mBAAWwD,MACvBC,aAAc,KACdC,OAAQ,IACRC,gBAAgB,EAChBC,aAAc,SAGZC,EAGAC,KAEFrB,mBACKsB,GAELC,kBAAmB,SACnBC,mBAAmB,EACnBd,oBAAqBpD,uBAAemE,SACpCC,MAAOlE,cAAMmE,MACbC,MAAO,KA2BX,IAAMN,EAAmC,CACvCO,aAAc,QACdC,eAAgB,oBAChBC,aAAa,kBC5ETC,EAAgBpF,gBACpBmD,cAGckC,SAAuBvF,IAAAA,SAAauD,0IAClD,OACErD,gBAACoF,EAAc5E,UAASC,MAAOuC,EAAYK,IACxCvD,GAKP,SAAgBwF,IACd,OAAOtF,aAAiBoF,GCC1B,SAAgBG,IAEd,OADuBD,IAAfpB,WASV,SAAgBsB,IAEd,OADuBF,IAAfhC,eC7BLmC,+11ICRCC,EAAqB,CACzB7E,kBAAUoD,QACVpD,kBAAUkE,MACVlE,kBAAU8E,aACV9E,kBAAU+E,OACV/E,kBAAUgF,YACVhF,kBAAUiF,MAGCC,EAAiBjD,OAAOkD,QAAQnF,mBAAWoF,QACtD,SAACC,KAEC,OADAA,aACOA,IAET,IAGWC,EAGTT,EAAmBO,QACrB,SAACG,EAAQC,GAAT,MAAA,OACEvD,OAAOC,OAAOqD,UACXC,GAAWA,QAEhB,aDVcC,EAAW9B,SACzB,gBAAOA,EAAMiB,EAAgBpD,SAAS,YAOxBkE,EAAU/B,GACxB,OAAO8B,EAAW9B,GAAO,YAGXgC,EAAuBC,GACrC,IAAMC,EAAQD,EAAQE,MAAM,OACTD,EAAME,OAAO,EAAG,GAEnC,OAAIT,QACKO,EAAM9G,KAAK,KAGb6G,WAWOI,EAAarC,EAAkB6B,SACvCI,EAAUjC,EAAMiB,EAAgBgB,SAEtC,OAAKJ,GAAaS,EAAmBtC,sBA4BrCA,EACA6B,GAEA,OAAOA,EACHU,EAAgBvC,GAAOwC,MAAK,SAACC,GAAD,OAAeA,EAAUC,SAASb,MAC9DQ,EAAarC,GA7BV2C,CAAsB3C,EAAO6B,MAH3BI,WAMKW,EAAiB9E,SAE/B,sBAAO+E,SAAAA,EAAS/E,MAAa,YAGfgF,EACdpD,EACAuC,GAEA,kBExDqBvC,GACrB,OAAQA,GACN,KAAKvD,mBAAW4G,QACd,MAPJ,wEAQE,KAAK5G,mBAAW6G,OACd,MAPJ,sEAQE,KAAK7G,mBAAW8G,SACd,MAbJ,0EAcE,KAAK9G,mBAAWwD,MAChB,QACE,MAlBJ,qEFgEUuD,CAAOxD,GAAcuC,kBAGjBM,EAAgBvC,SAC9B,gBAAOA,EAAMiB,EAAgBkC,eAAe,YAG9Bb,EAAmBtC,GACjC,OAAOuC,EAAgBvC,GAAOZ,OAAS,WAYzBgE,GAAenB,GAC7B,GAAKA,EAAL,CAIA,GAAIoB,GAAmBpB,GACrB,OAAOoB,GAAmBpB,GAG5B,IAAMqB,EAAkBtB,EAAuBC,GAC/C,OAAOoB,GAAmBC,KAvF5B,SAAKrC,GACHA,WACAA,cACAA,iBACAA,eAJF,CAAKA,IAAAA,OA0FE,IAAMsC,GAAwBjF,OAAOkF,OAAOX,GAAQY,OAErDJ,GAEF,GAEJK,YAAW,WACTH,GAAU9B,QAAO,SAAC8B,EAAWI,GAE3B,OADAJ,EAAUlB,EAAasB,IAAUA,EAC1BJ,IACNF,OG3GE,IAAMO,GAAoC,YCDjCC,GACdC,EACAC,YAAAA,IAAAA,EAAgB,GAEhB,MAA0BC,WAAYF,GAA/BG,OAAOC,OACRC,EAAQC,SAAsB,MAepC,MAAO,CAACH,EAbR,SAA2BhI,GACzB,OAAO,IAAIoI,SAAW,SAAAC,SAChBH,EAAMvH,SACR2H,aAAaJ,EAAMvH,SAGrBuH,EAAMvH,iBAAU4H,eAAAC,EAAQf,YAAW,WACjCQ,EAASjI,GACTqI,EAAQrI,KACP8H,iBCNOW,UCRdC,ECGMC,EACAC,EFIgCvJ,IAAAA,SAChCwJ,GENAF,EAAsBR,SAAgC,IACtDS,ER0EmB/D,IAAjBlB,aQxEDmF,WAAQ,WACb,IAAMnF,EAAeoF,cAAcH,GAEnC,OAAKA,GAAsBI,OAAOC,MAAMtF,GAC/BgF,EAAoBhI,QAGtB2G,GAAU9B,QAAO,SAACqD,EAAkB9E,GAKzC,OAKN,SACEA,EACAmF,GAEA,gBPVsBnF,GACtB,OAAOgF,WAAWhF,EAAMiB,EAAgBmE,WOSjCC,CAAQrF,GAASmF,EAbhBG,CAAoBtF,EAAOJ,KAC7BkF,EAAiBzC,EAAarC,KAAU,GAGnC8E,IACNF,EAAoBhI,WACtB,CAACiI,KFVErF,ENKsBsB,IAApBtB,gBMFF+F,EAAY/J,SAA0BoI,IACtC4B,EAAmBhK,UAAsB,GACzCiK,EAAmBjK,UAAsB,GACzCkK,EAAsBlK,SAC1BsJ,GAGIa,EAAuB9B,GAAkB+B,KAAKC,MAAO,KACrDC,EAAajC,GAAkB,GAAI,KACnCkC,EAAuB/B,YAAkB,GACzCgC,EAAiBhC,WAAoBxE,GACrCyG,EAAsBjC,WAA8B,MACpDkC,EAA8BlC,WAAsB,IAAImC,KACxDC,EAA4BpC,WAA2B,QACXA,YAAS,GAApDqC,OAIP,OC7BAC,aAAU,WACR3B,GAAS,KACR,CAJHA,SDgCEnJ,gBAAC+K,GAAcvK,UACbC,MAAO,CACLgK,oBAAAA,EACAD,eAAAA,EACAR,iBAAAA,EACAC,iBAAAA,EACAW,0BAAAA,EACAF,4BAAAA,EACAX,UAAAA,EACAc,kBAAAA,EACAP,WAAAA,EACAC,qBAAAA,EACAJ,qBAAAA,EACAD,oBAAAA,IAGDpK,GF/CPoI,YAAW,WACTH,GAAU9B,QAAO,SAAC+E,EAAaxG,GAY7B,OAXyB8B,EAAW9B,GACjCyD,OACArI,KAAK,IACLqL,QAAQ,eAAgB,IACxBtE,MAAM,IAEQuE,SAAQ,SAAAC,SACvBH,EAAYG,YAAQH,EAAYG,MAAS,GAEzCH,EAAYG,GAAMtE,EAAarC,IAAUA,KAEpCwG,IACN5C,OEwCL,IAAM2C,GAAgB/K,gBAanB,CACDyK,oBAAqB,CAAC,KAAM,cAC5BD,eAAgB,CAAC3J,kBAAUoD,QAAS,cACpC+F,iBAAkB,CAAE5I,SAAS,GAC7B6I,iBAAkB,CAAE7I,SAAS,GAC7B8I,oBAAqB,CAAE9I,QAAS,IAChCwJ,0BAA2B,CAAC,KAAM,cAClCF,4BAA6B,CAAC,IAAIC,IAAO,cACzCZ,UAAW,CAAE3I,QAAS,IACtByJ,mBAAmB,EACnBP,WAAY,CAAC,GAAI,WAAA,OAAM,IAAIzB,SAAgB,iBAC3C0B,qBAAsB,EAAC,EAAO,cAC9BJ,qBAAsB,CAACC,KAAKC,MAAO,gBAOrC,SAAgBe,KAEd,OADsBpL,aAAiB+K,IAA/BhB,UASV,SAAgBsB,KAEd,OAD6BrL,aAAiB+K,IAAtCd,iBAIV,SAAgBqB,KAEd,OADuBtL,aAAiB+K,IAAhCT,WAIV,SAAgBiB,KAKd,OAD2BvL,aAAiB+K,IAApCP,eAIV,SAAgBgB,KAEd,OADwCxL,aAAiB+K,IAAjDL,4BASV,SAAgBe,KAEd,OADsCzL,aAAiB+K,IAA/CH,0BAIV,SAAgBc,KAEd,OADiC1L,aAAiB+K,IAA1CR,qBASV,SAAgBoB,KACd,IAAQxB,EAAyBnK,aAAiB+K,IAA1CZ,qBAEiByB,EAAsBzB,KAC/C,MAAO,CADwCA,KAG7C,WACEyB,EAAmBxB,KAAKC,SG3I9B,SAAgBwB,KACd,IAAMC,EAAmBT,KACzB,OAAO,WACLS,EAAiB1K,SAAU,GAI/B,SAAgB2K,KACd,IAAMD,EAAmBT,KACzB,OAAO,WACL,OAAOS,EAAiB1K,kBCpBZ4K,GACdC,EACAC,GAEA,IAAKD,IAAWC,EACd,OAAO,EAGT,IAAMC,EAAcF,EAAOG,wBAAwBpH,MAC7CqH,EAAeH,EAAQE,wBAAwBpH,MACrD,OAAOsH,KAAKC,MAAMJ,EAAcE,YAGlBG,GACdP,EACAC,GAEA,IAAKD,IAAWC,EACd,OAAO,EAGT,IAAMG,EAAeH,EAAQE,wBAAwBpH,MAC/CyH,EAAcP,EAAQE,wBAAwBM,KAC9CC,EAAaV,EAAOG,wBAAwBM,KAElD,OAAOJ,KAAKC,OAAOE,EAAcE,GAAcN,YAGjCO,GACdX,EACAC,GAEA,IAAKD,IAAWC,EACd,OAAO,EAGT,IAAMW,EAAgBX,EAAQE,wBAAwB/H,OAChDyI,EAAaZ,EAAQE,wBAAwBW,IAC7CC,EAAYf,EAAOG,wBAAwBW,IACjD,OAAOT,KAAKW,OAAOH,EAAaE,GAAaH,GAmB/C,SAASK,GACPC,EACAC,EACAC,GAEA,IAAa,IAATD,EAAY,CACd,IAAME,EAAUhB,KAAKC,OAAOY,EAASvJ,OAAS,GAAKyJ,GAGnD,OAAOF,EAASI,MAFUD,EAAUD,EACXF,EAASvJ,OAAS,EACiB,GAG9D,OAAOuJ,EAASI,MAAMH,EAAMC,GAAgBD,EAAM,GAAKC,GAiBzD,SAAgBG,GACdL,EACAC,EACAC,EACAI,GAEA,IAAMC,EAAcR,GAAeC,EAAUC,EAAKC,GAElD,OAAOK,EAAYD,IAAeC,EAAYA,EAAY9J,OAAS,IAAM,SCrEtE+J,GCxBOC,GCOCC,YAA+BrO,EAAYD,EAAWiF,OACtDsJ,GAAuB,CAClCD,GACArO,EAAYD,EAAWwO,iBACfvO,EAAYD,EAAWyO,aAC/BpO,KAAK,aAESqO,GACdC,SAEA,sBAAOA,SAAAA,EAAcC,QAAQN,OAAwB,cAWvCO,GACdlC,GAEA,IAAMmC,EAAkBC,GAAgCpC,GAClDzF,EAAU8H,GAAwBrC,GAExC,IAAKmC,EACH,MAAO,GAGT,IAAM7J,EAAQoD,GAAeyG,GAE7B,OAAK7J,EAIE,CAACA,EAAOiC,GAHN,YA0BKoG,GAAcX,SAC5B,sBAAOA,SAAAA,EAASsC,gBAAgB,WAGlBC,GAAmBvC,GACjC,IAAKA,EACH,OAAO,EAGT,IAAMwC,EAAST,GAAiB/B,GAC1B5J,EAAWqM,GAAgBD,GAG3BE,EAAcC,GAAoBvM,GAExC,OAAOwM,GAAiBJ,GAAUI,GAAiBxM,GAAYsM,WAGjDC,GAAoBvM,WAClC,IAAKA,EACH,OAAO,EAGT,IAAMyM,EAAuBzM,EAAS0M,cACpCxP,EAAYD,EAAW0P,kBAGzB,sBACG3M,SAAAA,EAAUkM,gBAAgB,mBAAMO,SAAAA,EAAsBP,gBAAgB,YAe3DU,GAAgBC,GAC9B,OAAOA,EACHA,EAAKC,QAAQ5P,EAAYD,EAAW8P,aAClCF,EACAA,EAAKH,cAAcxP,EAAYD,EAAW8P,aAC5C,cAGUC,GAA2B9K,WACzC,OAAKA,EAIEiK,GAAmBjK,sBAAU+K,GAAkB/K,WAAlBgL,EAA0BC,aAAa,GAHlE,WAMKF,GAAkBrD,SAChC,OAAKA,YAIEA,EAAQiC,QAAQ3O,EAAYD,EAAW8P,gBAHrC,KAaX,SAASP,GAAiB5C,SACxB,sBAAOA,SAAAA,EAASwD,aAAa,EAG/B,SAASC,GAAkBzD,SACzB,sBAAOA,SAAAA,EAAS0D,cAAc,WAGhBrB,GAAwB/J,WACtC,yBAqBF,SAAwB0H,SACtB,sBAAOA,SAAAA,EAAS2D,WAAW,GAJpBC,CAlBkB7B,GAAiBzJ,IAkBnC,WAAgC,QAlByB,cAGlD8J,GACd9J,GAEA,IAAMiC,EAAU8H,GAAwB/J,GAExC,OAAIiC,EACKD,EAAuBC,GAEzB,cAcOsJ,GAAe7D,GAC7B,OAAOA,EAAQ8D,UAAUC,SAAS1Q,EAAWwO,kBAG/BmC,GAAShE,GACvB,OAAKA,GAEEA,EAAQ8D,UAAUC,SAAS1Q,EAAWyO,iBAG/BmC,GAAiBlE,GAC/B,OAAKA,EAIEmE,MAAMC,KACXpE,EAAOqE,iBAAiBxC,KAJjB,YAQKyC,GAAiBrE,GAC/B,IAAKA,EAAS,OAAO,KAErB,IACOsE,EADWL,GAAiBjE,GACVqB,OAAO,MAChC,OAAKiD,EAIAT,GAAeS,GAIbA,EAHEC,GAAiBD,GAJjB,cAwBKC,GAAiBvE,GAC/B,IAAMwE,EAAOxE,EAAQyE,uBAErB,OAAKD,EAIAX,GAAeW,GAIbA,EAHED,GAAiBC,GAJjBH,GAAiBK,GAAa1E,aAUzB2E,GAAkB5E,GAChC,OAAKA,WHvGLA,EACAkB,GAEA,IAAKlB,IAAWkB,EAASvJ,OACvB,OAAO,KAGT,IAAMoJ,EAAYf,EAAOG,wBAAwBW,IAC3C+D,EAAe7E,EAAOG,wBAAwB2E,OAYpD,OAVwB5D,EAASnG,MAAK,SAAAkF,GACpC,IAAMY,EAAaZ,EAAQE,wBAAwBW,IAC7CiE,EAAgB9E,EAAQE,wBAAwB2E,OAEtD,OACGjE,GAAcE,GAAaF,GAAcgE,GACzCE,GAAiBhE,GAAagE,GAAiBF,MAI1B,KGyFnBG,CAA+BhF,EAFpBkE,GAAiBlE,IAH1B,cAQK2E,GAAa1E,GAC3B,IAAM5J,EAAWqM,GAAgBzC,GAEjC,IAAK5J,EACH,OAAO,KAGT,IAAMoO,EAAOpO,EAASqO,uBAEtB,OAAKD,EAIDR,GAASQ,GACJE,GAAaF,GAGfA,EAPE,cAUKQ,GAAahF,GAC3B,IAAM5J,EAAWqM,GAAgBzC,GAEjC,IAAK5J,EACH,OAAO,KAGT,IAAM6O,EAAO7O,EAAS8O,mBAEtB,OAAKD,EAIDjB,GAASiB,GACJD,GAAaC,GAGfA,EAPE,cAUKxC,GAAgBzC,GAC9B,OAAKA,EAGEA,EAAQiC,QAAQ3O,EAAYD,EAAW+C,WAFrC,cAKK+O,GAAuBnF,GACrC,OAAKA,EAGEA,EAAQiC,QACb3O,EAAYD,EAAW0P,kBAHhB,cC9SKqC,GAAiB7K,GAC/B,OAAOA,EACJE,MAAM,KACNjH,KAAI,SAAA6R,GAAG,OAAIC,OAAOC,cAAcC,SAASH,EAAK,QAC9C3R,KAAK,aCWM+R,GAAaC,GAC3B,IAAI,UACF,YAAK5I,UAAAC,EAAQ4I,aACX,MAAO,GAET,IAAMC,EAASC,KAAKC,wBAClBhJ,eAAAiJ,EAAQJ,aAAaK,QAhBF,oBAgB+B,MAGpD,OAAIN,IAASlR,uBAAemE,SACnBiN,EAAOK,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEC,MAAQF,EAAEE,SAGpCR,EACP,SACA,MAAO,aCvBKS,KACd,MAA8C9G,KAAvC+G,OAAiBC,SACsB/G,KAAvCgH,OAAiBC,OAiBxB,OAf4BC,eAAY,WAClCJ,GACFC,EAAmB,MAGjBC,GACFC,GAAmB,KAEpB,CACDH,EACAE,EACAD,EACAE,IAMJ,SAAgBE,KACd,IAAOL,EAAmB/G,QACnBiH,EAAmBhH,QAE1B,OAAO,WACL,QAAS8G,GAAmBE,YChChBI,GAAa5G,GACtBA,GAIL6G,uBAAsB,WACpB7G,EAAQ8G,oBAIIC,GAAwB/G,GACjCA,GAIL4G,GAFa5G,EAAQyE,iCAKPuC,GAAwBhH,GACjCA,GAIL4G,GAFa5G,EAAQkF,6BAKP+B,GAAuBjH,GAChCA,GAIL4G,GAFc5G,EAAQkH,4BCjBRC,GAASlE,EAAuBpC,YAAAA,IAAAA,EAAc,GAC5D,IAAMuG,EAAWpE,GAAgBC,GAE5BmE,GAILP,uBAAsB,WACpBO,EAAS7D,UAAY1C,EAAM,cA+BfwG,GAAsB/O,GACpC,YLiDiCA,GACjC,QAAKA,GAKH8K,GAA2B9K,GAC3BqK,GAAoBF,GAAgBnK,IKxDjCgP,CAAmBhP,GAAxB,CAIA,IAAM6K,EAAaE,GAAkB/K,GAC/BiP,EAAKnE,GAA2B9K,aAjCf2K,EAAuBsE,GAC9C,IAAMH,EAAWpE,GAAgBC,GAE5BmE,GAILP,uBAAsB,WACpBO,EAAS7D,UAAY6D,EAAS7D,UAAYgE,KA0B5CC,CAASrE,IAAcR,GAAoBF,GAAgBnK,IAAUiP,cCpCvDE,GAAuB1H,GACrC,IAAMzH,EAAQqM,GAAkB5E,GAChC6G,GAAatO,GACb+O,GAAsB/O,YCnBAoP,KACtB,IAAMC,EAAsB3S,IACnB4S,EAA2BrI,QAC9BnL,EAAqBmB,IAE3B,OAAO,SAA4ByK,GACjC,IAAO1H,EAAS4J,GAAiBlC,MAE5B1H,IAILqP,EAAoB3H,GACpB4H,EAAwBtP,GAExBuO,uBAAsB,WACpBY,GAAuBrT,EAAmBc,cCuHhD,SAAS2S,GAAetP,GACtB,IR7F6ByH,IQ6FvB/K,QAASsD,SAAAA,EAAOtD,OACtB,OR9F6B+K,EQ8FT/K,ER7Fb6S,eACL9H,SAAAA,EAASkD,QAAQvB,aACf3B,YAAAA,EAAS+H,sBAATC,EAAwB9E,QAAQvB,MQ+F7BO,GAAiBjN,GAHf,YCzIKgT,KACd,IAAMhU,EAAiBmB,IAEvB,OAAOsR,eAAY,WACjBE,GAAa3S,EAAeiB,WAC3B,CAACjB,IAeN,SAAgBiU,KACd,IAAM/T,EAAwBmB,IAE9B,OAAOoR,eAAY,WACZvS,EAAsBe,SAI3B+R,GAAuB9S,EAAsBe,WAC5C,CAACf,ICTN,SAAgBgU,KACd,IAAMC,EAAcC,KACdpU,EAAiBmB,IACjBkT,EAAmBL,KAEzB,OAAO,WACDhU,EAAeiB,UACjBjB,EAAeiB,QAAQX,MAAQ,IAGjC6T,EAAY,IACZE,KA0DJ,SAASD,KACP,IAASE,EAAiBnJ,QACpBvL,EAAgBiB,IAEtB,OAAO,SAAqBsJ,GAC1ByI,uBAAsB,WACpB0B,EAAcnK,QAAaA,SAAAA,EAAYoK,cAAgBpK,GAAYqK,MACjE,WACEtB,GAAStT,EAAcqB,QAAS,UAwB1C,SAASwT,GAASpQ,EAAkBqQ,GAClC,OAAOvO,EAAW9B,GAAOsQ,MAAK,SAACzS,GAAD,OAAUA,EAAK6E,SAAS2N,eA+CxCE,GAAwBC,GACtC,OAAKA,GAAsB,iBAARA,EAIZA,EAAIC,OAAOP,cAHT,YCzKKQ,GAAOC,GACrB,OACEnV,wCACEoV,KAAK,UACDD,GACJE,UAAWC,EAAK,UAAWH,EAAME,aAEhCF,EAAMrV,UClBb,SAASyV,GAAYC,EAAKC,QACX,IAARA,IAAiBA,EAAM,IAC5B,IAAIC,EAAWD,EAAIC,SAEnB,GAAKF,GAA2B,oBAAbG,SAAnB,CAEA,IAAIC,EAAOD,SAASC,MAAQD,SAASE,qBAAqB,QAAQ,GAC9DC,EAAQH,SAASI,cAAc,SACnCD,EAAMV,KAAO,WAEI,QAAbM,GACEE,EAAKI,WACPJ,EAAKK,aAAaH,EAAOF,EAAKI,YAKhCJ,EAAKM,YAAYJ,GAGfA,EAAMK,WACRL,EAAMK,WAAWC,QAAUZ,EAE3BM,EAAMI,YAAYP,SAASU,eAAeb,cCa9Bc,YACd9R,IAAAA,MACAiC,IAAAA,QACAuH,IAAAA,OACAuI,IAAAA,eACArS,IAAAA,eACAsS,eAAAA,gBACAC,IAAAA,KACAC,IAAAA,SAEMC,EAAgB7P,EAAmBtC,GAEzC,OACExE,gBAACkV,IACCG,UAAWC,EAAK/V,EAAWiF,cACxBjF,EAAWyO,QAASA,IACpBzO,EAAWgX,gBAAiBA,IAC5BhX,EAAWwO,UAAWC,IAAWuI,IACjChX,EAAWqX,mBAAoBD,GAAiBH,qBAErC/P,eAEFF,EAAU/B,oBACN8B,EAAW9B,IAE3BxE,gBAAC6W,IACCpQ,QAASA,EACTjC,MAAOA,EACPiS,KAAMA,EACNvS,WAAYA,EACZwS,SAAUA,cAMFG,UACdrS,IAAAA,MACAiC,IAAAA,QACAvC,IAAAA,WACAuS,IAAAA,KACAC,IAAAA,SAEMZ,EAAQ,GACVW,IACFX,EAAM9Q,MAAQ8Q,EAAMzR,OAASyR,EAAMgB,SAAcL,QAGnD,IAAMM,EAAgBvS,GAAgBoD,GAAenB,GAErD,OACEzG,gCACGkE,IAAevD,mBAAWqW,OACzBhX,gBAACiX,IAAYxQ,QAASA,EAASqP,MAAOA,IAEtC9V,gBAACkX,IACCzQ,QAASA,EACTqP,MAAOA,EACPtR,MAAeuS,EACf7S,WAAYA,EACZwS,SAAUA,KAOpB,SAASO,UACPxQ,IAAAA,QACAqP,IAAAA,MAKA,OACE9V,wBACEqV,UAAWC,EAAK/V,EAAW4X,SAAU,mCACvB1Q,EACdqP,MAAOA,GAENxE,GAAiB7K,IAKxB,SAASyQ,UACP1S,IAAAA,MACAiC,IAAAA,QACAvC,IAAAA,WACA4R,IAAAA,UACAY,SAAAA,gBAQSU,EAA6B5L,QAEtC,OACExL,uBACEqX,IAAK/P,EAAkBpD,EAAYuC,GACnC6Q,IAAK/Q,EAAU/B,GACf6Q,UAAWC,EAAK/V,EAAW4X,SAAU,iBACrCI,QAASb,EAAW,OAAS,QAC7Bc,QAKJ,WACEJ,GAA0B,SAAA1G,GAAI,OAAI,IAAI/F,IAAI+F,GAAM+G,IAAIhR,OALlDqP,MAAOA,aC7HG4B,YACdC,IAAAA,eACA7X,IAAAA,SACAkO,IAAAA,OACAuI,IAAAA,eAEMjU,EAAWI,EAA2BiV,GACtCC,EAAejV,EAA+BgV,GAEpD,OACE3X,sBACEqV,UAAWC,EAAK/V,EAAW+C,iBACxB/C,EAAWyO,QAASA,IACpBzO,EAAWgX,gBAAiBA,kBAEpBjU,eACCsV,GAEZ5X,uBAAKqV,UAAW9V,EAAWsY,OAAQD,GACnC5X,uBAAKqV,UAAW9V,EAAW0P,iBAAkBnP,aCnBnCgY,UAAYH,IAAAA,eACnBI,EAAoBpM,QACrBqM,E5B+C0B1S,IAAxBxB,oB4B9CFmU,EAAYjY,WAChB,WAAA,MAAA,gBAAM2R,GAAaqG,MAA8B,KAEjD,CAACD,EAAkBC,IAEf9T,EAAaqB,IAEnB,OACEvF,gBAAC0X,IACCC,eAAgBA,EAChBpB,kBACAvI,OAA6B,IAArBiK,EAAUrU,QAEjBqU,EAAUvY,KAAI,SAAAwY,GACb,IAAM1T,EAAQoD,GAAesQ,EAAcC,UAE3C,OAAK3T,EAKHxE,gBAACsW,IACCE,gBAAgB,EAChB/P,QAASyR,EAAczR,QACvBvC,WAAYA,EACZM,MAAOA,EACP4T,IAAKF,EAAczR,UATd,kBCXD4R,KACd,IAAM/U,EAAakC,IAEnB,OACExF,sBAAIqV,UAAW9V,EAAW+Y,WACvBhV,EAAW5D,KAAI,SAACiY,EAAgBY,GAC/B,IAAMjW,EAAWI,EAA2BiV,GAE5C,OAAIrV,IAAaxB,mBAAWa,UACnB3B,gBAAC8X,IAAUM,IAAK9V,EAAUqV,eAAgBA,IAIjD3X,gBAACwY,IACCJ,IAAK9V,EACLiW,MAAOA,EACPjW,SAAUA,EACVqV,eAAgBA,QAQ5B,SAASa,UNmFUC,EACVnO,EOjIAoO,EACDC,ED6CNJ,IAAAA,MACAjW,IAAAA,SACAqV,IAAAA,eAMMiB,GCtDCF,EAA0BlN,QPgIhBiN,EAAWrN,KAApBhK,QACDkJ,EAAcgB,QOhIfqN,EPkIC,SAAClS,GAAD,OAGT,SACEA,EACAgS,EACAnO,SAEA,SAAKmO,IAAWnO,YAIRmO,EAAOnO,KAAPuO,EAAqBpS,IAZTqS,CAA4BrS,EAASgS,EAAQnO,IOhI1D,SAAC9F,GACN,IAAMiC,EAAUI,EAAarC,GAEvBuU,EAAeL,EAAuBM,IAAIvS,GAC1CwS,EAAcN,EAAgBlS,GAEpC,MAAO,CACLsS,aAAAA,EACAE,YAAAA,EACAjL,OAAQ+K,GAAgBE,KD2CtB3U,E7BUqBgB,IAAnBhB,e6BTFJ,EAAaqB,IACbsF,EvB6DwB7K,aAAiB+K,IAAvCF,kBuB5DDL,EAAkBe,QACnBrB,EvB0E0BlK,aAAiB+K,IAAzCb,oBuBtEFgP,GACHrO,GAAqB0N,EAAQ,EAAI,GAAKnR,EAAiB9E,GAEtD6W,EAAgB,EAEd9R,EAAS6R,EAAaxZ,KAAI,SAAC8E,GAC/B,IAAMiC,EAAUI,EAAarC,EAAOgG,KACUoO,EAAcpU,GAEtD4U,IAAiBlP,EAAoB9I,QAAQqF,GAMnD,SARmCuH,QAIrBoL,IACZD,IAGEC,EACK,KAIPpZ,gBAACsW,IACC8B,IAAK3R,EACLjC,MAAOA,EACPiC,QAASA,EACTuH,SAjBI+K,aAkBJxC,iBAlBkB0C,YAmBlB/U,WAAYA,EACZwS,SAAUpS,OAKhB,OACEtE,gBAAC0X,IACCC,eAAgBA,EAGhB3J,OAAQmL,IAAkB9R,EAAOzD,QAEhCyD,GlB5EP,SAAgBgS,KACd,IAkBItM,EAAKuM,EAlBHrZ,EAAmBgB,IACnBX,EAAqBmB,IACpB+C,EAASiH,QACVvH,EAAaqB,MAgFrB,SACEjF,GAEA,IAAML,EAAmBgB,IACnBf,EAAUmB,IACZkY,EAAY5L,GAAU6L,GAE1B,MAAO,CACLC,iBAIF,WACE,OAAOF,GAJPG,OAOF,WACEH,EAAY5L,GAAU6L,GACtB,IAAIG,EAAiB,EAErB,IAAKrZ,EAAmBc,QACtB,OAAO,EAGT,IAAMiD,EAASwI,GAAcvM,EAAmBc,SAEhD,GAAInB,EAAiBmB,QAAS,CAAA,MACtBwY,EAAU1Z,EAAQkB,QAClBsN,EAAST,GAAiBhO,EAAiBmB,SAE3CyY,EAAehN,GAAc6B,GAEnCiL,EAAiBlL,GAAmBC,mBAElBkL,SAAAA,EAASnK,aAAa,GAExBkK,EAAiBtV,IAC/BkV,EAAY5L,GAAUmM,KACtBH,GAAkBE,EAAexV,GAIrC,OAAOsV,EAAiBtV,IAzHW0V,CACnCzZ,GADMoZ,IAAAA,OAAQD,IAAAA,iBAGV5F,EAAsB3S,IACtB8Y,EAkDR,SAAyB1Z,GACvB,IAAML,EAAmBgB,IACzB,OAAO,WACL,IAAM6U,EAA6B,GACnC,IAAKxV,EAAmBc,QACtB,OAAO0U,EAGT,GAAI7V,EAAiBmB,QAAS,CAC5B,IAAMsN,EAAST,GAAiBhO,EAAiBmB,SAE3CwO,WEmCuB1D,GACjC,IAAMwC,EAAST,GAAiB/B,GAC1B5J,EAAWqM,GAAgBD,GAEjC,OAAOiB,GAAkBjB,GAAUiB,GAAkBrN,GFvC9B2X,CAAmBvL,GAEtC,IAAKA,EACH,OAAOoH,EAITA,EAAMpJ,KAAOkD,SAAalB,SAAAA,EAAQwL,aAAc,EAGlD,OAAOpE,GAvEeqE,CAAgB7Z,GAElCoO,EAAST,GAAiBhO,EAAiBmB,SAE3C2M,EACJvJ,GACAkK,GACA5H,EAAmBtC,IACnBkK,EAAOsB,UAAUC,SAAS1Q,EAAWqX,oBAIlC7I,GAAW9N,EAAiBmB,SAC/B0R,GAAa7S,EAAiBmB,SAC9ByS,EAAoB,QAEpB9G,EAAM2M,IACNJ,EAAeU,KAGjB,IAAMI,EAAoB5V,EAE1B,OACExE,uBACEyV,IAAKnV,EACL+U,UAAWC,EAAK,6BAA8B,CAC5CvH,QAAAA,EACAsM,cAAeZ,MAAuB9L,GAAUmM,OAElDhE,MAAO,CAAE/I,IAAAA,IAERgB,EACG,CAAClH,EAAauT,IACXE,OAAOvT,EAAgBqT,IACvB7M,MAAM,EAAG,GACT7N,KAAI,SAAA+G,GAAO,OACVzG,gBAACsW,IACC8B,IAAK3R,EACLjC,MAAO4V,EACP3T,QAASA,EACTvC,WAAYA,EACZsS,gBAAgB,OAGtB,KACJxW,uBAAKqV,UAAU,oBAAoBS,MAAOwD,coB1EhCiB,KACd,IAAMra,EAAUmB,IAKhB,gBCb0BnB,GAC1B,IAAMsa,EAAsBjI,KAE5BzH,aAAU,WACR,IAAM8O,EAAU1Z,EAAQkB,QACxB,GAAKwY,EAYL,OARAA,EAAQa,iBAAiB,SAAUC,EAAU,CAC3CC,SAAS,IAOJ,iBACLf,GAAAA,EAASgB,oBAAoB,SAAUF,IALzC,SAASA,IACPF,OAMD,CAACta,EAASsa,IDXbK,CAAY3a,YVgBZA,GAEA,IAAM4a,EAAoBlS,WACpB6J,EAAqBmB,KACrB5J,Ef8DuBhK,aAAiB+K,IAAtCf,iBe7DC8J,EAA2BrI,QAC9B+O,EAAsBjI,KACrB/H,EAAkBe,QACnBhH,ErBQmBe,IAAjBf,aqBPCwW,EAAmBpP,QAEtBqP,EAAUhb,eACd,SAAiByE,GACf,IAAIuF,EAAiB5I,QAArB,CAIAoZ,IAEA,MAAyBzG,GAAetP,GAAjCD,OAAOiC,OAEd,GAAKjC,GAAUiC,EAAf,CAIA,IAAMwU,WpByD+BxU,GACzC,IAASyU,EAAqBzU,EAAQE,MAAM,QAC5C,OAAOjB,EAAmBwB,SAASgU,GAC/BA,EACA,KoB5DEC,CAA2B1U,IAAY+D,EAEzCuQ,aNzBuBvW,EAAkB6B,GAC7C,IAOI+U,EAPEtJ,EAASH,KAETlL,EAAUI,EAAarC,EAAO6B,GAC9BgI,EAAkBxH,EAAarC,GAEjC6W,EAAWvJ,EAAO9K,MAAK,YAAA,SAAGP,UAAuBA,KAKnD2U,EADEC,EACS,CAACA,GAAUf,OAAOxI,EAAO2G,QAAO,SAAA6C,GAAC,OAAIA,IAAMD,OAEtDA,EAAW,CACT5U,QAAAA,EACA0R,SAAU9J,EACViE,MAAO,WAEgBR,GAG3BuJ,EAAS/I,QAET8I,EAASxX,OAAS0I,KAAKiP,IAAIH,EAASxX,OAAQ,IAE5C,IAAI,eACFoF,WAAQ6I,aAAa2J,QAvDA,gBAuD0BzJ,KAAK0J,UAAUL,IAE9D,WMFEM,CAAalX,EAAOyW,GACpB1W,EA2FN,SACEC,EACAgG,GAEA,IAAM/D,EAAUI,EAAarC,EAAOgG,GACpC,MAAO,CACLA,eAAAA,EACAhG,MAAO8M,GAAiB7K,GACxBkV,qBAAYzX,GACV,OAAOoD,EAAkBpD,EAAYuC,IAEvCmV,MAAOtV,EAAW9B,GAClBiC,QAAAA,EACAD,uBAAwBK,EAAarC,IAxGtBqX,CAAiBrX,EAAOyW,GAAgBxW,OAEvD,CACE+F,EACAgQ,EACAxQ,EACAzF,EACAwW,IAIEe,EAAc9b,eAClB,SAAqByE,SACfqW,EAAkB1Z,SACpB2H,aAAa+R,EAAkB1Z,SAGjC,IAAOoD,EAASuP,GAAetP,MAE1BD,GAAUsC,EAAmBtC,KAIlCsW,EAAkB1Z,iBAAU4H,eAAAC,EAAQf,YAAW,WAC7C8B,EAAiB5I,SAAU,EAC3B0Z,EAAkB1Z,aAAU2a,EAC5BvB,IACA/H,EAAmBhO,EAAMtD,QACzB2S,EAAwBtP,KACvB,QAEL,CACEwF,EACAwQ,EACA/H,EACAqB,IAGEkI,EAAYhc,eAChB,WACM8a,EAAkB1Z,SACpB2H,aAAa+R,EAAkB1Z,SAC/B0Z,EAAkB1Z,aAAU2a,GACnB/R,EAAiB5I,SAO1B2R,uBAAsB,WACpB/I,EAAiB5I,SAAU,OAIjC,CAAC4I,IAGHc,aAAU,WACR,GAAK5K,EAAQkB,QAAb,CAGA,IAAMwY,EAAU1Z,EAAQkB,QAYxB,OAXAwY,EAAQa,iBAAiB,QAASO,EAAS,CACzCL,SAAS,IAGXf,EAAQa,iBAAiB,YAAaqB,EAAa,CACjDnB,SAAS,IAEXf,EAAQa,iBAAiB,UAAWuB,EAAW,CAC7CrB,SAAS,IAGJ,iBACLf,GAAAA,EAASgB,oBAAoB,QAASI,SACtCpB,GAAAA,EAASgB,oBAAoB,YAAakB,SAC1ClC,GAAAA,EAASgB,oBAAoB,UAAWoB,OAEzC,CAAC9b,EAAS8a,EAASc,EAAaE,IU5HnCC,CAAqB/b,GtBUvB,WACE,IAAMA,EAAUmB,IACV6a,EAAiBrQ,KACjBsQ,EAAoBpQ,KAE1BjB,aAAU,WACR,IAAM8O,EAAU1Z,EAAQkB,QAKxB,SAASgb,IACHD,KACFD,IAGJ,aATAtC,GAAAA,EAASa,iBAAiB,YAAa2B,EAAa,CAClDzB,SAAS,IAQJ,iBACLf,GAAAA,EAASgB,oBAAoB,YAAawB,MAE3C,CAAClc,EAASgc,EAAgBC,IsB5B7BE,GAGErc,uBAAKqV,UAAW9V,EAAW8P,WAAYoG,IAAKvV,GAC1CF,gBAACqZ,SACDrZ,gBAACqY,mBnBNiBiE,UACtBxc,IAAAA,SACAuV,IAAAA,cACAS,UACAyD,UAAAA,aAAY3L,GAAc2O,MAE1B,OACEvc,uBAAK8V,sBAJC,MAIoBT,UAAWC,EAAK,OAAQD,EAAWkE,IAC1DzZ,YqBRS0c,KACd,IAAMpZ,EjCmCoBkC,IAAlBlC,gBiClCgCoF,WAAuB,MAAxDiU,OAAcC,OACfxY,EAAaqB,IACZoX,EAAwBlR,QAI/B,YCNAmR,EACAF,GAEA,IAAMxc,EAAUmB,IACV8a,EAAoBpQ,KACpBmQ,EAAiBrQ,KAEvBf,aAAU,WACR,GAAK8R,EAAL,CAGA,IAAMhD,EAAU1Z,EAAQkB,QAiExB,aA/DAwY,GAAAA,EAASa,iBAAiB,UAAWoC,EAAU,CAC7ClC,SAAS,UAGXf,GAAAA,EAASa,iBAAiB,YAAaqC,GAAa,SAEpDlD,GAAAA,EAASa,iBAAiB,QAASsC,GAAS,SAE5CnD,GAAAA,EAASa,iBAAiB,WAAYuC,EAAS,CAC7CrC,SAAS,UAEXf,GAAAA,EAASa,iBAAiB,OAAQuC,GAAS,GAoDpC,iBACLpD,GAAAA,EAASgB,oBAAoB,YAAakC,SAC1ClD,GAAAA,EAASgB,oBAAoB,WAAYoC,SACzCpD,GAAAA,EAASgB,oBAAoB,QAASmC,GAAS,SAC/CnD,GAAAA,EAASgB,oBAAoB,OAAQoC,GAAS,SAC9CpD,GAAAA,EAASgB,oBAAoB,UAAWiC,IAtD1C,SAASE,EAAQE,GACf,IAAMvO,EAAST,GAAiBgP,EAAE9b,QAElC,IAAKuN,EACH,OAAOsO,IAGT,IAAMvW,EAAU8H,GAAwBG,GAClCL,EAAkBC,GAAgCI,GAExD,IAAKjI,IAAY4H,EACf,OAAO2O,IAGTN,EAAgB,CACdjW,QAAAA,EACA4H,gBAAAA,IAGJ,SAAS2O,EAAQC,GACf,GAAIA,IAGGhP,GAFiBgP,EAAEC,eAGtB,OAAOR,EAAgB,MAI3BA,EAAgB,MAElB,SAASG,EAASI,GACF,WAAVA,EAAE7E,KACJsE,EAAgB,MAIpB,SAASI,EAAYG,GACnB,IAAId,IAAJ,CAIA,IAAMzN,EAAST,GAAiBgP,EAAE9b,QAE9BuN,GACFoE,GAAapE,OAYhB,CAACxO,EAAS0c,EAAOF,EAAiBP,EAAmBD,ID/ExDiB,CAAsB/Z,EAAc+B,YAAauX,IAE5CtZ,EAAc+B,YACjB,OAAO,KAGT,IAAMX,EAAQoD,SAAe6U,SAAAA,EAAcpO,iBAErC+O,EAAgB,MAAT5Y,GAAiC,MAAhBiY,EAE9B,OACEzc,gBAACsc,IAAKjH,UAAU,eACdrV,iBAIJ,WACE,IAAMiF,QACJ0X,EAAAA,EAAwB/U,GAAexE,EAAc6B,cAEjDoY,EAAcV,EAChBpW,EAAUoW,GACVvZ,EAAc8B,eAElB,OACElF,gCACEA,2BACGod,EACCpd,gBAAC6W,IACCpQ,cAASgW,SAAAA,EAAchW,QACvBjC,MAAeA,EACfN,WAAYA,EACZuS,KAAM,KAENxR,EACFjF,gBAAC6W,IACCpQ,QAASI,EAAa5B,GACtBT,MAAOS,EACPf,WAAYA,EACZuS,KAAM,KAEN,MAGJzW,uBAAKqV,UAAU,2BADhB+H,EAEI7W,EAAkB/B,GAGqB6Y,sBE/D5BC,MACtB,OACEtd,uBAAK8V,MAAO,CAAEyH,SAAU,YAAclI,YAFGA,aAAVvV,mBCLX0d,KAGtB,QAFqBlS,iBCcPmS,KACd,ICVMvd,EACAH,IDSsCyI,WAAwB,MAA7DkV,OAAgBC,OACjBC,GCXA1d,EAAUmB,IACVtB,EAAgBiB,IAEf,SAAgCsB,SACrC,GAAKpC,EAAQkB,QAAb,CAGA,IAAMyc,WAAY3d,EAAQkB,gBAAR0c,EAAiB9O,6BAClB1M,QAGZub,GAMLxK,GAAStT,EAAcqB,QAFLyc,EAAUnO,WAAa,gBChB3CiO,GAEA,IAAMzd,EAAUmB,IAEhByJ,aAAU,WACR,IAAMiT,EAAoB,IAAIC,IACxBpE,EAAU1Z,EAAQkB,QAClB6c,EAAW,IAAIC,sBACnB,SAAAlY,GACE,GAAK4T,EAAL,CAIA,gsBAAoB5T,kBAAS,CAAA,IAAlBmY,UACHC,kBCrBoBP,EDqBKM,EAAMhd,eCpBtC0c,EAAWQ,aAAa,gBAAgB,KDqBvCN,EAAkBO,IAAIF,EAAID,EAAMI,uBCtBNV,IDyBtBW,EAASpO,MAAMC,KAAK0N,GACpBU,EAAeD,EAAOA,EAAO5a,OAAS,GAE5C,GAAuB,GAAnB6a,EAAa,GACf,OAAOd,EAAkBc,EAAa,IAGxC,cAA0BD,iBAAQ,CAA7B,WACH,QAAW,CACTb,QACA,WAIN,CACEe,UAAW,CAAC,EAAG,WAGnB9E,GAAAA,EAAStJ,iBAAiB9Q,EAAYD,EAAW+C,WAAW4I,SAAQ,SAAAyT,GAClEV,EAASW,QAAQD,QAElB,CAACze,EAASyd,IF1BbkB,CAAiClB,GACjC,IAAMmB,EAAetB,KAEfuB,EAAmBvZ,IACnBnF,EAAwBmB,IAE9B,OACExB,uBAAKqV,UAAU,mBAAmBI,IAAKpV,GACpC0e,EAAiBrf,KAAI,SAAAiY,SACdrV,EAAWI,EAA2BiV,GAC5C,OACE3X,gBAACkV,IACC8J,SAAUF,GAAgB,EAAI,EAC9BzJ,UAAWC,EAAK,yBAA0BhT,UACvC/C,EAAW0f,QAAS3c,IAAaob,MAEpCtF,IAAK9V,EACL0Y,QAAS,WACP2C,EAAkBrb,GAClBsb,EAAuBtb,iBAEbK,EAA+BgV,kBIpBvCuH,KACd,MAAsB1W,WAAS,GAAxB2W,OAAKC,OACN5E,EAAsBjI,KACtBpS,EAAiBmB,IACjB+d,EAAchL,KACdiL,EzCZwBha,IAAtBX,kByCaF4a,EzCOsBja,IAApBvB,gByCNAyb,ElB8BV,WACE,IAAMrf,EAAiBmB,IACjByI,EAAYqB,KACZqU,aA7CN,IAAM1V,EAAYqB,KAElB,OAAO,SAASsU,EACdC,GAEA,GAAsB,mBAAXA,EACT,OAAOD,EAAUC,EAAO5V,EAAU3I,UAGpC2I,EAAU3I,QAAUue,GAoCDC,GACftL,EAAcC,KAIpB,MAAO,CACLiL,SAKF,SAAkBK,GAChB,IAAMpH,EAAS1O,EAAU3I,QAEnB0e,EAAYD,EAAWnL,cAE7B,SAAI+D,GAAAA,EAASqH,IAAcA,EAAUlc,QAAU,EAC7C,OAAO0Q,EAAYwL,GAGrB,IAAMC,EA0EV,SACElL,EACAmL,GAEA,IAAKA,EACH,OAAO,KAGT,GAAIA,EAAKnL,GACP,OAAOmL,EAAKnL,GAGd,IAAMoL,EAAqBnd,OAAOod,KAAKF,GACpC7N,MAAK,SAACC,EAAGC,GAAJ,OAAUA,EAAEzO,OAASwO,EAAExO,UAC5BoD,MAAK,SAACoR,GAAD,OAASvD,EAAQ3N,SAASkR,MAElC,OAAI6H,EACKD,EAAKC,GAGP,KA9FgBE,CAAiBL,EAAWrH,GAEjD,IAAKsH,EAGH,OAAOzL,EAAYwL,GAGrBL,GAAa,SAACre,GAAD,MAAA,OACX0B,OAAOC,OAAO3B,UACX0e,GAsBT,SACEzY,EACAwN,GAEA,IAAMuL,EAAuB,GAE7B,IAAK,IAAM3Z,KAAWY,EAAQ,CAC5B,IAAM7C,EAAQ6C,EAAOZ,GAEjBmO,GAASpQ,EAAOqQ,KAClBuL,EAAS3Z,GAAWjC,GAIxB,OAAO4b,EApCYC,CAA2BN,EAAcD,UAG1DxL,EAAYwL,IA1BZxV,WAJmBgB,QAKnBnL,eAAAA,GkBzCmBmgB,GAAbd,SAEFe,QAAQpgB,SAAAA,EAAgBiB,QACxBX,QAAQ8f,SAAAA,EAAO9f,MAErB,OACET,gBAACsd,IAASjI,UAAU,wBAClBrV,gBAACwgB,IAAU/f,MAAOA,IAClBT,yBAEEuf,UAAWA,eACC,8BACZkB,QAASjG,EACTnF,UAAU,aACVD,KAAK,OACLkK,YAAaA,EACbE,SAAU,SAAC/a,GACT2a,EAAOD,EAAM,GACbjX,YAAW,mBACTsX,iBAAS/a,YAAAA,EAAOtD,eAAPuf,EAAejgB,SAASA,OAGrCgV,IAAKtV,IAEPH,uBAAKqV,UAAU,mBACfrV,gBAACkV,IACCG,UAAWC,EAAK,uBAAwB,8BACxC0F,QAASqE,GAETrf,uBAAKqV,UAAU,s6I9B7BvB,SAAK1H,GACHA,eACAA,mBAFF,CAAKA,KAAAA,gQCxBL,SAAYC,GACVA,gBACAA,sBAFF,CAAYA,KAAAA,8y+B6B2DZ,ICtBK+S,GDsBCC,GAAyBphB,EAC7BD,EAAWshB,iBACRrhB,EAAYD,EAAW+Y,WAE5B,SAASkI,UAAY/f,IAAAA,MACnB,IAAKA,EACH,OAAO,KAGT,IAAMqgB,6BAAyC/L,GAC7CtU,QAGF,OACET,0CACM4gB,OAAuBphB,EAC3BD,EAAW+C,uBACCwe,sDAIRF,aAA6BphB,EACjCD,EAAWiF,eACJsc,uDElEGC,KACd,IAAM3gB,EAAoBmB,IACpByf,E3CEwB1b,IAAtBV,oB2CDoB8G,KAArBuV,OAAQC,SAC6B3V,KAArCf,OAAgB2W,OACjB3G,EAAsBjI,KACtBiC,EAAmBL,KAEzB,OAAI6M,EACK,KAIPhhB,gBAACsd,IACCjI,UAAWC,EAAK,iBAAkB,CAChC8L,KAAMH,KAGRjhB,uBAAKqV,UAAU,uBAAuBI,IAAKrV,GACxCsF,EAAmBhG,KAAI,SAAC2hB,EAAmB/F,SACpC2D,EAASoC,IAAsB7W,EACrC,OACExK,gBAACkV,IACCY,MAAO,CACLwL,UAAWhM,iBACMgG,GAAK2F,EAAS,GAAK,SAClCA,GAAUhC,GAAU,eAGxBjE,QAAS,WACHiG,GACFE,EAAkBE,GAClB7M,KAEA0M,GAAU,GAEZ1G,KAEFpC,IAAKiJ,EACLhM,UAAWC,cAAiB+L,EAAqB,mBAC9C9hB,EAAW0f,QAASA,MAEvBD,SAAUiC,EAAS,GAAK,iBACVhC,4BAEZlZ,EAAesb,mBCvDfE,KACd,OACEvhB,gBAACsd,IAASjI,UAAU,cAClBrV,gBAACsc,IAAKjH,UAAU,sBACdrV,gBAACkf,SACDlf,gBAAC+gB,UAEH/gB,gBAACyd,mBCfS+D,KACd,OAAO7L,SAAS8L,cH4VlB,SAASC,KACP,IAAMC,EAA0BvN,KAC1B0K,EAAetB,KACftd,EAAUmB,IAEhB,OAAOuR,eACL,WACE,OAAIkM,EACKnL,GAAuBzT,EAAQkB,SAEjCugB,MAET,CAACzhB,EAASyhB,EAAyB7C,IA4CvC,SAAS8C,KACP,InB3WMzhB,EACAmU,EmB0WAuN,GnB3WA1hB,EAAiBmB,IACjBgT,EAAcC,KAEb,SAAsBS,GACvB7U,EAAeiB,SACjBjB,EAAeiB,QAAQX,SAAWN,EAAeiB,QAAQX,MAAQuU,EACjEV,EAAYS,GAAwB5U,EAAeiB,QAAQX,SAE3D6T,EAAYS,GAAwBC,MmBoWlCR,EAAmBL,KACnBqG,EAAsBjI,KAE5B,OAAO,SAAgB9N,GACrB,IAAQ2T,EAAQ3T,EAAR2T,KAeZ,SAAqB3T,GAGnB,OAFqCA,EAA7Bqd,SAA6Brd,EAApBsd,SAAoBtd,EAAXud,QAdpBC,CAAYxd,IAIZ2T,EAAI8J,MAAM,wBACZzd,EAAM0d,iBACN3H,IACAhG,IACAqN,EAAazJ,y9DA9XnB,SAAKuI,GACHA,wBACAA,oBACAA,wBACAA,0BACAA,kBACAA,gBACAA,YAPF,CAAKA,KAAAA,QIPE,IAAMyB,GAA8B,IAAIzX,aCjBvB0X,MACtB,OACEriB,gBAACkJ,QACClJ,gBAACsiB,UAH8BxiB,WAYrC,SAASwiB,cClBDpiB,EACAgE,EDiBqBpE,IAAAA,SACrBgF,E/C0BR,WACE,IAAQA,EAAUQ,IAAVR,MAER,OAAIA,IAAUlE,cAAM2hB,KiD1DE,oBAAXvZ,QAIFA,OAAOwZ,WAAW,gCAAgCpT,QjDuD5BxO,cAAMkF,KAAOlF,cAAMmE,MAG3CD,E+CjCO2d,GACRC,EAAmBlF,KACnBzd,EAAgBiB,M/C8Cf,CAAEqD,UADiBiB,KAAlBjB,OACSW,QADDA,O+C5CRX,IAAAA,OAAQW,IAAAA,OLkBlB,WAgEA,IACQ2d,EACA5iB,EACAG,EACAC,EACGyiB,EACHC,EAEAC,EpBzGA1iB,GoByCR,WACE,IjCtDM0L,ESiCA5L,EwBqBAH,EAAgBiB,IAChBqe,EAAchL,KACdhB,GxBvBAnT,EAAUmB,IAETuR,eACL,SAAC7F,GACCgG,uBAAsB,WAChB7S,EAAQkB,UACVlB,EAAQkB,QAAQqO,UAAY1C,QAIlC,CAAC7M,KwBcGC,EAAiBmB,IACjBkT,EAAmBL,KACnB4O,EAAiBlQ,KACjBmQ,GjC5DAlX,EAAmBT,KAClB,WACLS,EAAiB1K,SAAU,IiC4DvBoZ,EAAsBjI,KAEtBuQ,EAAYvZ,WAChB,WAAA,OACE,SAAmB9E,GACjB,IAAQ2T,EAAQ3T,EAAR2T,IAGR,OADA4K,IACQ5K,GAEN,KAAKuI,GAAesC,OAElB,GADAxe,EAAM0d,iBACFY,IAEF,YADAvI,IAGF6E,IACAhM,EAAS,GACTmB,QAIR,CACEnB,EACAgM,EACA7E,EACAhG,EACAuO,EACAC,IAIJlY,aAAU,WACR,IAAM1J,EAAUrB,EAAcqB,QAE9B,GAAKA,EAML,OAFAA,EAAQqZ,iBAAiB,UAAWqI,GAE7B,WACL1hB,EAAQwZ,oBAAoB,UAAWkI,MAExC,CAAC/iB,EAAeI,EAAgBkT,EAAUyP,IA5D7CI,GpBlCM9iB,EAAoBmB,IoBkGpBohB,EpBhGC/P,eAAY,WACZxS,EAAkBgB,SAIvB+R,GAAuB/S,EAAkBgB,WACxC,CAAChB,IoB2FEL,EAAgBiB,IAChBd,EAAUmB,IACVlB,EAAiBmB,IACdshB,EAA2BlX,QAC9BmX,EAAwBnB,KAExBoB,EAAYvZ,WAChB,WAAA,OACE,SAAmB9E,GACjB,IvB/FA0e,EuBiGA,OAFgB1e,EAAR2T,KAGN,KAAKuI,GAAeyC,WAClB3e,EAAM0d,iBACNS,GAAwB,GACxBD,IACA,MACF,KAAKhC,GAAe0C,UAClB5e,EAAM0d,iBACNU,IACA,MACF,KAAKlC,GAAe2C,MAClB7e,EAAM0d,iBvB1GhBrP,GAFMqQ,EAAatS,GuB6GsB3Q,EAAQkB,gBvB1GjD+hB,GAAAA,EAAYI,YuB8GV,CACEZ,EACAE,EACAD,EACA1iB,IAIJ4K,aAAU,WACR,IAAM1J,EAAUjB,EAAeiB,QAE/B,GAAKA,EAML,OAFAA,EAAQqZ,iBAAiB,UAAWqI,GAE7B,WACL1hB,EAAQwZ,oBAAoB,UAAWkI,MAExC,CAAC/iB,EAAeI,EAAgB2iB,IAGrC,WACE,IAAM1iB,EAAoBmB,IACpBiT,EAAmBL,KACnBhU,EAAiBmB,IACjBuhB,EAAwBnB,OACFhW,KAArBuV,OAAQC,OACTsC,EAAS5B,KAETkB,EAAYvZ,WAChB,WAAA,OACE,SAAmB9E,GAGjB,OAFgBA,EAAR2T,KAGN,KAAKuI,GAAe8C,UAElB,GADAhf,EAAM0d,kBACDlB,EACH,OAAOzM,IAuMMkP,EArMGlP,GAsMtBmP,EAAkBnC,QAMGmC,EhCjOVvS,oBgCkOfsS,IAGFxQ,GAAwByQ,IA/Md,MACF,KAAKhD,GAAeyC,WAElB,GADA3e,EAAM0d,kBACDlB,EACH,OAAOzM,KA8MrB,WACE,IAAMmP,EAAkBnC,KAEnBmC,GAIL1Q,GAAwB0Q,GAnNdC,GACA,MACF,KAAKjD,GAAe0C,UAClB5e,EAAM0d,iBACFlB,GACFC,GAAU,GAEZ2B,IACA,MACF,QACEW,EAAO/e,GAoLnB,IAA2Bif,EACnBC,KAjLJ,CAAC1C,EAAQzM,EAAkB0M,EAAW2B,EAAuBW,IAG/D1Y,aAAU,WACR,IAAM1J,EAAUhB,EAAkBgB,QAElC,GAAKA,EAML,OAFAA,EAAQqZ,iBAAiB,UAAWqI,GAE7B,WACL1hB,EAAQwZ,oBAAoB,UAAWkI,MAExC,CAAC1iB,EAAmBD,EAAgB8gB,EAAQ6B,IAxK/Ce,GA2KF,WACE,IAAMrP,EAAmBL,KACnB9T,EAAwBmB,IACxBtB,EAAUmB,IACVmiB,EAAS5B,KAETkB,EAAYvZ,WAChB,WAAA,OACE,SAAmB9E,GAGjB,OAFgBA,EAAR2T,KAGN,KAAKuI,GAAemD,QAClBrf,EAAM0d,iBACN3N,IACA,MACF,KAAKmM,GAAeyC,WAClB3e,EAAM0d,iBACNjP,GAAwBsO,MACxB,MACF,KAAKb,GAAe8C,UAClBhf,EAAM0d,iBACNlP,GAAwBuO,MACxB,MACF,KAAKb,GAAe0C,UAClB5e,EAAM0d,iBACNxO,GAAuBzT,EAAQkB,SAC/B,MACF,QACEoiB,EAAO/e,OAIf,CAACvE,EAASsU,EAAkBgP,IAG9B1Y,aAAU,WACR,IAAM1J,EAAUf,EAAsBe,QAEtC,GAAKA,EAML,OAFAA,EAAQqZ,iBAAiB,UAAWqI,GAE7B,WACL1hB,EAAQwZ,oBAAoB,UAAWkI,MAExC,CAACziB,EAAuBH,EAAS4iB,IA1NpCiB,GA6NF,WACE,IA2FMvP,EACAmN,EACA7C,EA7FA5e,EAAUmB,IACV2iB,GA0FAxP,EAAmBL,KACnBwN,EAA0BvN,KAC1B0K,EAAetB,KAEd5K,eACL,WACE,OAAIkM,EACKtK,IAEFmN,MAET,CAACnN,EAAkBsK,EAAc6C,KApG7BlP,EAAqBmB,KACrBmP,EAAiBlQ,KACjB2H,EAAsBjI,KAEtBiR,EAAS5B,KAETkB,EAAYvZ,WAChB,WAAA,gBAEqB9E,GACjB,IvBxMoCyH,EuBwM5BkM,EAAQ3T,EAAR2T,IAEFqJ,EAAgBxT,GAAiBuT,MAEvC,OAAQpJ,GACN,KAAKuI,GAAeyC,WAClB3e,EAAM0d,0BvB9PoBjW,GACpC,GAAKA,EAAL,CAIA,IAAMiF,WNyKQ8S,EAAiB/X,GAC/B,IAAMiF,EAAOjF,EAAQkF,mBAErB,OAAKD,EAIApB,GAAeoB,GAIbA,EAHE8S,EAAiB9S,GAJjBN,GAAkBK,GAAahF,IM7K3B+X,CAAiB/X,GAE9B,IAAKiF,EACH,OAAOwC,GAAuBzC,GAAahF,IAG7C4G,GAAa3B,GACboC,GAAsBpC,IuBmPZ+S,CAAsBzC,GACtB,MACF,KAAKd,GAAe8C,UAClBhf,EAAM0d,0BvBnPoBjW,GACpC,GAAKA,EAAL,CAIA,IAAMwE,EAAOD,GAAiBvE,GAEzBwE,GAILoC,GAAapC,GACb6C,GAAsB7C,IA9BtBoC,GAAavC,GA0BkBK,GAAa1E,MuB4OlCiY,CAAsB1C,GACtB,MACF,KAAKd,GAAe0C,UAElB,GADA5e,EAAM0d,iBACFY,IAAkB,CACpBvI,IACA,OvBzN8BtO,EuB2NJuV,IvBpN/B3O,GAqCT,SAAgC5G,GAC9B,IAAKA,EACH,OAAO,KAGT,ITlCAqM,EAEM6L,EA9BNC,EACAC,EACAjX,EAEMkX,ES0DAtV,EAAkBoC,GAAuBnF,GACzC5J,EAAWqM,GAAgBM,GAC3BxB,EAAajB,GAAkByC,EAAiB/C,GAChDkB,EAAMR,GAAUqC,EAAiB/C,GACjCsY,EAAaxY,GAAkBiD,EAAiB/C,GACtD,aTlGAD,EACAC,GAEA,IAAKD,IAAWC,EACd,OAAO,EAGT,IAAMW,EAAgBX,EAAQE,wBAAwB/H,OAChDyI,EAAaZ,EAAQE,wBAAwBW,IAC7CC,EAAYf,EAAOG,wBAAwBW,IAC3C0X,EAAexY,EAAOG,wBAAwB/H,OAEpD,OAAOiI,KAAKW,MAAMH,EAAaE,EAAYH,GAAiB4X,ESsFvDC,CAAWzV,EAAiB/C,GAAU,CACzC,IAAMyY,EAAsBzT,GAAa5O,GAEzC,OAAKqiB,EAIEnX,GACL2C,GAAiBwU,GACjB,EACAH,EACA/W,GAPO,KAkBX,OT7DA8K,ES0DE9K,GTtFF4W,ESmFElU,GAAiBlB,GTlFnBqV,ESmFElX,ETlFFC,ESmFEmX,ETjFID,EAAUD,EAAa,EA0BvBF,EAxBFG,EAAUlX,EAAgBgX,EAAYzgB,OACjC,GAGFsJ,GAAemX,EAAaE,EAASlX,IA4B1BkL,IAChB6L,EAAgBA,EAAgBxgB,OAAS,IACzC,KStBWghB,CAAuB1Y,IuBuN1B,MACF,KAAKyU,GAAemD,QAElB,GADArf,EAAM0d,iBACFY,IAAkB,CACpBvI,IACA,gBvBlPZtO,EACA2Y,GAEA,GAAK3Y,EAAL,CAIA,IAAMwE,EAoBR,SAA8BxE,GAC5B,IAAKA,EACH,OAAO,KAGT,IToBAqM,EAEMuM,EStBA7V,EAAkBoC,GAAuBnF,GACzC5J,EAAWqM,GAAgBM,GAC3BxB,EAAajB,GAAkByC,EAAiB/C,GAChDkB,EAAMR,GAAUqC,EAAiB/C,GACjCsY,EAAaxY,GAAkBiD,EAAiB/C,GAEtD,GAAY,IAARkB,EAAW,CACb,IAAM2X,EAAsBnU,GAAatO,GAEzC,OAAKyiB,EAIEvX,GACL2C,GAAiB4U,IAChB,EACDP,EACA/W,GAPO,KAWX,OTDA8K,ESKE9K,GTHIqX,EAAkB5X,GSAtBiD,GAAiBlB,GACjB7B,ETCa,ESAboX,ITMgBjM,IAChBuM,EAAgBA,EAAgBlhB,OAAS,IACzC,KSzDWohB,CAAqB9Y,GAElC,IAAKwE,EACH,OAAOmU,IAGT/R,GAAapC,GACb6C,GAAsB7C,IuBsOZuU,CAA0BxD,EAAeuC,GACzC,MACF,KAAKrD,GAAeuE,MAClBzgB,EAAM0d,iBACN1P,EAAmBhO,EAAMtD,QACzB,MACF,QACEqiB,EAAO/e,OAIf,CACEuf,EACAR,EACA/Q,EACAsQ,EACAvI,IAIJ1P,aAAU,WACR,IAAM1J,EAAUlB,EAAQkB,QAExB,GAAKA,EAML,OAFAA,EAAQqZ,iBAAiB,UAAWqI,GAE7B,WACL1hB,EAAQwZ,oBAAoB,UAAWkI,MAExC,CAAC5iB,EAAS4iB,IApSbqC,IKrBAC,GCxBMllB,EAAUmB,IACV6C,EAAaqB,IAEnBuF,aAAU,WACR,GAAI5G,IAAevD,mBAAWqW,OAA9B,CAIA,IAAM4C,EAAU1Z,EAAQkB,QAIxB,aAFAwY,GAAAA,EAASa,iBAAiB,UAAWgG,GAE9B,iBACL7G,GAAAA,EAASgB,oBAAoB,UAAW6F,IAG1C,SAASA,EAAQhc,GACf,IAAMiK,EAAST,GAAiBxJ,EAAMtD,QAEtC,GAAKuN,EAAL,CAIA,IAAOlK,EAAS4J,GAAiBM,MAE5BlK,GAIDsC,EAAmBtC,aF/B3BA,EACAN,GAEA,GAAKM,GAIDN,IAAevD,mBAAWqW,OAA9B,CAIA,IAAMvQ,EAAUI,EAAarC,GAEzB4d,GAAepJ,IAAIvS,KAIvBM,EAAgBvC,GAAO0G,SAAQ,SAAAjE,GAC7B,IASkBoe,EAAAA,EATD/d,EAAkBpD,EAAY+C,IAUnC,IAAIqe,OACZjO,IAAMgO,KAPZjD,GAAe3K,IAAIhR,KEUb8e,CAAa/gB,EAAON,OAGvB,CAAChE,EAASgE,IDNb,IAAM4R,EAAQ,CACZzR,OAAWA,OACXW,MAAUA,QAGZ,OACEhF,yBACEqV,UAAWC,EAAK/V,EAAWshB,YAAa,mBACrCthB,EAAWimB,cAAe9C,IAC3B,kBAAkB5d,IAAUlE,cAAMkF,SAEpC2P,IAAK1V,EACL+V,MAAOA,GAENhW,YGvCiB2lB,GAAYtQ,GAClC,OACEnV,gBAACH,OACCG,gBAACqF,mBAAyB8P,GACxBnV,gBAACqiB,QACCriB,gBAACuhB,SACDvhB,gBAACua,SACDva,gBAACwc,82HClBUkJ,uBAInB,WAAYvQ,gBACVwQ,cAAMxQ,UACD1M,MAAQ,CAAEmd,UAAU,uFAGpBC,yBAAP,WACE,MAAO,CAAED,UAAU,+BAGrBE,kBAAA,SAAkBC,EAAcC,GAE9BC,QAAQF,MAAM,uCAAwCA,EAAOC,MAG/DE,OAAA,WACE,OAAIC,KAAK1d,MAAMmd,SACN,KAGFO,KAAKhR,MAAMrV,aAvBqBE,2CCKzCyG,IAAAA,YACAgQ,SACAvS,WAAAA,aAAavD,mBAAWwD,YACxBuS,SAOA,OAAKjQ,EAKHzG,gBAAC6W,IACCpQ,QAASA,EACTgQ,gBAhBG,KAiBHvS,WAAYA,EACZwS,yBARK,+BCCyBvB,GAClC,OACEnV,gBAAC0lB,QACC1lB,gBAAComB,oBAAqBjR"}